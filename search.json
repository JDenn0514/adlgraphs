[{"path":"https://jdenn0514.github.io/adlgraphs/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 adlgraphs authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/articles/data_transformations.html","id":"num_rev-and-flip_val","dir":"Articles","previous_headings":"","what":"num_rev() and flip_val()","title":"Data Transformations","text":"Let’s create vector called blue measures people’s agreement statement “like color blue” set higher number means disagreement. Now, given way statement written, naturally assume higher number means agreement therefore person likes blue . However, ’s case. particularly relevant comparing means running regressions, etc. fix , just need reverse values associated labels show higher number means agreement. num_rev() . Looking example , can see labels two vectors reversed values different well. However, variable labels . way ensures overall output question stays . still get percentage people agree disagree, actual numbers underlie variable reversed. Conversely, wanted show much people dislike color blue, show many people disagree statement, however intuitive simply showing agreement negative statement. fix proble, flip valence question something like, “dislike color blue” change value labels, keep values . flip_val() . Looking , can see values blue blue_flip , value labels variable labels different. Similarly, can see values variable labels blue_flip blue_rev different, value labels .","code":"# create the vector blue <- sample(c(1:4), size = 20, replace = TRUE) # add value labels attr(blue, \"labels\") <- c(   \"Strongly agree\" = 1,    \"Somewhat agree\" = 2,    \"Somewhat disagree\" = 3,    \"Strongly disagree\" = 4 ) # add a variable label attr(blue, \"label\") <- \"I like the color blue\"  # make it a haven-labelled object (this is just for printing purposes) class(blue) <- c(\"haven_labelled\", \"vctrs_vctr\", \"double\")  # show the output and attributes str(blue) #>  int+lbl [1:20] 1, 3, 4, 3, 1, 2, 3, 3, 3, 4, 2, 1, 1, 1, 3, 4, 3, 1, 2, 2 #>  @ labels: Named num [1:4] 1 2 3 4 #>   ..- attr(*, \"names\")= chr [1:4] \"Strongly agree\" \"Somewhat agree\" \"Somewhat disagree\" \"Strongly disagree\" #>  @ label : chr \"I like the color blue\" # reverse the direction of the scale blue_rev <- num_rev(blue) # let's compare the two str(list(blue = blue, blue_rev = blue_rev)) #> List of 2 #>  $ blue    : int+lbl [1:20] 1, 3, 4, 3, 1, 2, 3, 3, 3, 4, 2, 1, 1, 1, 3, 4, 3, 1, 2, 2 #>    ..@ labels: Named num [1:4] 1 2 3 4 #>    .. ..- attr(*, \"names\")= chr [1:4] \"Strongly agree\" \"Somewhat agree\" \"Somewhat disagree\" \"Strongly disagree\" #>    ..@ label : chr \"I like the color blue\" #>  $ blue_rev: num [1:20] 4 2 1 2 4 3 2 2 2 1 ... #>   ..- attr(*, \"labels\")= Named num [1:4] 1 2 3 4 #>   .. ..- attr(*, \"names\")= chr [1:4] \"Strongly disagree\" \"Somewhat disagree\" \"Somewhat agree\" \"Strongly agree\" #>   ..- attr(*, \"label\")= chr \"I like the color blue\" #>   ..- attr(*, \"transformation\")= chr \"Reversing 'blue' while maintaining correct value labels\" blue_flip <- flip_val(blue, \"I dislike the color blue\") str(list(blue = blue, blue_rev = blue_rev, blue_flip = blue_flip)) #> List of 3 #>  $ blue     : int+lbl [1:20] 1, 3, 4, 3, 1, 2, 3, 3, 3, 4, 2, 1, 1, 1, 3, 4, 3, 1, 2, 2 #>    ..@ labels: Named num [1:4] 1 2 3 4 #>    .. ..- attr(*, \"names\")= chr [1:4] \"Strongly agree\" \"Somewhat agree\" \"Somewhat disagree\" \"Strongly disagree\" #>    ..@ label : chr \"I like the color blue\" #>  $ blue_rev : num [1:20] 4 2 1 2 4 3 2 2 2 1 ... #>   ..- attr(*, \"labels\")= Named num [1:4] 1 2 3 4 #>   .. ..- attr(*, \"names\")= chr [1:4] \"Strongly disagree\" \"Somewhat disagree\" \"Somewhat agree\" \"Strongly agree\" #>   ..- attr(*, \"label\")= chr \"I like the color blue\" #>   ..- attr(*, \"transformation\")= chr \"Reversing 'blue' while maintaining correct value labels\" #>  $ blue_flip: int+lbl [1:20] 1, 3, 4, 3, 1, 2, 3, 3, 3, 4, 2, 1, 1, 1, 3, 4, 3, 1, 2, 2 #>    ..@ labels        : Named num [1:4] 1 2 3 4 #>    .. ..- attr(*, \"names\")= chr [1:4] \"Strongly disagree\" \"Somewhat disagree\" \"Somewhat agree\" \"Strongly agree\" #>    ..@ label         : chr \"I dislike the color blue\" #>    ..@ transformation: chr \"Flipped the valance of `blue` so it is now negative by updating the label and value labels accordingly.\""},{"path":"https://jdenn0514.github.io/adlgraphs/articles/how_to_use_adl_bar_plot.html","id":"cars-bar-plot-visualization-and-style-guide","dir":"Articles","previous_headings":"","what":"CAR’s bar plot visualization and style guide","title":"Making bar plots","text":"general rules apply bar plots: title two lines main takeaway plot. Subtitle can convey additional information available rest plot. example, can help clarify plot demonstrating. Use exact question labeling whenever possible. often used axis labels can title. data point bar demonstrating directly labelled either inside outside bar. Don’t include grid lines. unnecessary since labels already labelled. Don’t label axes necessary. comes deciding direction plot, just use judgement looks best. plots used website require width 1080px comparing two bars, may better just make horizontal. However, ’s important keep aesthetic consistent throughout report presentation. instance, regularly using vertical bar plots, keep using even might look little better horizontally. change orientation may confuse readers think demonstrating something different.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/articles/how_to_use_adl_bar_plot.html","id":"simple-bar-plots","dir":"Articles","previous_headings":"CAR’s bar plot visualization and style guide","what":"Simple bar plots","title":"Making bar plots","text":"Simple bar plots ones comparing two variables, x y axis variables. use demonstrating frequencies well means. Additionally, can vertical horizontal. Now let’s look action. simple vertical frequency plot. doesn’t subtitle, rest written still applies. bar directly labelled percentage. aren’t grid lines since bars labelled directly plot title contains main takeaway (main takeaway) y-axis title labeled since columns already labeled data % symbols. x-axis title exact question wording. column directly labeled outside bar data value represents % symbol. Lastly, order bars reordered percentage since values x-axis already inherent order.  Now let’s take look two simple vertical mean plots. plot left shows average score “American Conspiracy Thinking Scale” across educational groups. American Conspiracy Thinking Scale shows average response score across four statements. plot right shows average number tropes endorsed ADL Index. plots show data label inside bottom bar, white surrounding number improve visibility plots confidence intervals demonstrating statistical significance plot right y-axis labelled. one bars “Tropes Endorsed” inside tells people numbers mean. ideal y-axis something easy understand like average number actions, statements, tropes, etc.   Now let’s take look relatively simple horizontal bar plot. principles laid previously apply well, however, differences. example, take plot . looking percentage people education level agree specific statement. Normally show stacked plot response options, occasionally want something simpler. graph vertical, easier read done horizontally. Namely, people don’t turn head read axes. notes: frequency plots horizontal, percentage labels go outside columns right. , x-axis reordered educational levels inherent order . However, something without inherent order, like race/ethnicity, reorder columns based percentage top bar highest bottom bar lowest. y-axis title obvious looking education levels. concept applies demographic groups. include titles necessary. super necessary, graph wrapped y-axis labels (line breaks), makes graph look symmetrical keeps x-axis title centered. adding line breaks try keep three maximum whenever possible. x-axis title added clarify looking .","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/articles/how_to_use_adl_bar_plot.html","id":"dodged-bar-plots","dir":"Articles","previous_headings":"CAR’s bar plot visualization and style guide","what":"Dodged bar plots","title":"Making bar plots","text":"don’t use dodged bar plots frequently, important understand use . use dodged bar plots demonstrate frequencies well mean plots. typical example compare level agreement various statements among different groups people. example, ’ll look people without college degree differ much agree statements designed measure conspiratorial mindset. Make sure legend aligned direction bars order. can see plot . Since plot horizontal bars , legend right legend items top . Furthermore, order legend items order bars. Another note: Since statements bit long, made plot horizontal wrapped ove three lines. Typically, anything two three words made horizontal bar plot. relates wrapping text, use judgement. Make sure text easy read, doesn’t overlap , relative sizes bars easy see.  Occasionally, also vertically dodged bar plots. mentioned , ’ll use axis labels large. example, comparing percentage people endorsing different numbers tropes/statements among different groups, like college graduates vs non-college graduates. Another example, comparing average score two measures, like conspiracy belief social dominance orientation, across group, like education level. ’ll demonstrate examples .","code":"#> Warning in scale_adl(palette = \"binary\", wrap_legend_labels = 25, legend_title #> = \"none\"): `n` has been deprecated as the function now automatically detects #> number of colors needed. #> Warning in scale_adl(palette = \"binary\", wrap_legend_labels = 20, legend_title #> = \"Average Score:\"): `n` has been deprecated as the function now automatically #> detects number of colors needed."},{"path":"https://jdenn0514.github.io/adlgraphs/articles/how_to_use_adl_bar_plot.html","id":"stacked-frequency-bar-plots","dir":"Articles","previous_headings":"CAR’s bar plot visualization and style guide","what":"Stacked frequency bar plots","title":"Making bar plots","text":"one common bar plots CAR uses. use horizontal stacked plots demonstrate frequencies different statements. use vertical stacked plots. general notes unique horizontal stacked plots: comparing frequencies different statements, legend almost always go top. statement goes bar instead left . bar labelled. labels white backgrounds added visibility centered within bar. two labels overlap, manually adjust spacing. order response options goes like : agree disagree; true false; favorable unfavorable; etc. used within report, important keep order response options every graph. Generally, want value highlighting come first. Oftentimes, percentage think negative statement true agree . order statements go highest (top) lowest (bottom)","code":"#> Warning in scale_adl(palette = \"likert_4\", n = 4, wrap_legend_labels = 10, : #> `n` has been deprecated as the function now automatically detects number of #> colors needed."},{"path":"https://jdenn0514.github.io/adlgraphs/articles/how_to_use_adl_bar_plot.html","id":"how-to-create-bar-plots-using-the-adlgraphs-package","dir":"Articles","previous_headings":"","what":"How to create bar plots using the adlgraphs package","title":"Making bar plots","text":"section going walk graph creation process step step. main functions package use : get_means(): Calculate means confidence intervals. get_freqs(): Calculate frequencies. pct_conv(): Convert results get_freqs() easier use graphs multiplying pct values 100 creating new variable called pct_lab takes pct values adds “%” symbol. adl_bar_plots(): Take prepared data make bar plot. scale_adl(): Set colors adjust stuff related legend theme_default(), theme_v_bar(), theme_h_bar(), theme_h_stack(): Adjust visual appearance (theme) bar plot. already included adl_bar_plot() won’t need use often.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/articles/how_to_use_adl_bar_plot.html","id":"graph-1","dir":"Articles","previous_headings":"How to create bar plots using the adlgraphs package","what":"Graph 1","title":"Making bar plots","text":"Let’s start making first graph presented vignette. First, need get data graph. , ’re going convert variable top factor variable named top_f leveraging underlying metadata make_factor() function. , use get_freqs() calculate frequencies. variable value labels, can manually make new variable factor correct response options using [case_match_fct()], like ’s . can see results exact , example requires lot code (metadata valuable!). Okay, now data, let’s make easier use graph pct_conv() function. function takes pct variable multiplies 100 takes value adds % symbol new variable called pct_lab. can see . Now data frequency plot properly set , can make bar plot. use adl_bar_plots() function simple graph, need specify x, y, col_label. set x “top_f” graph vertical response options x-axis. set y “pct” bars set heights percentage. Moreover, need y numeric value. col_label set “pct_lab” label goes outside bars.  Now need add plot title axis title using labs(). don’t need y-axis title set y = NULL. going use attr_var_label() get variable label, set x = attr_var_label(test_data$top).  Unfortunately, x-axis title long. Since using attr_var_label(), need use stringr::str_wrap() wrap x-axis title. setting 55 line break occurs 55 characters. plot title also long need fix well. One way use stringr::str_wrap() , can manually set adding \\n title. \\n indicates line break occur.","code":"# use the test data set df <- test_data %>%    # convert top_f into a factor variable based on the underlying labels   mutate(top_f = make_factor(top)) %>%    # calculate the weighted frequencies   get_freqs(top_f, wt = wts)   df #> # A tibble: 4 × 3 #>   top_f                 n   pct #> * <fct>             <dbl> <dbl> #> 1 Strongly agree     25.1 0.102 #> 2 Somewhat agree     86.1 0.351 #> 3 Somewhat disagree  75   0.306 #> 4 Strongly disagree  58.9 0.240 test_data %>%    # make top_f and set the factor levels using case_match_fct()   mutate(top_f = case_match_fct(     top,     1 ~ \"Strongly agree\",     2 ~ \"Somewhat agree\",     3 ~ \"Somewhat disagree\",     4 ~ \"Strongly disagree\"   )) %>%    # calculate the weighrted frequencies   get_freqs(top_f, wt = wts) #> # A tibble: 4 × 3 #>   top_f                 n   pct #> * <fct>             <dbl> <dbl> #> 1 Strongly agree     25.1 0.102 #> 2 Somewhat agree     86.1 0.351 #> 3 Somewhat disagree  75   0.306 #> 4 Strongly disagree  58.9 0.240 df <- df %>%    # clean up the data   pct_conv()  df #> # A tibble: 4 × 4 #>   top_f                 n   pct pct_lab #>   <fct>             <dbl> <dbl> <chr>   #> 1 Strongly agree     25.1  10.2 10.2%   #> 2 Somewhat agree     86.1  35.1 35.1%   #> 3 Somewhat disagree  75    30.6 30.6%   #> 4 Strongly disagree  58.9  24.0 24% plot <- df %>%    adl_bar_plots(     # set the x-axis to top_f so it is vertical     x = top_f,     # set the y-axis to the pct      y = pct,     # set the variable that is used for the labels     col_label = pct_lab   )   plot plot <- plot +    labs(     y = NULL,     x = attr_var_label(test_data$top),     title = \"About 40% of Americans Think an Ideal Society is Hierarchical\"   )  plot plot <- plot +   labs(     y = NULL,     x = str_wrap(attr_var_label(test_data$top), 55),     title = \"About 40% of Americans Think an Ideal\\nSociety is Hierarchical\"   ) plot"},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://jdenn0514.github.io/adlgraphs/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jacob Dennen. Author, maintainer.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Dennen J (2025). adlgraphs: Create Graphs ADL Style Branding. R package version 0.3.61, https://jdenn0514.github.io/adlgraphs/, https://github.com/JDenn0514/adlgraphs.","code":"@Manual{,   title = {adlgraphs: Create Graphs with ADL Style and Branding},   author = {Jacob Dennen},   year = {2025},   note = {R package version 0.3.61,     https://jdenn0514.github.io/adlgraphs/},   url = {https://github.com/JDenn0514/adlgraphs}, }"},{"path":[]},{"path":"https://jdenn0514.github.io/adlgraphs/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Create Graphs with ADL Style and Branding","text":"adlgraphs initially built ensure data visualizations produced Center Antisemitism Research (CAR) Anti-Defamation League (ADL) consistent ADL’s brand guidelines CAR’s data visualizations consistent cohesive. (Hence use “graphs” name.) time, focus shifted toward improving efficiency ease cleaning, analyzing, visualizing survey data, turnaround time data collection presentation analysis findings minimized much possible.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Create Graphs with ADL Style and Branding","text":"can install development version adlgraphs GitHub :","code":"# install.packages(\"pak\") pak::pak(\"JDenn0514/adlgraphs\")"},{"path":"https://jdenn0514.github.io/adlgraphs/index.html","id":"note","dir":"","previous_headings":"Installation","what":"Note","title":"Create Graphs with ADL Style and Branding","text":"package regularly updated. Sometimes updates include adding new functions, times involves updating existing functions (fixing bugs, changing operate slightly, adding additional functionality, speeding , etc.). try maintain backward compatibility, always possible. suddenly getting error message re-running old code, possible function updated check documentation make sure still using properly. still experiencing issues, please submit issue Github","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/adl_bar_plots.html","id":null,"dir":"Reference","previous_headings":"","what":"Create bar plots in ADL's style — adl_bar_plots","title":"Create bar plots in ADL's style — adl_bar_plots","text":"function allows users create different types bar plots ADL's style. wrapper around geom_col, geom_text/,geom_label, geom_errorbar. function created standardize graphs produced CAR's team cut amount time takes make graphs.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/adl_bar_plots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create bar plots in ADL's style — adl_bar_plots","text":"","code":"adl_bar_plots(   data,   x,   y,   col_label,   group = NULL,   fill = NULL,   direction = \"vertical\",   col_text_size = 3.25,   distance_from_col = 0.25,   freq_plot = TRUE,   position = NULL,   dodge_width = 0.8,   dodge_reverse = TRUE,   wrap_facet_labels = 100,   ... )"},{"path":"https://jdenn0514.github.io/adlgraphs/reference/adl_bar_plots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create bar plots in ADL's style — adl_bar_plots","text":"data dataframe tibble. can piped like normal ggplot function. x Variable goes x-axis. required. y Variable goes y-axis. required. col_label Variable provides values used labels plot. used geom_text geom_label group Explicitly set overall grouping variable. used stacked graphs dodged graphs. NULL, default, grouping variable used. Note: need set  data grouped . fill Set grouping variable inside bars colored. used stacked graphs dodged graphs. NULL, default, grouping variable used. Note: need set data grouped . direction character string indicating direction bars. two options: \"vertical\", default, bars vertical \"horizontal\" bars horizontal must set explicitly affects location text, labels, error bars. col_text_size size text inside/top columns. Default 3.25. Default web 12. distance_from_col far labels bars freq plots far bottom bar mean plots. freq_plot Logical. Determines frequency plot. TRUE, default, graph styled frequency plot bar labels appearing outside bars. FALSE, graph styled mean plot labels appearing. position character string determining plot handles grouped graph. default NULL assumes grouping variable. set \"dodge\" get dodged plot. best used comparing two groups, especially add 100. set \"stacked\" get stacked plot. used comparing multiple statements likert scales things add 100. dodge_width adjusts width dodge plot. info check position_dodge. dodge_reverse Reverses order bars text dodge plot. info check position_dodge. wrap_facet_labels Determine number characters per line labels. Uses label_wrap_gen wrap text across multiple lines. left blank, defaults 200 essence wrap text. text ... Additional arguments passed theme_default","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/adl_bar_plots.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create bar plots in ADL's style — adl_bar_plots","text":"mentioned previously, function wrapper around various {ggplot2} functions order save time making simple bar plots, dodged bar plots, stacked bar plots. result, possible combine every element graph. like , recommend using actual geoms {ggplot2}. elements included serve purpose allow customize graphs look nice. Moreover, arguments created types graphs CAR produces, namely mean plots frequency plots.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/adl_coef_plots.html","id":null,"dir":"Reference","previous_headings":"","what":"Create coefficient plots in ADL's style — adl_coef_plots","title":"Create coefficient plots in ADL's style — adl_coef_plots","text":"function allows users create coefficient plot ADL's style designed help reduce time takes make publication-ready graphs.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/adl_coef_plots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create coefficient plots in ADL's style — adl_coef_plots","text":"","code":"adl_coef_plots(   data,   x = estimate,   y = value_label,   color = NULL,   facet = var_label,   facet_order = \"original\",   wrap_facet_labels = 50,   wrap_y_labels = 20,   x_intercept = 0,   point_size = 3.5,   line_width = 1,   position = NULL,   dodge_width = 0.6,   dodge_reverse = FALSE,   ... )"},{"path":"https://jdenn0514.github.io/adlgraphs/reference/adl_coef_plots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create coefficient plots in ADL's style — adl_coef_plots","text":"data dataframe tibble. can piped like normal ggplot function. x Variable goes x-axis. y Variable goes y-axis. color Set grouping variable color dots confidence intervals colored. NULL, default, grouping variable used. Note: need set data grouped facet Set variable want plot faceted. typically used instead color argument distinguish different variables values. Default var_label can set column object set data. Must set NULL remove faceting plot. facet_order character string indicating order variables graph faceted reversed . two options: \"original\" keep original order faceting variables \"reverse\" flips order faceting variables Note: change ordering values within facet y-axis, just reorders different facets. wrap_facet_labels Determine number characters per line facet labels. Uses label_wrap wrap text across multiple lines. left blank, defaults 50. wrap_y_labels Determine number characters per line y-axis labels. Uses label_wrap wrap text across multiple lines. left blank, defaults 20. x_intercept value x_intercept set. Default 0 exponentiated models set 1. set NULL x_intercept shown. point_size size dots plot. Default 3.5. line_width thickness lines. Default position character string determining plot handles grouped graph. default NULL assumes grouping variable. set \"dodge\", create dodged plot based variable supplied color. dodge_width adjusts width dodge plot. Default 0.6. info check position_dodge. dodge_reverse Logical. set TRUE, reverses order dots confidence intervals. Default FALSE. info check position_dodge. ... Additional arguments passed theme_coef()","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/adl_coef_plots.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create coefficient plots in ADL's style — adl_coef_plots","text":"function works best used conjunction get_coefficients(). adl_coef_plots() wrapper around geom_point, geom_linerange/ geom_vline. result, possible customize every aspect graph. like , recommend using actual geoms {ggplot2}. differentiate different variables different models, use facet color arguments like normally. However, just differentiating variables, using facet argument recommended makes easier distinguish different variables compare estimates values .","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/adl_palettes.html","id":null,"dir":"Reference","previous_headings":"","what":"Complete list of available adl official color palettes — adl_palettes","title":"Complete list of available adl official color palettes — adl_palettes","text":"list color palettes choose , preview directly console.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/adl_palettes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Complete list of available adl official color palettes — adl_palettes","text":"","code":"adl_palettes"},{"path":"https://jdenn0514.github.io/adlgraphs/reference/adl_palettes.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Complete list of available adl official color palettes — adl_palettes","text":"list 9 color objects elements. primary Primary categorical color secondary Secondary categorical color tertiary Tertiary categorical color binary Palette comprised primary secondary colors (categorical) pid3 Palette partisanship/ideology (categorical) categorical Palette categorical data 7 groups (categorical) likert_6 Palette likert scales 6 response options (diverging) likert_4 Palette likert scales 4 response options (diverging) bluescale Blue scale color palette (sequential) grayscale Grayscale color palette (sequential)","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/adl_palettes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Complete list of available adl official color palettes — adl_palettes","text":"Pretty print plot methods powered prismatic package. palette stored color object enact behaviour.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/adl_palettes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Complete list of available adl official color palettes — adl_palettes","text":"","code":"adl_palettes$primary #> <colors> #> #14A2FCFF  adl_palettes$secondary #> <colors> #> #B0B1B3FF  adl_palettes$tertiary #> <colors> #> #E84C4CFF  adl_palettes$pid3 #> <colors> #> #14A2FCFF #60269EFF #E84C4CFF  adl_palettes$categorical #> <colors> #> #14A2FCFF #B0B1B3FF #E84C4CFF #0A1A50FF #FFE500FF #69DA78FF #60269EFF #FFA828FF  adl_palettes$likert_6 #> <colors> #> #0A1A50FF #005B98FF #14A2FCFF #DBDCDDFF #B0B1B3FF #595B60FF  adl_palettes$likert_4 #> <colors> #> #0A1A50FF #14A2FCFF #DBDCDDFF #595B60FF  adl_palettes$bluescale #> <colors> #> #0A1A50FF #E7E8EEFF  adl_palettes$grayscale #> NULL"},{"path":"https://jdenn0514.github.io/adlgraphs/reference/adlgraphs-package.html","id":null,"dir":"Reference","previous_headings":"","what":"adlgraphs: Create Graphs with ADL Style and Branding — adlgraphs-package","title":"adlgraphs: Create Graphs with ADL Style and Branding — adlgraphs-package","text":"main goal adlgraphs improve efficiency ease cleaning, analyzing, visualizing survey data, turnaround time data collection presentation analysis findings can minimized.","code":""},{"path":[]},{"path":"https://jdenn0514.github.io/adlgraphs/reference/adlgraphs-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"adlgraphs: Create Graphs with ADL Style and Branding — adlgraphs-package","text":"Maintainer: Jacob Dennen jdennen@adl.org","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/attr_levels.html","id":null,"dir":"Reference","previous_headings":"","what":"Get variable label — attr_levels","title":"Get variable label — attr_levels","text":"function makes easy get variable labels either individual vector data frame. NOTE: possible set modify variable labels function.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/attr_levels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get variable label — attr_levels","text":"","code":"attr_levels(x, data)"},{"path":"https://jdenn0514.github.io/adlgraphs/reference/attr_levels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get variable label — attr_levels","text":"x vector object, name column data.frame, actual data.frame object. data data.frame tibble object. specified x name column data.frame.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/attr_note.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the note attribute — attr_note","title":"Get the note attribute — attr_note","text":"function makes easy get note attribute either individual vector data frame. NOTE: possible set modify note attribute function.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/attr_note.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the note attribute — attr_note","text":"","code":"attr_note(x, data)"},{"path":"https://jdenn0514.github.io/adlgraphs/reference/attr_note.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the note attribute — attr_note","text":"x vector object, name column data.frame, actual data.frame object. data data.frame tibble object. specified x name column data.frame.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/attr_note.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the note attribute — attr_note","text":"x variable vector, string containing \"note\" attribute, one present, returned. x data.frame named vector \"note\" attribute variable returned.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/attr_question_preface.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the question_preface attribute — attr_question_preface","title":"Get the question_preface attribute — attr_question_preface","text":"function makes easy get question_preface either individual vector data frame. NOTE: possible set modify question preface attribute function.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/attr_question_preface.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the question_preface attribute — attr_question_preface","text":"","code":"attr_question_preface(x, data)"},{"path":"https://jdenn0514.github.io/adlgraphs/reference/attr_question_preface.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the question_preface attribute — attr_question_preface","text":"x vector object, name column data.frame, actual data.frame object. data data.frame tibble object. specified x name column data.frame.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/attr_question_preface.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the question_preface attribute — attr_question_preface","text":"x variable vector, string containing \"question_preface\" attribute, one present, returned. x data.frame named vector \"question_preface\" attribute variable returned.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/attr_question_preface.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the question_preface attribute — attr_question_preface","text":"","code":"# create a random vector x <- sample(c(0, 1), replace = TRUE, size = 10) # add a question preface attribute attr(x, \"question_preface\") <- \"This is a question preface\" # check to see that there is a new attribute called `question_preface` attributes(x) #> $question_preface #> [1] \"This is a question preface\" #>  # now get the question_preface attr_question_preface(x) #> [1] \"This is a question preface\"  # now let's create a realistic workflow with a data.frame -------- # create a fake dataset df <- data.frame(   x_1 = sample(c(0, 1), replace = TRUE, size = 10),   x_2 = sample(c(0, 1), replace = TRUE, size = 10),   x_3 = sample(c(0, 1), replace = TRUE, size = 10),   x_4 = sample(c(0, 1), replace = TRUE, size = 10) )   # set the variable labels attr(df$x_1, \"label\") <- \"Which of the following colors do you like? Blue\" attr(df$x_2, \"label\") <- \"Which of the following colors do you like? Red\" attr(df$x_3, \"label\") <- \"Which of the following colors do you like? Yellow\" attr(df$x_4, \"label\") <- \"Which of the following colors do you like? Purple\"   # set the value labels attr(df$x_1, \"labels\") <- c(\"Blue\" = 1) attr(df$x_2, \"labels\") <- c(\"Red\" = 1) attr(df$x_3, \"labels\") <- c(\"Yellow\" = 1) attr(df$x_4, \"labels\") <- c(\"Purple\" = 1)  # check the attributes   # add the question prefaces and update the variable labels for each column in df for(x in names(df)) {   df[[x]] <- set_question_preface(x, df) }  # now if I'm curious what the question prefaces are for the df, I can easily # see all of them using `attr_question_preface` attr_question_preface(df) #> $x_1 #> [1] \"Which of the following colors do you like?\" #>  #> $x_2 #> [1] \"Which of the following colors do you like?\" #>  #> $x_3 #> [1] \"Which of the following colors do you like?\" #>  #> $x_4 #> [1] \"Which of the following colors do you like?\" #>"},{"path":"https://jdenn0514.github.io/adlgraphs/reference/attr_survey_flow.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the survey_flow attribute — attr_survey_flow","title":"Get the survey_flow attribute — attr_survey_flow","text":"function makes easy get survey_flow either individual vector data frame. NOTE: possible set modify question preface attribute function.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/attr_survey_flow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the survey_flow attribute — attr_survey_flow","text":"","code":"attr_survey_flow(x, data)"},{"path":"https://jdenn0514.github.io/adlgraphs/reference/attr_survey_flow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the survey_flow attribute — attr_survey_flow","text":"x vector object, name column data.frame, actual data.frame object. data data.frame tibble object. specified x name column data.frame.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/attr_survey_flow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the survey_flow attribute — attr_survey_flow","text":"x variable vector, string containing \"survey_flow\" attribute, one present, returned. x data.frame named vector \"survey_flow\" attribute variable returned.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/attr_transformation.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the transformation attribute — attr_transformation","title":"Get the transformation attribute — attr_transformation","text":"function makes easy get transformation attribute either individual vector data frame. NOTE: possible set modify transformation attribute function.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/attr_transformation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the transformation attribute — attr_transformation","text":"","code":"attr_transformation(x, data)"},{"path":"https://jdenn0514.github.io/adlgraphs/reference/attr_transformation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the transformation attribute — attr_transformation","text":"x vector object, name column data.frame, actual data.frame object. data data.frame tibble object. specified x name column data.frame.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/attr_transformation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the transformation attribute — attr_transformation","text":"x variable vector, string containing \"transformation\" attribute, one present, returned. x data.frame named vector \"transformation\" attribute variable returned.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/attr_val_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Get value labels — attr_val_labels","title":"Get value labels — attr_val_labels","text":"function makes easy get value labels either individual vector data frame. NOTE: possible set modify variable labels function.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/attr_val_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get value labels — attr_val_labels","text":"","code":"attr_val_labels(x, data)"},{"path":"https://jdenn0514.github.io/adlgraphs/reference/attr_val_labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get value labels — attr_val_labels","text":"x vector object, name column data.frame, actual data.frame object. data data.frame tibble object. specified x name column data.frame.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/attr_val_labels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get value labels — attr_val_labels","text":"x variable vector, named vector containing \"labels\" attribute, one present, returned. x data.frame named list comprised \"labels\" attribute variable returned.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/attr_var_label.html","id":null,"dir":"Reference","previous_headings":"","what":"Get variable label — attr_var_label","title":"Get variable label — attr_var_label","text":"function makes easy get variable labels either individual vector data frame. NOTE: possible set modify variable labels function.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/attr_var_label.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get variable label — attr_var_label","text":"","code":"attr_var_label(x, data, unlist, if_null = NULL)"},{"path":"https://jdenn0514.github.io/adlgraphs/reference/attr_var_label.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get variable label — attr_var_label","text":"x vector object, name column data.frame, actual data.frame object. data data.frame tibble object. specified x name column data.frame. unlist Logical. TRUE, default, returns named vector. FALSE, returns list. works x data.frame if_null String. determines return variable label. three options:","code":"- `NULL` - This is the default. Will return `NULL`  - \"name\" - This returns the variable name  - \"NA\" - This returns an `NA` value"},{"path":"https://jdenn0514.github.io/adlgraphs/reference/attr_var_label.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get variable label — attr_var_label","text":"x variable vector, string containing \"label\" attribute, one present, returned. x data.frame named vector list \"label\" attribute variable returned.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/attr_var_label.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get variable label — attr_var_label","text":"","code":"# load dplyr so we can see how it might work in a typical workflow library(dplyr) #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union # check for an individual vector attr_var_label(test_data$top) #> [1] \"An ideal society requires some groups to be on top and others to be on the bottom\" # get the variable label for the entire data set attr_var_label(test_data) #>                                                                                                                                                     resp_id  #>                                                                                                                             \"Unique ID for each Respondent\"  #>                                                                                                                                                         wts  #>                                                                                                                                 \"Survey weighting variable\"  #>                                                                                                                                                         edu  #>                                                           \"What is the highest level of school you have completed or the highest degree you have received?\"  #>                                                                                                                                                      pid_f3  #>                                                                                                                                    \"Political Partisanship\"  #>                                                                                                                                              pol_part_rally  #>                                                                                                      \"Attended a political rally, speech or campaign event\"  #>                                                                                                                                             pol_part_worked  #>                                                                                        \"Worked or volunteered for a political party, candidate or campaign\"  #>                                                                                                                                            pol_part_contact  #>                                                                                                                             \"Contacted an elected official\"  #>                                                                                                                                              pol_part_money  #>                                                     \"Contributed money to a candidate running for public office or to a group working to elect a candidate\"  #>                                                                                                                                             pol_part_social  #>                                        \"Publicly expressed your support for a political candidate on Facebook, Twitter/X, Instagram, or other social media\"  #>                                                                                                                                           pol_part_attended  #>                                                                     \"Attended government meetings in your community, such as city or town council meetings\"  #>                                                                                                                                               pol_part_none  #>                                                                                                                                         \"None of the above\"  #>                                                                                                                                                         top  #>                                                                         \"An ideal society requires some groups to be on top and others to be on the bottom\"  #>                                                                                                                                                    inferior  #>                                                                                                 \"Some groups of people are simply inferior to other groups\"  #>                                                                                                                                                    dominate  #>                                                                                                                   \"No one group should dominate in society\"  #>                                                                                                                                                   deserving  #>                                                                                           \"Groups at the bottom are just as deserving as groups at the top\"  #>                                                                                                                                                     special  #>                                                                  \"It is unfair for some groups in society to receive special treatment from the government\"  #>                                                                                                                                                      harder  #>                                                                                                       \"I have a harder time succeeding than my parents did\"  #>                                                                                                                                                  controlled  #>                                                                                        \"Much of our lives are being controlled by plots hatched in secrecy\"  #>                                                                                                                                                       small  #>                                                                            \"Even though we live in a democracy, a few people will always run things anyway\"  #>                                                                                                                                                         run  #>                                                                                     \"The people who really \\\"run\\\" the country are not known to the voters\"  #>                                                                                                                                                  big_events  #> \"Big events like wars, recessions, and the outcomes of elections are controlled by small groups of people who are working in secret against the rest of us\"  #>                                                                                                                                                accept_hamas  #>                                                              \"If you had a close family member who supported Hamas, would your family and friends find it…\"  #>                                                                                                                                                  accept_isr  #>                                                             \"If you had a close family member who supported Israel, would your family and friends find it…\"  #>                                                                                                                                                dislike_jews  #>                                                                                                        \"How many of your close friends/family dislike Jews\"  #>                                                                                                                                              stick_together  #>                                                                                                             \"Jews stick together more than other Americans\"  #>                                                                                                                                                      values  #>                                                                                                                                     \"Jews share my values.\"  #>                                                                                                                                                        head  #>                                                                                                             \"Jews always like to be at the head of things.\"  #>                                                                                                                                                       loyal  #>                                                                                                            \"Jews are more loyal to Israel than to America.\"  #>                                                                                                                                              business_power  #>                                                                                                           \"Jews have too much power in the business world.\"  #>                                                                                                                                                 wall_street  #>                                                                                                  \"Jews have too much control and influence on Wall Street.\"  #>                                                                                                                                                      trad_n  #>                                                                                                                                                 \"ADL Index\"  #>                                                                                                                                                       edu_f  #>                                                           \"What is the highest level of school you have completed or the highest degree you have received?\"  #>                                                                                                                                                      edu_f2  #>                                                           \"What is the highest level of school you have completed or the highest degree you have received?\"  #>                                                                                                                                                     top_rev  #>                                                                         \"An ideal society requires some groups to be on top and others to be on the bottom\"  #>                                                                                                                                                inferior_rev  #>                                                                                                 \"Some groups of people are simply inferior to other groups\"  #>                                                                                                                                               dominate_flip  #>                                                                                                                      \"One group should dominate in society\"  #>                                                                                                                                              deserving_flip  #>                                                                                       \"Groups at the bottom are not just as deserving as groups at the top\"  #>                                                                                                                                                     sdo_sum  #>                                                                                                                              \"Social Dominance Orientation\"  #>                                                                                                                                                     sdo_avg  #>                                                                                                                              \"Social Dominance Orientation\"  #>                                                                                                                                                pol_part_sum  #>                                                                                                                                   \"Political Participation\"  #>                                                                                                                                              controlled_rev  #>                                                                                        \"Much of our lives are being controlled by plots hatched in secrecy\"  #>                                                                                                                                                   small_rev  #>                                                                            \"Even though we live in a democracy, a few people will always run things anyway\"  #>                                                                                                                                                     run_rev  #>                                                                                     \"The people who really \\\"run\\\" the country are not known to the voters\"  #>                                                                                                                                              big_events_rev  #> \"Big events like wars, recessions, and the outcomes of elections are controlled by small groups of people who are working in secret against the rest of us\"  #>                                                                                                                                                    acts_sum  #>                                                                                                                                  \"Conspiracy Theory Belief\"  #>                                                                                                                                                    acts_avg  #>                                                                                                                                  \"Conspiracy Theory Belief\"  # same, but as a list attr_var_label(test_data, unlist = FALSE) #> $resp_id #> [1] \"Unique ID for each Respondent\" #>  #> $wts #> [1] \"Survey weighting variable\" #>  #> $edu #> [1] \"What is the highest level of school you have completed or the highest degree you have received?\" #>  #> $pid_f3 #> [1] \"Political Partisanship\" #>  #> $pol_part_rally #> [1] \"Attended a political rally, speech or campaign event\" #>  #> $pol_part_worked #> [1] \"Worked or volunteered for a political party, candidate or campaign\" #>  #> $pol_part_contact #> [1] \"Contacted an elected official\" #>  #> $pol_part_money #> [1] \"Contributed money to a candidate running for public office or to a group working to elect a candidate\" #>  #> $pol_part_social #> [1] \"Publicly expressed your support for a political candidate on Facebook, Twitter/X, Instagram, or other social media\" #>  #> $pol_part_attended #> [1] \"Attended government meetings in your community, such as city or town council meetings\" #>  #> $pol_part_none #> [1] \"None of the above\" #>  #> $top #> [1] \"An ideal society requires some groups to be on top and others to be on the bottom\" #>  #> $inferior #> [1] \"Some groups of people are simply inferior to other groups\" #>  #> $dominate #> [1] \"No one group should dominate in society\" #>  #> $deserving #> [1] \"Groups at the bottom are just as deserving as groups at the top\" #>  #> $special #> [1] \"It is unfair for some groups in society to receive special treatment from the government\" #>  #> $harder #> [1] \"I have a harder time succeeding than my parents did\" #>  #> $controlled #> [1] \"Much of our lives are being controlled by plots hatched in secrecy\" #>  #> $small #> [1] \"Even though we live in a democracy, a few people will always run things anyway\" #>  #> $run #> [1] \"The people who really \\\"run\\\" the country are not known to the voters\" #>  #> $big_events #> [1] \"Big events like wars, recessions, and the outcomes of elections are controlled by small groups of people who are working in secret against the rest of us\" #>  #> $accept_hamas #> [1] \"If you had a close family member who supported Hamas, would your family and friends find it…\" #>  #> $accept_isr #> [1] \"If you had a close family member who supported Israel, would your family and friends find it…\" #>  #> $dislike_jews #> [1] \"How many of your close friends/family dislike Jews\" #>  #> $stick_together #> [1] \"Jews stick together more than other Americans\" #>  #> $values #> [1] \"Jews share my values.\" #>  #> $head #> [1] \"Jews always like to be at the head of things.\" #>  #> $loyal #> [1] \"Jews are more loyal to Israel than to America.\" #>  #> $business_power #> [1] \"Jews have too much power in the business world.\" #>  #> $wall_street #> [1] \"Jews have too much control and influence on Wall Street.\" #>  #> $trad_n #> [1] \"ADL Index\" #>  #> $edu_f #> [1] \"What is the highest level of school you have completed or the highest degree you have received?\" #>  #> $edu_f2 #> [1] \"What is the highest level of school you have completed or the highest degree you have received?\" #>  #> $top_rev #> [1] \"An ideal society requires some groups to be on top and others to be on the bottom\" #>  #> $inferior_rev #> [1] \"Some groups of people are simply inferior to other groups\" #>  #> $dominate_flip #> [1] \"One group should dominate in society\" #>  #> $deserving_flip #> [1] \"Groups at the bottom are not just as deserving as groups at the top\" #>  #> $sdo_sum #> [1] \"Social Dominance Orientation\" #>  #> $sdo_avg #> [1] \"Social Dominance Orientation\" #>  #> $pol_part_sum #> [1] \"Political Participation\" #>  #> $controlled_rev #> [1] \"Much of our lives are being controlled by plots hatched in secrecy\" #>  #> $small_rev #> [1] \"Even though we live in a democracy, a few people will always run things anyway\" #>  #> $run_rev #> [1] \"The people who really \\\"run\\\" the country are not known to the voters\" #>  #> $big_events_rev #> [1] \"Big events like wars, recessions, and the outcomes of elections are controlled by small groups of people who are working in secret against the rest of us\" #>  #> $acts_sum #> [1] \"Conspiracy Theory Belief\" #>  #> $acts_avg #> [1] \"Conspiracy Theory Belief\" #>   # now let's do it on a variable without a label top <- sample(c(1:3), 10, replace = TRUE) # if no label is present and if_null = \"name\", it will use the variable name attr_var_label(top, if_null = \"name\") #>  [1] 1 2 3 1 2 2 3 2 1 1 # if it's se to \"NA\" it will give NA attr_var_label(top, if_null = \"NA\") #> [1] NA"},{"path":"https://jdenn0514.github.io/adlgraphs/reference/case_match_fct.html","id":null,"dir":"Reference","previous_headings":"","what":"case_match with factor levels — case_match_fct","title":"case_match with factor levels — case_match_fct","text":"Recode variable using dplyr::case_match() syntax","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/case_match_fct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"case_match with factor levels — case_match_fct","text":"","code":"case_match_fct(.x, ..., .default = NULL)"},{"path":"https://jdenn0514.github.io/adlgraphs/reference/case_match_fct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"case_match with factor levels — case_match_fct","text":".x vector match . ... <dynamic-dots> sequence two-sided formulas: old_values ~ new_value. right hand side (RHS) determines output value values .x match left hand side (LHS). LHS must evaluate type vector .x. can length, allowing map multiple .x values RHS value. value repeated LHS, .e. value .x matches multiple cases, first match used. RHS inputs coerced common type. RHS input recycled size .x. .default value used values .x matched LHS inputs. NULL, default, NA used.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/case_match_fct.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"case_match with factor levels — case_match_fct","text":"factor vector size .x type common type RHS inputs .default levels defined order RHS inputs.","code":""},{"path":[]},{"path":"https://jdenn0514.github.io/adlgraphs/reference/case_match_fct.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"case_match with factor levels — case_match_fct","text":"","code":"# import dplyr so we can use their starwars dataset library(dplyr) # create a vector with a variable label species <- starwars$species %>% structure(label = \"This is a variable label\")  new_species <- case_match_fct(   species,   \"Human\" ~ \"Humanoid\",   \"Droid\" ~ \"Robot\",   c(\"Wookiee\", \"Ewok\") ~ \"Hairy\",   .default = \"Other\" )  # now let's check to see that it added the transformation metadata and the #variable label str(new_species) #>  Factor w/ 4 levels \"Humanoid\",\"Robot\",..: 1 2 2 1 1 1 1 2 1 1 ... #>  - attr(*, \"label\")= chr \"This is a variable label\" #>  - attr(*, \"transformation\")= chr \"Recoded 'species' as a factor and set the levels based on their order.\\n\\n          The data transformation is \"| __truncated__  # now let's create a variable \"new_species\" and get the frequencies for it # we can see the frequencies are in the same order we applied. starwars %>%   dplyr::mutate(     new_species = case_match_fct(       species,       \"Human\" ~ \"Humanoid\",       \"Droid\" ~ \"Robot\",       c(\"Wookiee\", \"Ewok\") ~ \"Hairy\",       .default = \"Other\"     )   ) %>%   dplyr::count(new_species) #> # A tibble: 4 × 2 #>   new_species     n #>   <fct>       <int> #> 1 Humanoid       35 #> 2 Robot           6 #> 3 Hairy           3 #> 4 Other          43  # now let's do the same but with dplyr::case_match() # we can see that the frequencies are in alphabetical order starwars %>%   dplyr::mutate(     new_species = dplyr::case_match(       species,       \"Human\" ~ \"Humanoid\",       \"Droid\" ~ \"Robot\",       c(\"Wookiee\", \"Ewok\") ~ \"Hairy\",       .default = \"Other\"     )   ) %>%   dplyr::count(new_species) #> # A tibble: 4 × 2 #>   new_species     n #>   <chr>       <int> #> 1 Hairy           3 #> 2 Humanoid       35 #> 3 Other          43 #> 4 Robot           6"},{"path":"https://jdenn0514.github.io/adlgraphs/reference/case_when_fct.html","id":null,"dir":"Reference","previous_headings":"","what":"case_when with factor levels — case_when_fct","title":"case_when with factor levels — case_when_fct","text":"Recode variable using dplyr::case_when() syntax","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/case_when_fct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"case_when with factor levels — case_when_fct","text":"","code":"case_when_fct(..., .default = NULL)"},{"path":"https://jdenn0514.github.io/adlgraphs/reference/case_when_fct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"case_when with factor levels — case_when_fct","text":"... <dynamic-dots> sequence two-sided formulas. left hand side (LHS) determines values match case. right hand side (RHS) provides replacement value. LHS inputs must evaluate logical vectors. RHS inputs coerced common type. inputs recycled common size. said, encourage LHS inputs size. Recycling mainly useful RHS inputs, might supply size 1 input recycled size LHS inputs. NULL inputs ignored. .default string. value used LHS inputs return either FALSE NA. NULL, default, NA used.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/case_when_fct.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"case_when with factor levels — case_when_fct","text":"vector size common size computed inputs ... type common type RHS inputs ....","code":""},{"path":[]},{"path":"https://jdenn0514.github.io/adlgraphs/reference/case_when_fct.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"case_when with factor levels — case_when_fct","text":"","code":"# load the dplyr library so we can use `mutate()` library(dplyr)  # let's use the `test_data` data set and convert `edu` to a dichotomous factor # of college degree vs no degree. I'll demonstrate this a few different ways new_data <- test_data %>%   mutate(     edu_f2 = case_when_fct(       edu %in% c(1:3) ~ \"No degree\",       # we can specify the other values explicitly like this       edu %in% c(4:5) ~ \"College degree\"     )   )  # we can see that the `edu_f2` has two levels and they are in the correct # and it attached the transformation metadata str(new_data$edu_f2) #>  Factor w/ 2 levels \"No degree\",\"College degree\": 1 1 2 1 1 2 2 2 1 1 ...  # another way of doing this is to indicate that when edu is less than 4 it # means no degree and when edu is above 3  it means college degree, like this new_data <- test_data %>%   mutate(     edu_f2 = case_when_fct(       edu < 4 ~ \"No degree\",       # we can specify the other values explicitly like this       edu > 3 ~ \"College degree\"     )   )  # let's check it again str(new_data$edu_f2) #>  Factor w/ 2 levels \"No degree\",\"College degree\": 1 1 2 1 1 2 2 2 1 1 ...  # yet another way to do it, is to use the `.default =` argument to specify # ALL other values not listed in the prior arguments new_data <- test_data %>%   mutate(     edu_f2 = case_when_fct(       edu < 4 ~ \"No degree\",       # we can specify the other values explicitly like this       .default = \"College degree\"     )   )  # let's check it again str(new_data$edu_f2) #>  Factor w/ 2 levels \"No degree\",\"College degree\": 1 1 2 1 1 2 2 2 1 1 ..."},{"path":"https://jdenn0514.github.io/adlgraphs/reference/clean_demos.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean up demographic variables — clean_demos","title":"Clean up demographic variables — clean_demos","text":"function makes easier clean demographic data really works data set specific way. designed work ADL programs surveys work case variables listed found data.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/clean_demos.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean up demographic variables — clean_demos","text":"","code":"clean_demos(df)"},{"path":"https://jdenn0514.github.io/adlgraphs/reference/clean_demos.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean up demographic variables — clean_demos","text":"df dataframe tibble. can piped like normal ggplot function.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/clean_demos.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean up demographic variables — clean_demos","text":"data.frame object","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/codebook.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a data codebook — codebook","title":"Create a data codebook — codebook","text":"function takes data.frame creates codebook. new object data.frame row contains different metadata info found within column original data set. column new data set represents different element underlying metadata. similar labelled::look_for() shows underlying metadata.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/codebook.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a data codebook — codebook","text":"","code":"codebook(data)"},{"path":"https://jdenn0514.github.io/adlgraphs/reference/codebook.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a data codebook — codebook","text":"data object class data.frame tibble","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/codebook.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a data codebook — codebook","text":"tibble number rows columns data","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/codebook.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a data codebook — codebook","text":"Currently, new data set provided function following columns: pos - position variable. variable - name variable. label - variable label. levels - variable factor, factor levels listed . value_labels - variable labelled vector, value labels listed . transformation - explanation potential data transformations variable underwent listed . useful want remember variable created without going back cleaning script. question_preface - contains question preface. elaborate, questions surveys enable respondents select multiple responses. response gets variable data. value listed supposed contain text prefaced response options. actual response option listed 'label'. survey flow - used indicate experiment sort branching involved survey flow. note - miscellaneous attribute can add random information variable fit attributes. class - class attribute variable. type - type variable. missing - Indicates many missing values . range - numeric variable, shows range values.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/codebook.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a data codebook — codebook","text":"","code":"# create the codebook test_data_codebook <- codebook(test_data) # view the codebook test_data_codebook #> # A tibble: 46 × 15 #>      pos variable      label levels value_labels transformation question_preface #>    <int> <chr>         <chr> <name> <chr>        <named list>   <chr>            #>  1     1 resp_id       Uniq… <NULL> \"\"           <NULL>          NA              #>  2     2 wts           Surv… <NULL> \"\"           <NULL>          NA              #>  3     3 edu           What… <NULL> \"1 = ''Less… <NULL>          NA              #>  4     4 pid_f3        Poli… <chr>  \"\"           <glue [1]>      NA              #>  5     5 pol_part_ral… Atte… <NULL> \"\"           <NULL>         \"In the last tw… #>  6     6 pol_part_wor… Work… <NULL> \"\"           <NULL>         \"In the last tw… #>  7     7 pol_part_con… Cont… <NULL> \"\"           <NULL>         \"In the last tw… #>  8     8 pol_part_mon… Cont… <NULL> \"\"           <NULL>         \"In the last tw… #>  9     9 pol_part_soc… Publ… <NULL> \"\"           <NULL>         \"In the last tw… #> 10    10 pol_part_att… Atte… <NULL> \"\"           <NULL>         \"In the last tw… #> # ℹ 36 more rows #> # ℹ 8 more variables: survey_flow <named list>, note <named list>, #> #   col_type <chr>, class <named list>, type <chr>, missing <int>, #> #   unique_values <int>, range <named list>"},{"path":"https://jdenn0514.github.io/adlgraphs/reference/dunnett.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Dunnett's multiple comparisons test with one control. — dunnett","title":"Run Dunnett's multiple comparisons test with one control. — dunnett","text":"dunnett() calculates Dunnett's post hoc pairwise multiple comparisons procedure. simply, calculates mean variable (x) along different levels grouping variable (treats) determines difference control/reference group level statistically significant.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/dunnett.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Dunnett's multiple comparisons test with one control. — dunnett","text":"","code":"dunnett(   data,   x,   treats = NULL,   group = NULL,   wt = NULL,   control = NULL,   conf.level = 0.95,   show_means = FALSE,   show_diffs = TRUE,   decimals = 2,   na.rm = TRUE )"},{"path":"https://jdenn0514.github.io/adlgraphs/reference/dunnett.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run Dunnett's multiple comparisons test with one control. — dunnett","text":"data data frame tibble. x numeric vector used calculate means. can string symbol. treats variable whose values used determine means statistically significantly different . factor character vector. can string symbol. group <tidy-select> selection columns group data addition treats. operates similarly .dplyr (info see ?dplyr_by). See examples see operates. wt Weights. Add weighting variable want perform Dunnett's test weighted means, control string specifies level reference group others tested. conf.level number 0 1 signifies width desired confidence interval. Default 0.95, corresponds 95% confidence interval. show_means Logical. Determines output contain means level. Default FALSE show_diffs Logical. Determines output contain difference means decimals Number decimals number rounded . Default 2. na.rm Logical. Determines NAs removed","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/dunnett.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run Dunnett's multiple comparisons test with one control. — dunnett","text":"functions also perform Dunnett's Test, like PMCMRplus::dunnettTest() DescTools::DunnettTest() name , key differences function . Firstly, function takes data frame tibble. done can either piped specified argument. See example section . Another important difference, addition group variable ability pipe grouped data frame. group specified grouped data frame piped , function still performs Dunnett test variable x variable treats, along level whatever variable(s) /specified group data grouped . can see action examples section . third key difference (IMPLEMENTED YET) output. function outputs tibble object special class enables used prettytable(). Furthermore, two distinct outputs: one means one just difference means. Lastly, function allows add weights calculate weighted means.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/dunnett.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run Dunnett's multiple comparisons test with one control. — dunnett","text":"","code":"# load dply for the pipe: %>%  library(dplyr) library(adlgraphs)  # Check to see if any of the education groups are significantly different # from the control group (in this case \"High School or Less\") for conspiracy # theory belief dunnett(test_data, \"acts_avg\", \"pid_f3\") #> # A tibble: 2 × 7 #>   pid_f3       diff     n conf.low conf.high p.value stars #> * <fct>       <dbl> <dbl>    <dbl>     <dbl>   <dbl> <chr> #> 1 Independent 0.262    57   -0.017     0.542   0.07  \".\"   #> 2 Republican  0.175    95   -0.066     0.417   0.191 \"\"    # now let's do the same but have it show the means dunnett(test_data, \"acts_avg\", \"pid_f3\", show_means = TRUE) #> # A tibble: 3 × 9 #>   pid_f3       mean  diff    sd     n conf.low conf.high p.value stars #> * <fct>       <dbl> <dbl> <dbl> <dbl>    <dbl>     <dbl>   <dbl> <chr> #> 1 Democrat     2.63 0     0.745    98     2.48      2.78  NA      NA   #> 2 Independent  2.90 0.262 0.807    57     2.68      3.11   0.07  \".\"   #> 3 Republican   2.81 0.175 0.711    95     2.66      2.95   0.191 \"\"     # now do the same as above but make \"Independent\" the control group dunnett(test_data, \"acts_avg\", \"pid_f3\", control = \"Independent\", show_means = TRUE) #> # A tibble: 3 × 9 #>   pid_f3       mean   diff    sd     n conf.low conf.high p.value stars #> * <fct>       <dbl>  <dbl> <dbl> <dbl>    <dbl>     <dbl>   <dbl> <chr> #> 1 Democrat     2.63  0     0.745    98     2.48      2.78  NA      NA   #> 2 Independent  2.90 -0.262 0.807    57     2.68      3.11   0.065 \".\"   #> 3 Republican   2.81 -0.087 0.711    95     2.66      2.95   0.694 \"\"     # now let's add in education (`edu_f2`) as the `group` variable. This let's us # compare education levels within each level of `edu_f2`. Note how the arguments # don't have to be strings dunnett(test_data, acts_avg, pid_f3, edu_f2) #> # A tibble: 4 × 8 #>   edu_f2                     pid_f3  diff     n conf.low conf.high p.value stars #> * <fct>                      <fct>  <dbl> <dbl>    <dbl>     <dbl>   <dbl> <chr> #> 1 No College Degree          Indep… 0.168    40   -0.174     0.511   0.445 \"\"    #> 2 No College Degree          Repub… 0.156    50   -0.167     0.478   0.457 \"\"    #> 3 At Least a Bachelor's Deg… Indep… 0.316    17   -0.177     0.809   0.268 \"\"    #> 4 At Least a Bachelor's Deg… Repub… 0.2      45   -0.165     0.564   0.376 \"\"     # we can also group by multiple variables. Due to a small n, I'm going to use  # `edu_f2` instead of `edu_f`.  test_data %>%    dplyr::mutate(values_f2 = make_dicho(values)) %>%    dunnett(acts_avg, treats = pid_f3, group = c(edu_f2, values_f2)) #> # A tibble: 8 × 9 #> # Groups:   edu_f2, values_f2 [4] #>   edu_f2          values_f2 pid_f3   diff     n conf.low conf.high p.value stars #> * <fct>           <fct>     <fct>   <dbl> <dbl>    <dbl>     <dbl>   <dbl> <chr> #> 1 No College Deg… True      Indep…  0.163    18   -0.304     0.631   0.656 \"\"    #> 2 No College Deg… True      Repub…  0.08     35   -0.306     0.467   0.858 \"\"    #> 3 No College Deg… False     Indep…  0.081    22   -0.44      0.602   0.914 \"\"    #> 4 No College Deg… False     Repub…  0.369    15   -0.204     0.943   0.254 \"\"    #> 5 At Least a Bac… True      Indep…  0.235    11   -0.442     0.912   0.664 \"\"    #> 6 At Least a Bac… True      Repub… -0.015    28   -0.515     0.485   0.997 \"\"    #> 7 At Least a Bac… False     Indep…  0.49      6   -0.117     1.10    0.127 \"\"    #> 8 At Least a Bac… False     Repub…  0.586    17    0.133     1.04    0.01  \"**\"   # now let's do those previous two calculations but using `dplyr::group_by()` test_data %>%    dplyr::group_by(pid_f3) %>%    dunnett(acts_avg, edu_f) #> # A tibble: 9 × 8 #>   pid_f3      edu_f               diff     n conf.low conf.high p.value stars #> * <fct>       <chr>              <dbl> <dbl>    <dbl>     <dbl>   <dbl> <chr> #> 1 Independent Some College      -0.096    14   -0.767     0.575   0.977 \"\"    #> 2 Independent Bachelor's Degree -0.054    12   -0.761     0.652   0.996 \"\"    #> 3 Independent Graduate Degree   -0.471     5   -1.46      0.518   0.553 \"\"    #> 4 Democrat    Some College      -0.111    32   -0.615     0.394   0.909 \"\"    #> 5 Democrat    Bachelor's Degree -0.346    28   -0.865     0.172   0.259 \"\"    #> 6 Democrat    Graduate Degree   -0.379    18   -0.954     0.196   0.269 \"\"    #> 7 Republican  Some College      -0.074    32   -0.57      0.423   0.967 \"\"    #> 8 Republican  Bachelor's Degree -0.204    28   -0.714     0.305   0.639 \"\"    #> 9 Republican  Graduate Degree   -0.443    17   -1.01      0.127   0.16  \"\"     # we can also group by multiple test_data %>%    dplyr::mutate(values_f2 = make_dicho(values)) %>%    dplyr::group_by(pid_f3, values_f2) %>%    dunnett(acts_avg, edu_f2) #> # A tibble: 6 × 9 #> # Groups:   pid_f3, values_f2 [6] #>   pid_f3      values_f2 edu_f2       diff     n conf.low conf.high p.value stars #> * <fct>       <fct>     <chr>       <dbl> <dbl>    <dbl>     <dbl>   <dbl> <chr> #> 1 Democrat    True      At Least … -0.169    33   -0.546     0.209   0.376 \"\"    #> 2 Democrat    False     At Least … -0.546    13   -1.04     -0.056   0.03  \"*\"   #> 3 Independent True      At Least … -0.097    11   -0.828     0.634   0.787 \"\"    #> 4 Independent False     At Least … -0.136     6   -0.81      0.537   0.681 \"\"    #> 5 Republican  True      At Least … -0.264    28   -0.623     0.095   0.146 \"\"    #> 6 Republican  False     At Least … -0.329    17   -0.76      0.101   0.129 \"\"     # If we want to show means and differences, set show_means to TRUE # we don't need to set show_diffs to TRUE since that is the default dunnett(test_data, acts_avg, edu_f, show_means = TRUE) #> # A tibble: 4 × 9 #>   edu_f                mean   diff    sd     n conf.low conf.high p.value stars #> * <fct>               <dbl>  <dbl> <dbl> <dbl>    <dbl>     <dbl>   <dbl> <chr> #> 1 High School or Less  2.93  0     0.697    64     2.76      3.10  NA      NA   #> 2 Some College         2.82 -0.106 0.742    78     2.66      2.99   0.738 \"\"    #> 3 Bachelor's Degree    2.68 -0.25  0.789    68     2.49      2.87   0.14  \"\"    #> 4 Graduate Degree      2.49 -0.436 0.719    40     2.26      2.72   0.011 \"*\"    # if we want to show means without differences, set `show_diffs = FALSE` dunnett(test_data, acts_avg, edu_f, show_means = TRUE, show_diffs = FALSE) #> # A tibble: 4 × 8 #>   edu_f                mean    sd     n conf.low conf.high p.value stars #> * <fct>               <dbl> <dbl> <dbl>    <dbl>     <dbl>   <dbl> <chr> #> 1 High School or Less  2.93 0.697    64     2.76      3.10  NA      NA   #> 2 Some College         2.82 0.742    78     2.66      2.99   0.738 \"\"    #> 3 Bachelor's Degree    2.68 0.789    68     2.49      2.87   0.14  \"\"    #> 4 Graduate Degree      2.49 0.719    40     2.26      2.72   0.011 \"*\""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/dunnett_helper.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform Dunnett's test (mostly internal function) — dunnett_helper","title":"Perform Dunnett's test (mostly internal function) — dunnett_helper","text":"function created mostly serve internal function dunnett(). things dunnett(), however, group data calculation.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/dunnett_helper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform Dunnett's test (mostly internal function) — dunnett_helper","text":"","code":"dunnett_helper(   data,   x,   treats,   wt = NULL,   control = NULL,   conf.level = 0.95,   show_means = FALSE,   show_diffs = TRUE,   decimals = 3 )"},{"path":"https://jdenn0514.github.io/adlgraphs/reference/dunnett_helper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform Dunnett's test (mostly internal function) — dunnett_helper","text":"data data frame tibble. x numeric vector used calculate means. can string symbol. treats variable whose values used determine means statistically significantly different . factor character vector. can string symbol. wt Weights. Add weighting variable want perform Dunnett's test weighted means, control string specifies level reference group others tested. conf.level number 0 1 signifies width desired confidence interval. Default 0.95, corresponds 95% confidence interval. show_means Logical. Determines output contain means level. Default FALSE show_diffs Logical. Determines output contain difference means decimals Number decimals number rounded . Default 2.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/export_bogus.html","id":null,"dir":"Reference","previous_headings":"","what":"Export data frame with only bots and duplicates — export_bogus","title":"Export data frame with only bots and duplicates — export_bogus","text":"function creates file containing responses suspected bots, duplicates, speedsters. Can create .xlsx, .sav, .csv file. uses get_bogus() hood.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/export_bogus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export data frame with only bots and duplicates — export_bogus","text":"","code":"export_bogus(   data,   filename,   export_raw_data = TRUE,   id = NULL,   duration,   cut_off = 0.3 )"},{"path":"https://jdenn0514.github.io/adlgraphs/reference/export_bogus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export data frame with only bots and duplicates — export_bogus","text":"data data.frame object want operate filename name file want create export_raw_data Logical. TRUE, default, exports raw data. FALSE, exports three columns: ID, duplicate, bot id unique ID variable. relevant export_raw_data FALSE. duration name time duration variable. Must string. cut_off Specify percentage median time used remove speedsters. Default 0.3, means people time complete 0.3 median completion time removed.","code":""},{"path":[]},{"path":"https://jdenn0514.github.io/adlgraphs/reference/export_bot_dupe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export data frame with only bots and duplicates — export_bot_dupe","text":"","code":"export_bot_dupe(data, filename, export_raw_data = TRUE, id = NULL)"},{"path":"https://jdenn0514.github.io/adlgraphs/reference/export_bot_dupe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export data frame with only bots and duplicates — export_bot_dupe","text":"data data.frame object want operate filename name file want create export_raw_data Logical. TRUE, default, exports raw data. FALSE, exports three columns: ID, duplicate, bot id unique ID variable. relevant export_raw_data FALSE.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/export_bot_dupe.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Export data frame with only bots and duplicates — export_bot_dupe","text":"export_bot_dupe() superseded function export_bogus() thing also removes speedsters. function creates file containing responses suspected bots /duplicates. Can create .xlsx, .sav, .csv file","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/flatten_labelled_vec.html","id":null,"dir":"Reference","previous_headings":"","what":"Flatten a labelled vector — flatten_labelled_vec","title":"Flatten a labelled vector — flatten_labelled_vec","text":"function \"flattens\" labelled vector string, label equal value. example vector values 1 0 1 \"Yes\" 0 \"\", output string reads: 1 = \"Yes\", 0 = \"\". can done individual vector entire data frame. vector labelled simply return NULL.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/flatten_labelled_vec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flatten a labelled vector — flatten_labelled_vec","text":"","code":"flatten_labelled_vec(x, data)"},{"path":"https://jdenn0514.github.io/adlgraphs/reference/flatten_labelled_vec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flatten a labelled vector — flatten_labelled_vec","text":"x vector object, name column data.frame, actual data.frame object. data data.frame tibble object. specified x name column data.frame.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/flatten_labelled_vec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Flatten a labelled vector — flatten_labelled_vec","text":"string x vector column, named vector x data.frame.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/flatten_labelled_vec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Flatten a labelled vector — flatten_labelled_vec","text":"","code":"library(adlgraphs) # run on a single vector flatten_labelled_vec(test_data$inferior) #> [1] \"1 = ''Strongly agree', 2 = ''Somewhat agree', 3 = ''Somewhat disagree', 4 = ''Strongly disagree'\" # run on a data frame flatten_labelled_vec(test_data) #> $resp_id #> [1] \"\" #>  #> $wts #> [1] \"\" #>  #> $edu #> [1] \"1 = ''Less than High School', 2 = ''High School or GED', 3 = ''Some College', 4 = ''Bachelor's Degree', 5 = ''Graduate Degree'\" #>  #> $pid_f3 #> [1] \"\" #>  #> $pol_part_rally #> [1] \"\" #>  #> $pol_part_worked #> [1] \"\" #>  #> $pol_part_contact #> [1] \"\" #>  #> $pol_part_money #> [1] \"\" #>  #> $pol_part_social #> [1] \"\" #>  #> $pol_part_attended #> [1] \"\" #>  #> $pol_part_none #> [1] \"\" #>  #> $top #> [1] \"1 = ''Strongly agree', 2 = ''Somewhat agree', 3 = ''Somewhat disagree', 4 = ''Strongly disagree'\" #>  #> $inferior #> [1] \"1 = ''Strongly agree', 2 = ''Somewhat agree', 3 = ''Somewhat disagree', 4 = ''Strongly disagree'\" #>  #> $dominate #> [1] \"1 = ''Strongly agree', 2 = ''Somewhat agree', 3 = ''Somewhat disagree', 4 = ''Strongly disagree'\" #>  #> $deserving #> [1] \"1 = ''Strongly agree', 2 = ''Somewhat agree', 3 = ''Somewhat disagree', 4 = ''Strongly disagree'\" #>  #> $special #> [1] \"1 = ''Strongly agree', 2 = ''Somewhat agree', 3 = ''Somewhat disagree', 4 = ''Strongly disagree'\" #>  #> $harder #> [1] \"1 = ''Strongly agree', 2 = ''Somewhat agree', 3 = ''Somewhat disagree', 4 = ''Strongly disagree'\" #>  #> $controlled #> [1] \"1 = ''Strongly agree', 2 = ''Somewhat agree', 3 = ''Somewhat disagree', 4 = ''Strongly disagree'\" #>  #> $small #> [1] \"1 = ''Strongly agree', 2 = ''Somewhat agree', 3 = ''Somewhat disagree', 4 = ''Strongly disagree'\" #>  #> $run #> [1] \"1 = ''Strongly agree', 2 = ''Somewhat agree', 3 = ''Somewhat disagree', 4 = ''Strongly disagree'\" #>  #> $big_events #> [1] \"1 = ''Strongly agree', 2 = ''Somewhat agree', 3 = ''Somewhat disagree', 4 = ''Strongly disagree'\" #>  #> $accept_hamas #> [1] \"1 = ''Totally acceptable', 2 = ''Somewhat acceptable', 3 = ''Somewhat unacceptable', 4 = ''Totally unacceptable'\" #>  #> $accept_isr #> [1] \"1 = ''Totally acceptable', 2 = ''Somewhat acceptable', 3 = ''Somewhat unacceptable', 4 = ''Totally unacceptable'\" #>  #> $dislike_jews #> [1] \"1 = ''None', 2 = ''A few', 3 = ''Some', 4 = ''Many', 5 = ''All'\" #>  #> $stick_together #> [1] \"1 = ''Mostly true', 2 = ''Somewhat true', 3 = ''Somewhat false', 4 = ''Mostly false'\" #>  #> $values #> [1] \"1 = ''Mostly true', 2 = ''Somewhat true', 3 = ''Somewhat false', 4 = ''Mostly false'\" #>  #> $head #> [1] \"1 = ''Mostly true', 2 = ''Somewhat true', 3 = ''Somewhat false', 4 = ''Mostly false'\" #>  #> $loyal #> [1] \"1 = ''Mostly true', 2 = ''Somewhat true', 3 = ''Somewhat false', 4 = ''Mostly false'\" #>  #> $business_power #> [1] \"1 = ''Mostly true', 2 = ''Somewhat true', 3 = ''Somewhat false', 4 = ''Mostly false'\" #>  #> $wall_street #> [1] \"1 = ''Mostly true', 2 = ''Somewhat true', 3 = ''Somewhat false', 4 = ''Mostly false'\" #>  #> $trad_n #> [1] \"\" #>  #> $edu_f #> [1] \"\" #>  #> $edu_f2 #> [1] \"\" #>  #> $top_rev #> [1] \"1 = ''Strongly disagree', 2 = ''Somewhat disagree', 3 = ''Somewhat agree', 4 = ''Strongly agree'\" #>  #> $inferior_rev #> [1] \"1 = ''Strongly disagree', 2 = ''Somewhat disagree', 3 = ''Somewhat agree', 4 = ''Strongly agree'\" #>  #> $dominate_flip #> [1] \"1 = ''Strongly disagree', 2 = ''Somewhat disagree', 3 = ''Somewhat agree', 4 = ''Strongly agree'\" #>  #> $deserving_flip #> [1] \"1 = ''Strongly disagree', 2 = ''Somewhat disagree', 3 = ''Somewhat agree', 4 = ''Strongly agree'\" #>  #> $sdo_sum #> [1] \"\" #>  #> $sdo_avg #> [1] \"\" #>  #> $pol_part_sum #> [1] \"\" #>  #> $controlled_rev #> [1] \"1 = ''Strongly disagree', 2 = ''Somewhat disagree', 3 = ''Somewhat agree', 4 = ''Strongly agree'\" #>  #> $small_rev #> [1] \"1 = ''Strongly disagree', 2 = ''Somewhat disagree', 3 = ''Somewhat agree', 4 = ''Strongly agree'\" #>  #> $run_rev #> [1] \"1 = ''Strongly disagree', 2 = ''Somewhat disagree', 3 = ''Somewhat agree', 4 = ''Strongly agree'\" #>  #> $big_events_rev #> [1] \"1 = ''Strongly disagree', 2 = ''Somewhat disagree', 3 = ''Somewhat agree', 4 = ''Strongly agree'\" #>  #> $acts_sum #> [1] \"\" #>  #> $acts_avg #> [1] \"\" #>"},{"path":"https://jdenn0514.github.io/adlgraphs/reference/flip_val.html","id":null,"dir":"Reference","previous_headings":"","what":"Flip the valence of a vector — flip_val","title":"Flip the valence of a vector — flip_val","text":"Reverse valence vector keeping values consistent, reversing value labels providing new variable label. reversing valence, mean changing negative statement positive one vice versa. Please check vignette better understanding exactly function (still needs updated).","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/flip_val.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flip the valence of a vector — flip_val","text":"","code":"flip_val(x, label = NULL)"},{"path":"https://jdenn0514.github.io/adlgraphs/reference/flip_val.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flip the valence of a vector — flip_val","text":"x vector class haven_labelled numeric label new variable label given x.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/flip_val.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Flip the valence of a vector — flip_val","text":"numeric vector length x","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/flip_val.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Flip the valence of a vector — flip_val","text":"","code":"# create a vector blue <- sample(c(1:4), size = 20, replace = TRUE) # add value labels attr(blue, \"labels\") <- c(   \"Strongly agree\" = 1,    \"Somewhat agree\" = 2,    \"Somewhat disagree\" = 3,    \"Strongly disagree\" = 4 ) # add a variable label attr(blue, \"label\") <- \"I like the color blue\"  # make it a haven-labelled object (this is just for printing purposes) class(blue) <- c(\"haven_labelled\", \"vctrs_vctr\", \"double\")  # flip the valence blue_flip <- flip_val(blue, \"I dislike the color blue\") # show the output comapring the two str(list(blue = blue, blue_flip = blue_flip)) #> List of 2 #>  $ blue     : int+lbl [1:20] 1, 3, 3, 1, 4, 4, 2, 4, 3, 1, 4, 1, 2, 1, 3, 1, 3, 3, 1, 1 #>    ..@ labels: Named num [1:4] 1 2 3 4 #>    .. ..- attr(*, \"names\")= chr [1:4] \"Strongly agree\" \"Somewhat agree\" \"Somewhat disagree\" \"Strongly disagree\" #>    ..@ label : chr \"I like the color blue\" #>  $ blue_flip: int+lbl [1:20] 1, 3, 3, 1, 4, 4, 2, 4, 3, 1, 4, 1, 2, 1, 3, 1, 3, 3, 1, 1 #>    ..@ labels        : Named num [1:4] 1 2 3 4 #>    .. ..- attr(*, \"names\")= chr [1:4] \"Strongly disagree\" \"Somewhat disagree\" \"Somewhat agree\" \"Strongly agree\" #>    ..@ label         : chr \"I dislike the color blue\" #>    ..@ transformation: chr \"Flipped the valance of `blue` so it is now negative by updating the label and value labels accordingly.\"  # can also be used inside of dplyr::mutate() library(dplyr)    new_df <- test_data %>%    dplyr::mutate(     # flip the valence for deserving     deserving_flip = flip_val(       deserving,        \"Groups at the bottom are not just as deserving as groups at the top\"     )   ) %>%    # keep only the relevant columns   dplyr::select(deserving, deserving_flip)  # show the output str(new_df) #> tibble [250 × 2] (S3: tbl_df/tbl/data.frame) #>  $ deserving     : dbl+lbl [1:250] 1, 2, 2, 2, 3, 1, 1, 2, 1, 1, 1, 1, 1, 2, 3, 2, 3, 1, ... #>    ..@ label        : chr \"Groups at the bottom are just as deserving as groups at the top\" #>    ..@ format.spss  : chr \"F40.0\" #>    ..@ display_width: int 5 #>    ..@ labels       : Named num [1:4] 1 2 3 4 #>    .. ..- attr(*, \"names\")= chr [1:4] \"Strongly agree\" \"Somewhat agree\" \"Somewhat disagree\" \"Strongly disagree\" #>  $ deserving_flip: dbl+lbl [1:250] 1, 2, 2, 2, 3, 1, 1, 2, 1, 1, 1, 1, 1, 2, 3, 2, 3, 1, ... #>    ..@ label         : chr \"Groups at the bottom are not just as deserving as groups at the top\" #>    ..@ format.spss   : chr \"F40.0\" #>    ..@ display_width : int 5 #>    ..@ labels        : Named num [1:4] 1 2 3 4 #>    .. ..- attr(*, \"names\")= chr [1:4] \"Strongly disagree\" \"Somewhat disagree\" \"Somewhat agree\" \"Strongly agree\" #>    ..@ transformation: chr \"Flipped the valance of `deserving` so it is now negative by updating the label and value labels accordingly.\""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/funky_freqs.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate weighted frequencies — funky_freqs","title":"Calculate weighted frequencies — funky_freqs","text":"Use function calculate simple weighted frequencies. can also specify grouping variable want calculate frequencies. x, group, wt arguments can either strings symbols (meaning can quotes quotes). benefit makes really easy iterate function list vector variables functions like purrr::map() purrr::map() purrr::walk() purrr::walk() found purrr package.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/funky_freqs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate weighted frequencies — funky_freqs","text":"","code":"funky_freqs(data, x, group, wt, drop_zero = FALSE, decimals = 3, na.rm = TRUE)"},{"path":"https://jdenn0514.github.io/adlgraphs/reference/funky_freqs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate weighted frequencies — funky_freqs","text":"data object type data.frame tibble. piping data function, required. x Either character string symbol. variable want get frequencies. group <tidy-select> selection columns group data addition treats. operates similarly .dplyr (info see ?dplyr_by). wt Weights. Add weighting variable want get weighted frequencies. drop_zero Logical. Determines rows 0 removed Default FALSE. decimals Number decimals number rounded . Default 3. na.rm Logical. Determines NAs kept removed Default TRUE.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/get_all_corr.html","id":null,"dir":"Reference","previous_headings":"","what":"Get correlations for a combination of variables — get_all_corr","title":"Get correlations for a combination of variables — get_all_corr","text":"get_all_corr makes easy calculate correlations across every variable data frame select set variables. also works grouped data frames can check correlations among levels several grouping variables.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/get_all_corr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get correlations for a combination of variables — get_all_corr","text":"","code":"get_all_corr(data, cols, group, wt, remove_redundant = TRUE, decimals = 3)"},{"path":"https://jdenn0514.github.io/adlgraphs/reference/get_all_corr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get correlations for a combination of variables — get_all_corr","text":"data data frame tibble object cols <tidy-select> variables want get correlations . group <tidy-select> selection columns group data addition treats. operates similarly .dplyr (info see ?dplyr_by). See examples see operates. wt variable use weights weighted correlations remove_redundant rows two variables kept removed? TRUE, default, removed. decimals Number decimals number rounded . Default 3.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/get_all_corr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get correlations for a combination of variables — get_all_corr","text":"data.frame correlations every combination columns data.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/get_all_corr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get correlations for a combination of variables — get_all_corr","text":"","code":"# load dplyr and adlgraphs library(dplyr) library(adlgraphs)  # To get correlations with three variables you can do it three ways # 1. Create a new data frame with only the columns you want new_data <- test_data %>% dplyr::select(top:dominate) get_all_corr(new_data) #> # A tibble: 6 × 8 #>   x                y          correlation     n conf.low conf.high p_value stars #>   <chr+lbl>        <chr+lbl>        <dbl> <int>    <dbl>     <dbl>   <dbl> <chr> #> 1 inferior [Some … top [An i…       0.498   250    0.389     0.606   0     ***   #> 2 dominate [No on… top [An i…      -0.147   250   -0.271    -0.023   0.02  *     #> 3 top [An ideal s… inf… [Som…       0.498   250    0.389     0.606   0     ***   #> 4 dominate [No on… inf… [Som…      -0.138   250   -0.262    -0.015   0.029 *     #> 5 top [An ideal s… dom… [No …      -0.147   250   -0.271    -0.023   0.02  *     #> 6 inferior [Some … dom… [No …      -0.138   250   -0.262    -0.015   0.029 *      # 2. Using dplyr::select() and pipes test_data %>%    dplyr::select(c(top:dominate)) %>%    get_all_corr() #> # A tibble: 6 × 8 #>   x                y          correlation     n conf.low conf.high p_value stars #>   <chr+lbl>        <chr+lbl>        <dbl> <int>    <dbl>     <dbl>   <dbl> <chr> #> 1 inferior [Some … top [An i…       0.498   250    0.389     0.606   0     ***   #> 2 dominate [No on… top [An i…      -0.147   250   -0.271    -0.023   0.02  *     #> 3 top [An ideal s… inf… [Som…       0.498   250    0.389     0.606   0     ***   #> 4 dominate [No on… inf… [Som…      -0.138   250   -0.262    -0.015   0.029 *     #> 5 top [An ideal s… dom… [No …      -0.147   250   -0.271    -0.023   0.02  *     #> 6 inferior [Some … dom… [No …      -0.138   250   -0.262    -0.015   0.029 *      # 3. Use the `cols` argument get_all_corr(test_data, cols = c(top:dominate)) #> # A tibble: 6 × 8 #>   x                y          correlation     n conf.low conf.high p_value stars #>   <chr+lbl>        <chr+lbl>        <dbl> <int>    <dbl>     <dbl>   <dbl> <chr> #> 1 inferior [Some … top [An i…       0.498   250    0.389     0.606   0     ***   #> 2 dominate [No on… top [An i…      -0.147   250   -0.271    -0.023   0.02  *     #> 3 top [An ideal s… inf… [Som…       0.498   250    0.389     0.606   0     ***   #> 4 dominate [No on… inf… [Som…      -0.138   250   -0.262    -0.015   0.029 *     #> 5 top [An ideal s… dom… [No …      -0.147   250   -0.271    -0.023   0.02  *     #> 6 inferior [Some … dom… [No …      -0.138   250   -0.262    -0.015   0.029 *     # or  test_data %>% get_all_corr(c(top:dominate)) #> # A tibble: 6 × 8 #>   x                y          correlation     n conf.low conf.high p_value stars #>   <chr+lbl>        <chr+lbl>        <dbl> <int>    <dbl>     <dbl>   <dbl> <chr> #> 1 inferior [Some … top [An i…       0.498   250    0.389     0.606   0     ***   #> 2 dominate [No on… top [An i…      -0.147   250   -0.271    -0.023   0.02  *     #> 3 top [An ideal s… inf… [Som…       0.498   250    0.389     0.606   0     ***   #> 4 dominate [No on… inf… [Som…      -0.138   250   -0.262    -0.015   0.029 *     #> 5 top [An ideal s… dom… [No …      -0.147   250   -0.271    -0.023   0.02  *     #> 6 inferior [Some … dom… [No …      -0.138   250   -0.262    -0.015   0.029 *      # To get weighted correlations just specify the `wt` argument test_data %>% get_all_corr(c(top:dominate), wt = wts) #> # A tibble: 6 × 8 #>   x                y          correlation     n conf.low conf.high p_value stars #>   <chr+lbl>        <chr+lbl>        <dbl> <int>    <dbl>     <dbl>   <dbl> <chr> #> 1 inferior [Some … top [An i…       0.509   250    0.401     0.617   0     ***   #> 2 dominate [No on… top [An i…      -0.112   250   -0.237     0.012   0.076 .     #> 3 top [An ideal s… inf… [Som…       0.509   250    0.401     0.617   0     ***   #> 4 dominate [No on… inf… [Som…      -0.143   250   -0.267    -0.019   0.024 *     #> 5 top [An ideal s… dom… [No …      -0.112   250   -0.237     0.012   0.076 .     #> 6 inferior [Some … dom… [No …      -0.143   250   -0.267    -0.019   0.024 *      # You can also calculate grouped correlations. For example, if # you were interested in comparing the weighted correlations  # among people with a college degree vs those without one, you  # would do it like this: test_data %>%    dplyr::group_by(edu_f2) %>%    get_all_corr(c(top:dominate), wt = wts) #> # A tibble: 12 × 9 #>    edu_f2     x          y          correlation     n conf.low conf.high p_value #>    <fct>      <chr+lbl>  <chr+lbl>        <dbl> <int>    <dbl>     <dbl>   <dbl> #>  1 No Colleg… inf… [Som… top [An i…       0.526   142    0.384     0.668   0     #>  2 At Least … inf… [Som… top [An i…       0.479   108    0.31      0.648   0     #>  3 No Colleg… dom… [No … top [An i…      -0.058   142   -0.225     0.108   0.49  #>  4 At Least … dom… [No … top [An i…      -0.217   108   -0.405    -0.029   0.024 #>  5 No Colleg… top [An i… inf… [Som…       0.526   142    0.384     0.668   0     #>  6 At Least … top [An i… inf… [Som…       0.479   108    0.31      0.648   0     #>  7 No Colleg… dom… [No … inf… [Som…      -0.121   142   -0.286     0.045   0.153 #>  8 At Least … dom… [No … inf… [Som…      -0.18    108   -0.37      0.009   0.062 #>  9 No Colleg… top [An i… dom… [No …      -0.058   142   -0.225     0.108   0.49  #> 10 At Least … top [An i… dom… [No …      -0.217   108   -0.405    -0.029   0.024 #> 11 No Colleg… inf… [Som… dom… [No …      -0.121   142   -0.286     0.045   0.153 #> 12 At Least … inf… [Som… dom… [No …      -0.18    108   -0.37      0.009   0.062 #> # ℹ 1 more variable: stars <chr>  # Another way to calculate grouped correlations is to  # specify the group argument inside the function call: get_all_corr(test_data, c(top:dominate), edu_f2, wts) #> # A tibble: 12 × 9 #>    edu_f2     x          y          correlation     n conf.low conf.high p_value #>    <fct>      <chr+lbl>  <chr+lbl>        <dbl> <int>    <dbl>     <dbl>   <dbl> #>  1 No Colleg… inf… [Som… top [An i…       0.526   142    0.384     0.668   0     #>  2 At Least … inf… [Som… top [An i…       0.479   108    0.31      0.648   0     #>  3 No Colleg… dom… [No … top [An i…      -0.058   142   -0.225     0.108   0.49  #>  4 At Least … dom… [No … top [An i…      -0.217   108   -0.405    -0.029   0.024 #>  5 No Colleg… top [An i… inf… [Som…       0.526   142    0.384     0.668   0     #>  6 At Least … top [An i… inf… [Som…       0.479   108    0.31      0.648   0     #>  7 No Colleg… dom… [No … inf… [Som…      -0.121   142   -0.286     0.045   0.153 #>  8 At Least … dom… [No … inf… [Som…      -0.18    108   -0.37      0.009   0.062 #>  9 No Colleg… top [An i… dom… [No …      -0.058   142   -0.225     0.108   0.49  #> 10 At Least … top [An i… dom… [No …      -0.217   108   -0.405    -0.029   0.024 #> 11 No Colleg… inf… [Som… dom… [No …      -0.121   142   -0.286     0.045   0.153 #> 12 At Least … inf… [Som… dom… [No …      -0.18    108   -0.37      0.009   0.062 #> # ℹ 1 more variable: stars <chr>  # You can also use multiple grouping variables get_all_corr(test_data, c(top:dominate), c(edu_f2, pid_f3), wts) #> # A tibble: 36 × 10 #>    edu_f2       pid_f3 x          y         correlation     n conf.low conf.high #>    <fct>        <fct>  <chr+lbl>  <chr+lbl>       <dbl> <int>    <dbl>     <dbl> #>  1 No College … Democ… inf… [Som… top [An …       0.514    52    0.27      0.757 #>  2 No College … Indep… inf… [Som… top [An …       0.446    40    0.152     0.74  #>  3 No College … Repub… inf… [Som… top [An …       0.521    50    0.274     0.769 #>  4 At Least a … Democ… inf… [Som… top [An …       0.333    46    0.046     0.619 #>  5 At Least a … Indep… inf… [Som… top [An …       0.729    17    0.352     1.11  #>  6 At Least a … Repub… inf… [Som… top [An …       0.571    45    0.318     0.823 #>  7 No College … Democ… dom… [No … top [An …      -0.05     52   -0.334     0.233 #>  8 No College … Indep… dom… [No … top [An …      -0.301    40   -0.614     0.013 #>  9 No College … Repub… dom… [No … top [An …       0.044    50   -0.246     0.334 #> 10 At Least a … Democ… dom… [No … top [An …      -0.227    46   -0.523     0.069 #> # ℹ 26 more rows #> # ℹ 2 more variables: p_value <dbl>, stars <chr>"},{"path":"https://jdenn0514.github.io/adlgraphs/reference/get_all_freqs.html","id":null,"dir":"Reference","previous_headings":"","what":"Export frequencies for a set of variables to a word doc. — get_all_freqs","title":"Export frequencies for a set of variables to a word doc. — get_all_freqs","text":"function uses get_freq_table() get frequencies set variables suppplied user. outputs frequencies word doc.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/get_all_freqs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export frequencies for a set of variables to a word doc. — get_all_freqs","text":"","code":"get_all_freqs(data, x, group, wt, show_genpop, file_name)"},{"path":"https://jdenn0514.github.io/adlgraphs/reference/get_all_freqs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export frequencies for a set of variables to a word doc. — get_all_freqs","text":"data object type data.frame tibble. piping data function, required. x vector variables want get frequencies . group character string. first grouping variable. wt character string. Add weighting variable want get weighted frequencies show_genpop Logical. column showing frequencies general population file_name character string specifying name file created frequencies file located. File must end .docx","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/get_bogus.html","id":null,"dir":"Reference","previous_headings":"","what":"Get bogus data from a data frame — get_bogus","title":"Get bogus data from a data frame — get_bogus","text":"function opposite remove_bogus(). Instead removing bots, duplicates, speedster data frame, keeps . designed make easy send survey panel providers can remove data set.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/get_bogus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get bogus data from a data frame — get_bogus","text":"","code":"get_bogus(data, duration, cut_off = 0.3)"},{"path":"https://jdenn0514.github.io/adlgraphs/reference/get_bogus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get bogus data from a data frame — get_bogus","text":"data data.frame object want operate duration name time duration variable. Must string. cut_off Specify percentage median time used remove speedsters. Default 0.3, means people time complete 0.3 median completion time removed.","code":""},{"path":[]},{"path":"https://jdenn0514.github.io/adlgraphs/reference/get_bot_dupe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the bots or duplicates from a data frame — get_bot_dupe","text":"","code":"get_bot_dupe(data)"},{"path":"https://jdenn0514.github.io/adlgraphs/reference/get_bot_dupe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the bots or duplicates from a data frame — get_bot_dupe","text":"data data.frame object want operate ","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/get_bot_dupe.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get the bots or duplicates from a data frame — get_bot_dupe","text":"get_bot_dupe() deprecated function get_bogus() thing also removes speedsters. function opposite remove_bot_dupes(). Instead removing bots duplicates data frame, keeps . designed make easy send survey panel providers can remove data set.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/get_coefficients.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a tidied tibble of regression results — get_coefficients","title":"Create a tidied tibble of regression results — get_coefficients","text":"function created produce results similar find broom.helpers, changes. notably, main reason creating function, can standardize regression coefficients scaling mean-centering input data.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/get_coefficients.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a tidied tibble of regression results — get_coefficients","text":"","code":"get_coefficients(   model,   conf.level = 0.95,   standardize = FALSE,   n.sd = 2,   exponentiate = FALSE,   add_ss = TRUE,   add_labels = TRUE,   add_n = FALSE,   model_name = NULL )"},{"path":"https://jdenn0514.github.io/adlgraphs/reference/get_coefficients.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a tidied tibble of regression results — get_coefficients","text":"model model object created using either lm glm. Can also piped function. conf.level number 0 1 signifies width desired confidence interval. Default 0.95, corresponds 95% confidence interval. standardize Logical. TRUE, reports standardized regression coefficients scaling mean-centering input data. Default FALSE. n.sd Logical. standardize TRUE, determines number standard deviations used scale data. Default 2. exponentiate Logical. TRUE, reports exponentiated coefficients confidence intervals exponential models like logit Poisson models. quantity known odds ratio binary outcomes incidence rate ratio count models. Default FALSE. add_ss Logical. TRUE, default, new column created called ss gives \"Yes\" term statistically significant \"\" term statistically significant. add_labels Logical. TRUE adds variable value labels add_n Logical. true adds number observations per variable model_name character string adds new column titled model supplied character string rows. NULL, default, column created. useful comparing multiple models similar variable need clarify estimates associated model.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/get_coefficients.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a tidied tibble of regression results — get_coefficients","text":"data.frame summarizing results lm() glm() object.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/get_coefficients.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a tidied tibble of regression results — get_coefficients","text":"function also takes advantage tidy_add_reference_rows/, tidy_add_term_labels/, tidy_add_n/ allow include reference row variable, underlying variable value labels, number observations.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/get_col_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the column names — get_col_names","title":"Get the column names — get_col_names","text":"function essentially wrapper around dplyr::select() colnames(). get_col_names(data, cols) thing colnames(dplyr::select(data, cols)) just slightly less typing.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/get_col_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the column names — get_col_names","text":"","code":"get_col_names(data, cols)"},{"path":"https://jdenn0514.github.io/adlgraphs/reference/get_col_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the column names — get_col_names","text":"data data.frame tibble cols <tidy-select> One unquoted expressions separated commas. Variable names can used positions data frame, expressions like x:y can used select range variables.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/get_col_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the column names — get_col_names","text":"vector columns data","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/get_col_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the column names — get_col_names","text":"","code":"library(adlgraphs) # let's get all of the column names between \"top\" and \"run\" get_col_names(test_data, c(top:run)) #> [1] \"top\"        \"inferior\"   \"dominate\"   \"deserving\"  \"special\"    #> [6] \"harder\"     \"controlled\" \"small\"      \"run\"        # can also use tidyselect syntax get_col_names(test_data, tidyselect::starts_with(\"pol_part\")) #> [1] \"pol_part_rally\"    \"pol_part_worked\"   \"pol_part_contact\"  #> [4] \"pol_part_money\"    \"pol_part_social\"   \"pol_part_attended\" #> [7] \"pol_part_none\"     \"pol_part_sum\""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/get_corr.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate weighted correlations — get_corr","title":"Calculate weighted correlations — get_corr","text":"function calculates weighted Pearson correlations two variables. also allows group data calculate correlations along level grouping variable. data grouped group specified, return output wtd_corr().","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/get_corr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate weighted correlations — get_corr","text":"","code":"get_corr(data, x, y, group = NULL, wt = NULL, decimals = 3)"},{"path":"https://jdenn0514.github.io/adlgraphs/reference/get_corr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate weighted correlations — get_corr","text":"data object type data.frame tibble. piping data function, required. x, y Can either character strings symbols. Name two variables data want calculate correlation . group <tidy-select> selection columns group data addition treats. operates similarly .dplyr (info see ?dplyr_by). See examples see operates. wt Can either character strings symbols. Weights. Add weighting variable want get weighted correlations decimals Number decimals number rounded . Default 3.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/get_corr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate weighted correlations — get_corr","text":"tibble showing correlations (correlation), number observations (n), low high confidence intervals (conf.low, conf.high), p-value (p_value), stars indicating statistical significance. data class \"grouped_df\" group argument specified, return one row unique observation one group provided one row per unique combination observations multiple groups used.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/get_corr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate weighted correlations — get_corr","text":"","code":"# load the dplyr for piping and grouping library(dplyr)  # Let's first do a simple correlation where we pipe in the data test_data %>% get_corr(x = top, y = sdo_sum) #> # A tibble: 1 × 8 #>   x                y          correlation     n conf.low conf.high p_value stars #>   <chr+lbl>        <chr+lbl>        <dbl> <int>    <dbl>     <dbl>   <dbl> <chr> #> 1 top [An ideal s… sdo… [Soc…      -0.736   250   -0.821    -0.651       0 ***    # Repeat but with weights test_data %>% get_corr(x = top, y = sdo_sum, wt = wts) #> # A tibble: 1 × 8 #>   x                y          correlation     n conf.low conf.high p_value stars #>   <chr+lbl>        <chr+lbl>        <dbl> <int>    <dbl>     <dbl>   <dbl> <chr> #> 1 top [An ideal s… sdo… [Soc…      -0.721   250   -0.808    -0.634       0 ***    # Now let's get the correlatoin among only people with a bachelor's degree test_data %>%    filter(edu_f2 == \"At Least a Bachelor's Degree\") %>%    get_corr(x = top, y = sdo_sum, wt = wts) #> # A tibble: 1 × 8 #>   x                y          correlation     n conf.low conf.high p_value stars #>   <chr+lbl>        <chr+lbl>        <dbl> <int>    <dbl>     <dbl>   <dbl> <chr> #> 1 top [An ideal s… sdo… [Soc…      -0.712   108   -0.847    -0.577       0 ***    # Now let's get it for each education level. Two ways of doing this: # The first is to group the data ahead of time test_data %>%    group_by(edu_f) %>%    get_corr(x = top, y = sdo_sum, wt = wts) #> # A tibble: 4 × 9 #>   edu_f  x         y          correlation     n conf.low conf.high p_value stars #>   <fct>  <chr+lbl> <chr+lbl>        <dbl> <int>    <dbl>     <dbl>   <dbl> <chr> #> 1 High … top [An … sdo… [Soc…      -0.728    64   -0.902    -0.555       0 ***   #> 2 Some … top [An … sdo… [Soc…      -0.729    78   -0.885    -0.572       0 ***   #> 3 Bache… top [An … sdo… [Soc…      -0.603    68   -0.799    -0.407       0 ***   #> 4 Gradu… top [An … sdo… [Soc…      -0.814    40   -1.00     -0.623       0 ***    # The second is to use the group argument test_data %>% get_corr(x = top, y = sdo_sum, group = edu_f, wt = wts) #> # A tibble: 4 × 9 #>   edu_f  x         y          correlation     n conf.low conf.high p_value stars #>   <fct>  <chr+lbl> <chr+lbl>        <dbl> <int>    <dbl>     <dbl>   <dbl> <chr> #> 1 High … top [An … sdo… [Soc…      -0.728    64   -0.902    -0.555       0 ***   #> 2 Some … top [An … sdo… [Soc…      -0.729    78   -0.885    -0.572       0 ***   #> 3 Bache… top [An … sdo… [Soc…      -0.603    68   -0.799    -0.407       0 ***   #> 4 Gradu… top [An … sdo… [Soc…      -0.814    40   -1.00     -0.623       0 ***"},{"path":"https://jdenn0514.github.io/adlgraphs/reference/get_diffs.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate difference in means — get_diffs","title":"Calculate difference in means — get_diffs","text":"function calculates difference means using bivariate regression, well p-value indicating significant difference . main function calculations lm(). NOTE: function perform actual Dunnet Test calculate quantile multivariate t-distribution determining confidence intervals p-values. need perform actual Dunnett Test use dunnett() function instead. Please aware function far slower many comparison groups due nature mvtnorm::qmvt() high dimensional data.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/get_diffs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate difference in means — get_diffs","text":"","code":"get_diffs(   data,   x,   treats,   group = NULL,   wt = NULL,   ref_level,   show_means = FALSE,   show_pct_change = FALSE,   decimals = 3,   conf.level = 0.95,   na.rm = TRUE )"},{"path":"https://jdenn0514.github.io/adlgraphs/reference/get_diffs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate difference in means — get_diffs","text":"data data frame tibble. x numeric vector used calculate means. can string symbol. treats variable whose values used determine means statistically significantly different . factor character vector. can string symbol. group <tidy-select> selection columns group data addition treats. operates similarly .dplyr (info see ?dplyr_by). See examples see operates. wt Weights. Add weighting variable want perform Dunnett's test weighted means. ref_level string specifies level reference group others tested. show_means Logical. Default FALSE show mean values levels. TRUE, add column called mean contains means. show_pct_change Logical. Default FALSE show percent change reference category categories. TRUE, show percent change. decimals Number decimals number rounded . Default 3. conf.level number 0 1 signifies width desired confidence interval. Default 0.95, corresponds 95% confidence interval. na.rm Logical. Default TRUE removes NAs prior calculation.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/get_diffs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate difference in means — get_diffs","text":"tibble one row group provided data class \"grouped_df\". data class \"grouped_df\" group provided, return one row unique observation one group provides one row per unique combination observations multiple groups used.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/get_diffs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate difference in means — get_diffs","text":"","code":"# load dplyr for the pipe: %>%  library(dplyr) library(adlgraphs)  # Check to see if any of the partisan groups are significantly different # from the control group (in this case \"Democrat\") for conspiracy # theory belief get_diffs(test_data, \"acts_avg\", \"pid_f3\") #> # A tibble: 2 × 7 #>   pid_f3      diffs     n conf.low conf.high p_value stars #> * <fct>       <dbl> <dbl>    <dbl>     <dbl>   <dbl> <chr> #> 1 Independent 0.262    57    0.015     0.509   0.037 \"*\"   #> 2 Republican  0.175    95   -0.038     0.388   0.107 \"\"     # now do the same as above but make \"Independent\" the control group get_diffs(test_data, \"acts_avg\", \"pid_f3\", ref_level = \"Independent\") #> # A tibble: 2 × 7 #>   pid_f3      diffs     n conf.low conf.high p_value stars #> * <fct>       <dbl> <dbl>    <dbl>     <dbl>   <dbl> <chr> #> 1 Democrat   -0.262    98   -0.509    -0.015   0.037 \"*\"   #> 2 Republican -0.087    95   -0.335     0.161   0.491 \"\"     # now let's add in education (`edu_f2`) as the `group` variable. This let's us # compare education levels within each level of `edu_f2`. Note how the arguments # don't have to be strings get_diffs(test_data, acts_avg, pid_f3, edu_f2) #> # A tibble: 4 × 8 #>   edu_f2                     pid_f3 diffs     n conf.low conf.high p_value stars #> * <fct>                      <fct>  <dbl> <dbl>    <dbl>     <dbl>   <dbl> <chr> #> 1 No College Degree          Indep… 0.168    40   -0.134     0.471   0.273 \"\"    #> 2 No College Degree          Repub… 0.156    50   -0.129     0.441   0.281 \"\"    #> 3 At Least a Bachelor's Deg… Indep… 0.316    17   -0.118     0.749   0.152 \"\"    #> 4 At Least a Bachelor's Deg… Repub… 0.2      45   -0.121     0.52    0.22  \"\"     # we can also group by multiple variables. Due to a small n, I'm going to use  # `edu_f2` instead of `edu_f`.  test_data %>%    dplyr::mutate(values_f2 = make_dicho(values)) %>%    get_diffs(acts_avg, treats = pid_f3, group = c(edu_f2, values_f2)) #> # A tibble: 8 × 9 #>   edu_f2          values_f2 pid_f3  diffs     n conf.low conf.high p_value stars #> * <fct>           <fct>     <fct>   <dbl> <dbl>    <dbl>     <dbl>   <dbl> <chr> #> 1 No College Deg… True      Indep…  0.163    18   -0.249     0.575   0.432 \"\"    #> 2 No College Deg… True      Repub…  0.08     35   -0.26      0.421   0.639 \"\"    #> 3 No College Deg… False     Indep…  0.081    22   -0.379     0.541   0.726 \"\"    #> 4 No College Deg… False     Repub…  0.369    15   -0.137     0.876   0.149 \"\"    #> 5 At Least a Bac… True      Indep…  0.235    11   -0.359     0.829   0.433 \"\"    #> 6 At Least a Bac… True      Repub… -0.015    28   -0.454     0.423   0.945 \"\"    #> 7 At Least a Bac… False     Indep…  0.49      6   -0.042     1.02    0.07  \".\"   #> 8 At Least a Bac… False     Repub…  0.586    17    0.188     0.983   0.005 \"**\"   # now let's do those previous two calculations but using `dplyr::group_by()` test_data %>%    dplyr::group_by(pid_f3) %>%    get_diffs(acts_avg, edu_f) #> # A tibble: 9 × 8 #>   pid_f3      edu_f              diffs     n conf.low conf.high p_value stars #> * <fct>       <fct>              <dbl> <dbl>    <dbl>     <dbl>   <dbl> <chr> #> 1 Democrat    Some College      -0.111    32   -0.533     0.311   0.603 \"\"    #> 2 Democrat    Bachelor's Degree -0.346    28   -0.779     0.087   0.116 \"\"    #> 3 Democrat    Graduate Degree   -0.379    18   -0.86      0.101   0.121 \"\"    #> 4 Independent Some College      -0.096    14   -0.645     0.453   0.727 \"\"    #> 5 Independent Bachelor's Degree -0.054    12   -0.633     0.524   0.851 \"\"    #> 6 Independent Graduate Degree   -0.471     5   -1.28      0.338   0.248 \"\"    #> 7 Republican  Some College      -0.074    32   -0.49      0.342   0.725 \"\"    #> 8 Republican  Bachelor's Degree -0.204    28   -0.631     0.222   0.344 \"\"    #> 9 Republican  Graduate Degree   -0.443    17   -0.92      0.035   0.069 \".\"    # we can also group by multiple variables test_data %>%    dplyr::mutate(values_f2 = make_dicho(values)) %>%    dplyr::group_by(pid_f3, values_f2) %>%    get_diffs(acts_avg, edu_f2) #> # A tibble: 6 × 9 #>   pid_f3      values_f2 edu_f2      diffs     n conf.low conf.high p_value stars #> * <fct>       <fct>     <fct>       <dbl> <dbl>    <dbl>     <dbl>   <dbl> <chr> #> 1 Democrat    True      At Least … -0.169    33   -0.546     0.209   0.376 \"\"    #> 2 Democrat    False     At Least … -0.546    13   -1.04     -0.056   0.03  \"*\"   #> 3 Independent True      At Least … -0.097    11   -0.828     0.634   0.787 \"\"    #> 4 Independent False     At Least … -0.136     6   -0.81      0.537   0.681 \"\"    #> 5 Republican  True      At Least … -0.264    28   -0.623     0.095   0.146 \"\"    #> 6 Republican  False     At Least … -0.329    17   -0.76      0.101   0.129 \"\""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/get_freq_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the frequencies as a GT table — get_freq_table","title":"Get the frequencies as a GT table — get_freq_table","text":"function creates GT table frequencies specified variable ability get frequencies one grouping variable. can used , created used get_all_freqs()`, function outputs frequencies set variables word doc.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/get_freq_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the frequencies as a GT table — get_freq_table","text":"","code":"get_freq_table(data, x, group, wt, show_genpop = FALSE)"},{"path":"https://jdenn0514.github.io/adlgraphs/reference/get_freq_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the frequencies as a GT table — get_freq_table","text":"data object type data.frame tibble. piping data function, required. x Either character string symbol. variable want get frequencies. group Either character string symbol. grouping variable. wt Weights. Add weighting variable want get weighted frequencies. show_genpop Logical. column showing frequencies general population","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/get_freqs.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate weighted frequencies — get_freqs","title":"Calculate weighted frequencies — get_freqs","text":"Use function calculate simple weighted frequencies weighted grouped. can also specify grouping variable want calculate frequencies","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/get_freqs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate weighted frequencies — get_freqs","text":"","code":"get_freqs(data, x, group, wt, cross_tab = FALSE)"},{"path":"https://jdenn0514.github.io/adlgraphs/reference/get_freqs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate weighted frequencies — get_freqs","text":"data object type data.frame tibble. piping data function, required. x Either character string symbol. variable want get frequencies. group Either character string symbol. grouping variable. wt Weights. Add weighting variable want get weighted frequencies cross_tab Logical. group object supplied, table pivoted create make like crosstabs","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/get_freqs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate weighted frequencies — get_freqs","text":"x, group, wt arguments can either strings symbols (meaning can quotes quotes). benefit makes really easy iterate function list vector variables functions like purrr::map() purrr::map() purrr::walk() purrr::walk() found purrr package.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/get_freqs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate weighted frequencies — get_freqs","text":"","code":"# load the package library(dplyr)  # Let's calculate the overall frequency for big_events get_freqs(test_data, big_events) #> # A tibble: 4 × 3 #>   big_events                n   pct #> * <dbl+lbl>             <int> <dbl> #> 1 1 [Strongly agree]       45 0.18  #> 2 2 [Somewhat agree]       81 0.324 #> 3 3 [Somewhat disagree]    70 0.28  #> 4 4 [Strongly disagree]    54 0.216  # it also works if x is a string get_means(test_data, \"big_events\") #> # A tibble: 1 × 5 #>    mean    sd     n conf.low conf.high #>   <dbl> <dbl> <dbl>    <dbl>     <dbl> #> 1  2.53  1.02   250     2.40      2.66  # Let's do that again but add weights get_freqs(test_data, big_events, wt = wts) #> # A tibble: 4 × 3 #>   big_events                n   pct #> * <dbl+lbl>             <dbl> <dbl> #> 1 1 [Strongly agree]     43.3 0.177 #> 2 2 [Somewhat agree]     73.6 0.300 #> 3 3 [Somewhat disagree]  71   0.290 #> 4 4 [Strongly disagree]  57.2 0.233  # the wt argument can also be in quotes like this get_freqs(test_data, \"big_events\", wt = \"wts\") #> # A tibble: 4 × 3 #>   big_events                n   pct #> * <dbl+lbl>             <dbl> <dbl> #> 1 1 [Strongly agree]     43.3 0.177 #> 2 2 [Somewhat agree]     73.6 0.300 #> 3 3 [Somewhat disagree]  71   0.290 #> 4 4 [Strongly disagree]  57.2 0.233  # Now let's do the average score for different education levels get_freqs(test_data, big_events, edu_f, wts) #> # A tibble: 16 × 4 #> # Groups:   edu_f [4] #>    edu_f               big_events                n   pct #>  * <fct>               <dbl+lbl>             <dbl> <dbl> #>  1 High School or Less 1 [Strongly agree]     12.8 0.183 #>  2 High School or Less 2 [Somewhat agree]     20.7 0.296 #>  3 High School or Less 3 [Somewhat disagree]  22.2 0.319 #>  4 High School or Less 4 [Strongly disagree]  14.1 0.202 #>  5 Some College        1 [Strongly agree]     17.7 0.205 #>  6 Some College        2 [Somewhat agree]     29.2 0.338 #>  7 Some College        3 [Somewhat disagree]  22   0.255 #>  8 Some College        4 [Strongly disagree]  17.4 0.202 #>  9 Bachelor's Degree   1 [Strongly agree]      6.9 0.139 #> 10 Bachelor's Degree   2 [Somewhat agree]     13.3 0.268 #> 11 Bachelor's Degree   3 [Somewhat disagree]  16.3 0.329 #> 12 Bachelor's Degree   4 [Strongly disagree]  13.1 0.264 #> 13 Graduate Degree     1 [Strongly agree]      5.9 0.149 #> 14 Graduate Degree     2 [Somewhat agree]     10.4 0.265 #> 15 Graduate Degree     3 [Somewhat disagree]  10.5 0.265 #> 16 Graduate Degree     4 [Strongly disagree]  12.6 0.321  # it also works with quotes get_freqs(test_data, \"big_events\", \"edu_f\", \"wts\") #> # A tibble: 16 × 4 #> # Groups:   edu_f [4] #>    edu_f               big_events                n   pct #>  * <fct>               <dbl+lbl>             <dbl> <dbl> #>  1 High School or Less 1 [Strongly agree]     12.8 0.183 #>  2 High School or Less 2 [Somewhat agree]     20.7 0.296 #>  3 High School or Less 3 [Somewhat disagree]  22.2 0.319 #>  4 High School or Less 4 [Strongly disagree]  14.1 0.202 #>  5 Some College        1 [Strongly agree]     17.7 0.205 #>  6 Some College        2 [Somewhat agree]     29.2 0.338 #>  7 Some College        3 [Somewhat disagree]  22   0.255 #>  8 Some College        4 [Strongly disagree]  17.4 0.202 #>  9 Bachelor's Degree   1 [Strongly agree]      6.9 0.139 #> 10 Bachelor's Degree   2 [Somewhat agree]     13.3 0.268 #> 11 Bachelor's Degree   3 [Somewhat disagree]  16.3 0.329 #> 12 Bachelor's Degree   4 [Strongly disagree]  13.1 0.264 #> 13 Graduate Degree     1 [Strongly agree]      5.9 0.149 #> 14 Graduate Degree     2 [Somewhat agree]     10.4 0.265 #> 15 Graduate Degree     3 [Somewhat disagree]  10.5 0.265 #> 16 Graduate Degree     4 [Strongly disagree]  12.6 0.321  # if we want to pivot the results so they look like cross tabs, then we need # to set `cross_tab` to TRUE get_freqs(test_data, big_events, edu_f, wts, cross_tab = TRUE) #> # A tibble: 4 × 5 #>   big_events            `High School or Less` `Some College` `Bachelor's Degree` #> * <dbl+lbl>             <glue>                <glue>         <glue>              #> 1 1 [Strongly agree]    18.35% (n = 12.8)     20.5% (n = 17… 13.94% (n = 6.9)    #> 2 2 [Somewhat agree]    29.64% (n = 20.7)     33.83% (n = 2… 26.76% (n = 13.3)   #> 3 3 [Somewhat disagree] 31.85% (n = 22.2)     25.5% (n = 22) 32.89% (n = 16.3)   #> 4 4 [Strongly disagree] 20.15% (n = 14.1)     20.17% (n = 1… 26.41% (n = 13.1)   #> # ℹ 1 more variable: `Graduate Degree` <glue>  # you can also pipe in the `data` argument if you want to do some data # transformations before you calculate the means. For example, say you want # to compare the frequencies of `big_events` among people who agreed vs # disagreed with the variable `top`: test_data %>%   mutate(top_f2 = make_dicho(top)) %>%   get_freqs(trad_n, top_f2, wts) #> # A tibble: 30 × 4 #> # Groups:   top_f2 [2] #>    top_f2 trad_n     n    pct #>  * <fct>   <dbl> <dbl>  <dbl> #>  1 Agree       0   7.9 0.0713 #>  2 Agree       1  13.9 0.125  #>  3 Agree       2   9.5 0.0856 #>  4 Agree       3  20.2 0.181  #>  5 Agree       4  11.6 0.104  #>  6 Agree       5   6.7 0.0603 #>  7 Agree       6   2.9 0.0260 #>  8 Agree       7   6.3 0.0562 #>  9 Agree       8   9.1 0.0814 #> 10 Agree       9   3.1 0.0280 #> # ℹ 20 more rows"},{"path":"https://jdenn0514.github.io/adlgraphs/reference/get_loadings.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the loadings in factor analysis — get_loadings","title":"Calculate the loadings in factor analysis — get_loadings","text":"function creates data frame factor loadings factor analysis. can object created psych::fa() can used data frame. used data frame, run columns data frame. Also works grouped data frame want check factor loadings may change along different levels group.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/get_loadings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the loadings in factor analysis — get_loadings","text":"","code":"get_loadings(   model,   labels = NULL,   threshold = 0.4,   print = \"short\",   nfactors = 1,   fm = \"pa\",   rotate = \"oblimin\",   sort = TRUE )"},{"path":"https://jdenn0514.github.io/adlgraphs/reference/get_loadings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the loadings in factor analysis — get_loadings","text":"model Either model created using psych::fa() data.frame labels Either character vector data frame. Creates new column called \"labels\" variable factor analysis. threshold threshold show factor loadings. Default 0.4. print printing method. Default \"short\" prints dataframe factor loadings. alternative \"long\" created yet. nfactors Number factors extract, default 1. fm Factoring method fm=\"minres\" minimum residual fm=\"uls\". use first derivative. fm=\"ols\" differs slightly \"minres\" minimizes entire residual matrix using OLS procedure uses empirical first derivative. slower. fm=\"wls\" weighted least squares (WLS) solution, fm=\"gls\" generalized weighted least squares (GLS), fm=\"pa\" principal factor solution, fm=\"ml\" maximum likelihood factor analysis. fm=\"minchi\" minimize sample size weighted chi square treating pairwise correlations different number subjects per pair. fm =\"minrank\" minimum rank factor analysis. \"old.min\" minimal residual way done prior April, 2017 (see discussion ). fm=\"alpha\" alpha factor analysis described Kaiser Coffey (1965). Default \"pa\". rotate \"none\", \"varimax\", \"quartimax\", \"bentlerT\", \"equamax\", \"varimin\", \"geominT\" \"bifactor\" orthogonal rotations. \"Promax\", \"promax\", \"oblimin\", \"simplimax\", \"bentlerQ, \"geominQ\" \"biquartimin\" \"cluster\" possible oblique transformations solution. default oblimin transformation, although versions prior 2009 defaulted varimax. SPSS seems Kaiser normalization Promax, done call \"promax\" normalization calling Promax GPArotation. sort Logical. TRUE, default, loadings sorted largest smallest. FALSE, sorting occurs.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/get_loadings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the loadings in factor analysis — get_loadings","text":"data.frame showing factor loadings.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/get_loadings.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the loadings in factor analysis — get_loadings","text":"","code":"library(adlgraphs) library(dplyr) library(psych)  # first lets get our data set data <- test_data %>%    select(top:run)  # now create the fa object model <- fa(data, nfactors = 1, fm = \"pa\", rotate = \"oblimin\") # get just the loadings get_loadings(model) #> # A tibble: 9 × 4 #>   variables     PA1 communality uniqueness #>   <chr>       <dbl>       <dbl>      <dbl> #> 1 controlled  0.685     0.469        0.531 #> 2 small       0.654     0.428        0.572 #> 3 run         0.610     0.373        0.627 #> 4 top        NA         0.0862       0.914 #> 5 inferior   NA         0.122        0.878 #> 6 dominate   NA         0.0213       0.979 #> 7 deserving  NA         0.00110      0.999 #> 8 special    NA         0.0885       0.912 #> 9 harder     NA         0.0687       0.931 # get the loadings with the variable labels based on data object get_loadings(model, data) #> # A tibble: 9 × 5 #>   variables  labels                                   PA1 communality uniqueness #>   <chr>      <chr>                                  <dbl>       <dbl>      <dbl> #> 1 controlled \"Much of our lives are being control…  0.685     0.469        0.531 #> 2 small      \"Even though we live in a democracy,…  0.654     0.428        0.572 #> 3 run        \"The people who really \\\"run\\\" the c…  0.610     0.373        0.627 #> 4 top        \"An ideal society requires some grou… NA         0.0862       0.914 #> 5 inferior   \"Some groups of people are simply in… NA         0.122        0.878 #> 6 dominate   \"No one group should dominate in soc… NA         0.0213       0.979 #> 7 deserving  \"Groups at the bottom are just as de… NA         0.00110      0.999 #> 8 special    \"It is unfair for some groups in soc… NA         0.0885       0.912 #> 9 harder     \"I have a harder time succeeding tha… NA         0.0687       0.931  # we can do all of this in one step with pipes test_data %>%    # select only the variables we want in the factor analysis   select(top:run) %>%    # run the factor analysis   fa(., nfactors = 1, fm = \"pa\", rotate = \"oblimin\") %>%    # get the loadings   get_loadings() #> # A tibble: 9 × 4 #>   variables     PA1 communality uniqueness #>   <chr>       <dbl>       <dbl>      <dbl> #> 1 controlled  0.685     0.469        0.531 #> 2 small       0.654     0.428        0.572 #> 3 run         0.610     0.373        0.627 #> 4 top        NA         0.0862       0.914 #> 5 inferior   NA         0.122        0.878 #> 6 dominate   NA         0.0213       0.979 #> 7 deserving  NA         0.00110      0.999 #> 8 special    NA         0.0885       0.912 #> 9 harder     NA         0.0687       0.931  # Now let's remove the threshold for the loadings and include labels test_data %>%    # select only the variables we want in the factor analysis   select(top:run) %>%    # run the factor analysis   fa(., nfactors = 1, fm = \"pa\", rotate = \"oblimin\") %>%    # specify threshold is 0   get_loadings(threshold = 0, labels = data) #> # A tibble: 9 × 5 #>   variables  labels                                   PA1 communality uniqueness #>   <chr>      <chr>                                  <dbl>       <dbl>      <dbl> #> 1 controlled \"Much of our lives are being contro…  0.685      0.469        0.531 #> 2 small      \"Even though we live in a democracy…  0.654      0.428        0.572 #> 3 run        \"The people who really \\\"run\\\" the …  0.610      0.373        0.627 #> 4 inferior   \"Some groups of people are simply i…  0.350      0.122        0.878 #> 5 special    \"It is unfair for some groups in so…  0.297      0.0885       0.912 #> 6 top        \"An ideal society requires some gro…  0.294      0.0862       0.914 #> 7 harder     \"I have a harder time succeeding th…  0.262      0.0687       0.931 #> 8 dominate   \"No one group should dominate in so…  0.146      0.0213       0.979 #> 9 deserving  \"Groups at the bottom are just as d… -0.0331     0.00110      0.999  # alternatively, we could skip the fa step entirely like so test_data %>%    # select only the variables we want in the factor analysis   select(top:run) %>%    # specify number of factors, rotation, and factor method   get_loadings() #> # A tibble: 9 × 4 #>   variables                                           PA1 communality uniqueness #>   <chr+lbl>                                         <dbl>       <dbl>      <dbl> #> 1 controlled [Much of our lives are being control…  0.685     0.469        0.531 #> 2 small [Even though we live in a democracy, a fe…  0.654     0.428        0.572 #> 3 run [The people who really \"run\" the country ar…  0.610     0.373        0.627 #> 4 top [An ideal society requires some groups to b… NA         0.0862       0.914 #> 5 inferior [Some groups of people are simply infe… NA         0.122        0.878 #> 6 dominate [No one group should dominate in socie… NA         0.0213       0.979 #> 7 deserving [Groups at the bottom are just as des… NA         0.00110      0.999 #> 8 special [It is unfair for some groups in societ… NA         0.0885       0.912 #> 9 harder [I have a harder time succeeding than my… NA         0.0687       0.931  # we can also specify the number of factors, rotation, and factoring method test_data %>%    # select only the variables we want in the factor analysis   select(top:run) %>%    # specify number of factors, rotation, factor method, and threshold   get_loadings(nfactors = 2, rotate = \"varimax\", fm = \"minres\", threshold = 0.2)  #> # A tibble: 9 × 5 #>   variables                                    MR1    MR2 communality uniqueness #>   <chr+lbl>                                  <dbl>  <dbl>       <dbl>      <dbl> #> 1 run [The people who really \"run\" the cou…  0.692 NA          0.503       0.497 #> 2 small [Even though we live in a democrac…  0.656 NA          0.430       0.570 #> 3 controlled [Much of our lives are being …  0.642 NA          0.425       0.575 #> 4 special [It is unfair for some groups in…  0.294 NA          0.0887      0.911 #> 5 inferior [Some groups of people are simp…  0.292  0.646      0.503       0.497 #> 6 dominate [No one group should dominate i…  0.263 -0.415      0.241       0.759 #> 7 harder [I have a harder time succeeding …  0.254 NA          0.0655      0.935 #> 8 top [An ideal society requires some grou…  0.225  0.587      0.395       0.605 #> 9 deserving [Groups at the bottom are just… NA     -0.429      0.187       0.813  # we can also calculate the factor loadings by a grouping variable test_data %>%    # select the grouping variable and the variables to be used in factor analysis   select(edu_f2, top:run) %>%    # group the data   group_by(edu_f2) %>%    # specify number of factors, rotation, factor method, and threshold   get_loadings(nfactors = 2, rotate = \"varimax\", fm = \"minres\", threshold = 0.2)  #> # A tibble: 18 × 6 #>    groups                       variables      MR1    MR2 communality uniqueness #>    <chr>                        <chr+lbl>    <dbl>  <dbl>       <dbl>      <dbl> #>  1 No College Degree            run [The p…  0.723 NA          0.528       0.472 #>  2 No College Degree            small [Eve…  0.670 NA          0.453       0.547 #>  3 No College Degree            cont… [Muc…  0.598  0.208      0.401       0.599 #>  4 No College Degree            domi… [No …  0.438 -0.332      0.302       0.698 #>  5 No College Degree            hard… [I h…  0.303 NA          0.106       0.894 #>  6 No College Degree            spec… [It …  0.245 NA          0.0964      0.904 #>  7 No College Degree            infe… [Som… NA      0.682      0.483       0.517 #>  8 No College Degree            top [An id… NA      0.633      0.416       0.584 #>  9 No College Degree            dese… [Gro… NA     -0.485      0.235       0.765 #> 10 At Least a Bachelor's Degree run [The p…  0.641 NA          0.413       0.587 #> 11 At Least a Bachelor's Degree cont… [Muc…  0.640  0.215      0.456       0.544 #> 12 At Least a Bachelor's Degree small [Eve…  0.639 NA          0.429       0.571 #> 13 At Least a Bachelor's Degree spec… [It …  0.325 NA          0.112       0.888 #> 14 At Least a Bachelor's Degree infe… [Som…  0.293  0.588      0.432       0.568 #> 15 At Least a Bachelor's Degree dese… [Gro…  0.263 -0.399      0.229       0.771 #> 16 At Least a Bachelor's Degree top [An id… NA      0.573      0.368       0.632 #> 17 At Least a Bachelor's Degree domi… [No … NA     -0.503      0.288       0.712 #> 18 At Least a Bachelor's Degree hard… [I h… NA     NA          0.0223      0.978"},{"path":"https://jdenn0514.github.io/adlgraphs/reference/get_means.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate means with confidence intervals — get_means","title":"Calculate means with confidence intervals — get_means","text":"Use function calculate simple weighted means 95% confidence intervals weighted grouped means. x, group, wt arguments can either strings symbols (meaning can quotes quotes). benefit makes easy iterate function list vector variables functions like purrr::map() purrr::map() purrr::walk() purrr::walk() found purrr package.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/get_means.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate means with confidence intervals — get_means","text":"","code":"get_means(   data,   x,   group = NULL,   wt = NULL,   decimals = 3,   na.rm = TRUE,   conf_level = 0.95 )"},{"path":"https://jdenn0514.github.io/adlgraphs/reference/get_means.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate means with confidence intervals — get_means","text":"data object type data.frame tibble. piping data function, required. x Either character string symbol. variable want get mean. group <tidy-select> selection columns group data addition treats. operates similarly .dplyr (info see ?dplyr_by). can also character vector, external vector. wt Weights. Add weighting variable want get weighted means. decimals Number decimals round results . Default 3. na.rm Logical. Determines NAs removed grouping variables prior analysis. Default TRUE. conf_level confidence level calculating confidence intervals. Defaults 0.95","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/get_means.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate means with confidence intervals — get_means","text":"tibble one row group provided data class \"grouped_df\". data class \"grouped_df\" group provided, return row unique observation combination observations.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/get_means.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate means with confidence intervals — get_means","text":"","code":"# load the package library(dplyr)  # Let's calculate the overall average score for trad_n get_means(test_data, trad_n) #> # A tibble: 1 × 5 #>    mean    sd     n conf.low conf.high #>   <dbl> <dbl> <dbl>    <dbl>     <dbl> #> 1  4.22  3.87   250     3.74      4.70  # it also works if x is a string get_means(test_data, \"trad_n\") #> # A tibble: 1 × 5 #>    mean    sd     n conf.low conf.high #>   <dbl> <dbl> <dbl>    <dbl>     <dbl> #> 1  4.22  3.87   250     3.74      4.70  # Let's do that again but add weights get_means(test_data, trad_n, wt = wts) #> # A tibble: 1 × 5 #>    mean    sd     n conf.low conf.high #>   <dbl> <dbl> <dbl>    <dbl>     <dbl> #> 1  3.97  3.76  245.     3.50      4.45  # the wt argument can also be in quotes like this get_means(test_data, \"trad_n\", wt = \"wts\") #> # A tibble: 1 × 5 #>    mean    sd     n conf.low conf.high #>   <dbl> <dbl> <dbl>    <dbl>     <dbl> #> 1  3.97  3.76  245.     3.50      4.45  # Now let's do the average score for different education levels get_means(test_data, trad_n, edu_f, wts) #> # A tibble: 4 × 6 #>   edu_f                mean    sd     n conf.low conf.high #>   <fct>               <dbl> <dbl> <dbl>    <dbl>     <dbl> #> 1 High School or Less  4.14  3.59  69.8     3.29      5.00 #> 2 Some College         3.93  3.96  86.3     3.08      4.78 #> 3 Bachelor's Degree    4.23  3.83  49.7     3.14      5.32 #> 4 Graduate Degree      3.45  3.41  39.4     2.35      4.55  # it also works with quotes get_means(test_data, \"trad_n\", \"edu_f\", \"wts\") #> # A tibble: 4 × 6 #>   edu_f                mean    sd     n conf.low conf.high #>   <fct>               <dbl> <dbl> <dbl>    <dbl>     <dbl> #> 1 High School or Less  4.14  3.59  69.8     3.29      5.00 #> 2 Some College         3.93  3.96  86.3     3.08      4.78 #> 3 Bachelor's Degree    4.23  3.83  49.7     3.14      5.32 #> 4 Graduate Degree      3.45  3.41  39.4     2.35      4.55  # you can also pipe in the `data` argument if you want to do some data # transformations before you calculate the means. For example, say you want # to compare the means of `trad_n` among people who agreed vs disagreed with # the variable `top`: test_data %>%   mutate(top_f2 = make_dicho(top)) %>%   get_means(trad_n, top_f2, wts) #> # A tibble: 2 × 6 #>   top_f2    mean    sd     n conf.low conf.high #>   <fct>    <dbl> <dbl> <dbl>    <dbl>     <dbl> #> 1 Agree     5.08  3.83  111.     4.36      5.80 #> 2 Disagree  3.05  3.43  134.     2.46      3.64"},{"path":"https://jdenn0514.github.io/adlgraphs/reference/hc_theme_default.html","id":null,"dir":"Reference","previous_headings":"","what":"The default theme for hc charts — hc_theme_default","title":"The default theme for hc charts — hc_theme_default","text":"function creates default theme ADL highcharter themes built . ggplot2 equivalent theme_default.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/hc_theme_default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The default theme for hc charts — hc_theme_default","text":"","code":"hc_theme_default(   hc,   base_size = 16,   legend_position = \"right\",   axis_text = TRUE,   axis_text_x = TRUE,   axis_text_y = TRUE,   grid = TRUE,   grid_x_only = FALSE,   grid_y_only = FALSE,   ... )"},{"path":"https://jdenn0514.github.io/adlgraphs/reference/hc_theme_default.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The default theme for hc charts — hc_theme_default","text":"hc highcharter object base_size Base font size, given px Also controls spacing graph. legend_position position legend. Options : \"right\", \"top\", \"bottom\", \"none\". \"none\" removes legend. \"right\" default. axis_text Logical. Determines axes labels. TRUE, default, axes labelled. FALSE, neither axis labelled. Note, controls axes. want remove one axis, use axis_text_x axis_text_y. axis_text_x Logical. Determines x-axis labels. TRUE, default, x-axis labels shown. FALSE, x-axis labels removed plot. axis_text_y Logical. Determines y-axis labels. TRUE, default, y-axis labels shown. FALSE, y-axis labels removed plot. grid Logical. Determines grid lines appear. TRUE, default, grid lines appear. FALSE, grid lines disappear, regardless grid_x_only grid_y_only set . grid_x_only Logical. Determines x-axis grid lines (vertical lines) appear. FALSE, default, grid lines appear. TRUE, x-axis grid lines appear y-axis grid lines disappear. grid_y_only Logical. Determines y-axis grid lines (horizontal lines) appear. FALSE, default, grid lines appear. TRUE, y-axis grid lines appear  x-axis grid lines disappear. ... Additional arguments passed","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/hc_theme_default.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The default theme for hc charts — hc_theme_default","text":"Due certain limitations Highcharter, quite extensive theme_default. example, minor grid lines right now. able figure might add . addition, faceting arguments theme_default present ","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/make_binary.html","id":null,"dir":"Reference","previous_headings":"","what":"Make binary variables — make_binary","title":"Make binary variables — make_binary","text":"Convert vector class factor haven_labelled \"binary vector\". refer \"binary vector\", referring vector class numeric two values: 0 1. Another way thinking turning variable dummy variable.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/make_binary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make binary variables — make_binary","text":"","code":"make_binary(x, flip_values = FALSE)"},{"path":"https://jdenn0514.github.io/adlgraphs/reference/make_binary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make binary variables — make_binary","text":"x vector class haven_labelled factor. flip_values Logical. FALSE, default, values kept . TRUE, values associated 1 0 flipped. See third example information.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/make_binary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make binary variables — make_binary","text":"numeric vector length x.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/make_binary.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Make binary variables — make_binary","text":"make_binary() builds make_dicho() therefore designed work vector class factor, haven_labelled, numeric value labels. built make_dicho, vector  numeric value labels, function return error. Similar make_dicho() provides opportunity flip factor levels, make_binary() allows flip values recoded 0 recoded 1. , just set flip_values = TRUE. addition, function adds three new attributes. first attribute, transformation, indicates data transformation original vector underwent create new vector. second attribute, label, contains variable label found original variable. However, original vector variable label, attribute show . third attribute, labels, adds value labels can see 1 0 mean.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/make_binary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make binary variables — make_binary","text":"","code":"library(dplyr) library(adlgraphs)  df <- tibble::tribble(   ~x, ~y, ~z,   3, 2, 3,   4, 4, 2,   2, 6, 1,   1, 1, 4,   5, 4, 3,   6, 5, 6 )   labs <- c(   \"Strongly agree\" = 1,   \"Agree\" = 2,   \"Somewhat agree\" = 3,   \"Somewhat disagree\" = 4,   \"Disagree\" = 5,   \"Strongly disagree\" = 6  )  attr(df$x, \"labels\") <- labs attr(df$y, \"labels\") <- labs attr(df$z, \"labels\") <- labs  # show the data transformation with a haven_labelled vector binary_df <- dplyr::mutate(df, binary_x = make_binary(x)) # check the updated dataset binary_df #> # A tibble: 6 × 4 #>       x     y     z binary_x #>   <dbl> <dbl> <dbl>    <dbl> #> 1     3     2     3        1 #> 2     4     4     2        0 #> 3     2     6     1       NA #> 4     1     1     4        1 #> 5     5     4     3       NA #> 6     6     5     6        0  # Check the attributes attributes(binary_df$binary_x) #> $transformation #> [1] \"Converting 'x' to a binary variable with 'Agree' = 1 and 'Disagree' = 0.\" #>  #> $labels #>    Agree Disagree  #>        1        0  #>  #> $label #> [1] \"x\" #>  # another way of checking the attributes str(binary_df$binary_x) #>  num [1:6] 1 0 NA 1 NA 0 #>  - attr(*, \"transformation\")= chr \"Converting 'x' to a binary variable with 'Agree' = 1 and 'Disagree' = 0.\" #>  - attr(*, \"labels\")= Named num [1:2] 1 0 #>   ..- attr(*, \"names\")= chr [1:2] \"Agree\" \"Disagree\" #>  - attr(*, \"label\")= chr \"x\"  # check the factor levels unique(binary_df$binary_x) #> [1]  1  0 NA  # ----------------------------------------------------------------------------  # function also works with factors binary_df <- df %>%   dplyr::mutate(     # convert variable to a factor     factor_x = make_factor(x),     # convert the factor to a binary variable     binary_x = make_binary(factor_x)   )  # check the updated dataset binary_df #> # A tibble: 6 × 5 #>       x     y     z factor_x          binary_x #>   <dbl> <dbl> <dbl> <fct>                <dbl> #> 1     3     2     3 Somewhat agree           1 #> 2     4     4     2 Somewhat disagree        0 #> 3     2     6     1 Agree                   NA #> 4     1     1     4 Strongly agree           1 #> 5     5     4     3 Disagree                NA #> 6     6     5     6 Strongly disagree        0  # Check the attributes attributes(binary_df$binary_x) #> $transformation #> [1] \"Converting 'factor_x' to a binary variable with 'Agree' = 1 and 'Disagree' = 0.\" #>  #> $label #> [1] \"x\" #>  #> $labels #>    Agree Disagree  #>        1        0  #>  # another way of checking the attributes str(binary_df$binary_x) #>  num [1:6] 1 0 NA 1 NA 0 #>  - attr(*, \"transformation\")= chr \"Converting 'factor_x' to a binary variable with 'Agree' = 1 and 'Disagree' = 0.\" #>  - attr(*, \"label\")= chr \"x\" #>  - attr(*, \"labels\")= Named num [1:2] 1 0 #>   ..- attr(*, \"names\")= chr [1:2] \"Agree\" \"Disagree\"  # check the factor levels unique(binary_df$binary_x) #> [1]  1  0 NA  # ----------------------------------------------------------------------------  # function also works inside dplyr::across()  # Create new columns using `across()` binary_df <- df %>%   dplyr::mutate(     # use this example if you don't want to flip the factor levels     dplyr::across(       x:z,       make_binary,       .names = \"binary_{col}\"     ),     # if you want to flip the factor levels, follow this example     dplyr::across(       c(x:z),       # the . placeholder is important to remember       ~ make_binary(.x, flip_values = TRUE),       .names = \"binary_flipped_{col}\"     )   ) # show that the function worked properly by creating two new sets of variables binary_df #> # A tibble: 6 × 9 #>       x     y     z binary_x binary_y binary_z binary_flipped_x binary_flipped_y #>   <dbl> <dbl> <dbl>    <dbl>    <dbl>    <dbl>            <dbl>            <dbl> #> 1     3     2     3        1       NA        1                0               NA #> 2     4     4     2        0        0       NA                1                1 #> 3     2     6     1       NA        0        1               NA                1 #> 4     1     1     4        1        1        0                0                0 #> 5     5     4     3       NA        0        1               NA                1 #> 6     6     5     6        0       NA        0                1               NA #> # ℹ 1 more variable: binary_flipped_z <dbl>  # show the underlying structure of the entire df str(binary_df) #> tibble [6 × 9] (S3: tbl_df/tbl/data.frame) #>  $ x               : num [1:6] 3 4 2 1 5 6 #>   ..- attr(*, \"labels\")= Named num [1:6] 1 2 3 4 5 6 #>   .. ..- attr(*, \"names\")= chr [1:6] \"Strongly agree\" \"Agree\" \"Somewhat agree\" \"Somewhat disagree\" ... #>  $ y               : num [1:6] 2 4 6 1 4 5 #>   ..- attr(*, \"labels\")= Named num [1:6] 1 2 3 4 5 6 #>   .. ..- attr(*, \"names\")= chr [1:6] \"Strongly agree\" \"Agree\" \"Somewhat agree\" \"Somewhat disagree\" ... #>  $ z               : num [1:6] 3 2 1 4 3 6 #>   ..- attr(*, \"labels\")= Named num [1:6] 1 2 3 4 5 6 #>   .. ..- attr(*, \"names\")= chr [1:6] \"Strongly agree\" \"Agree\" \"Somewhat agree\" \"Somewhat disagree\" ... #>  $ binary_x        : num [1:6] 1 0 NA 1 NA 0 #>   ..- attr(*, \"transformation\")= chr \"Converting 'x' to a binary variable with 'Agree' = 1 and 'Disagree' = 0.\" #>   ..- attr(*, \"labels\")= Named num [1:2] 1 0 #>   .. ..- attr(*, \"names\")= chr [1:2] \"Agree\" \"Disagree\" #>   ..- attr(*, \"label\")= chr \"x\" #>  $ binary_y        : num [1:6] NA 0 0 1 0 NA #>   ..- attr(*, \"transformation\")= chr \"Converting 'y' to a binary variable with 'Agree' = 1 and 'Disagree' = 0.\" #>   ..- attr(*, \"labels\")= Named num [1:2] 1 0 #>   .. ..- attr(*, \"names\")= chr [1:2] \"Agree\" \"Disagree\" #>   ..- attr(*, \"label\")= chr \"y\" #>  $ binary_z        : num [1:6] 1 NA 1 0 1 0 #>   ..- attr(*, \"transformation\")= chr \"Converting 'z' to a binary variable with 'Agree' = 1 and 'Disagree' = 0.\" #>   ..- attr(*, \"labels\")= Named num [1:2] 1 0 #>   .. ..- attr(*, \"names\")= chr [1:2] \"Agree\" \"Disagree\" #>   ..- attr(*, \"label\")= chr \"z\" #>  $ binary_flipped_x: num [1:6] 0 1 NA 0 NA 1 #>   ..- attr(*, \"transformation\")= chr \"Converting 'x' to a binary variable with 'Disagree' = 1 and 'Agree' = 0.\" #>   ..- attr(*, \"labels\")= Named num [1:2] 1 0 #>   .. ..- attr(*, \"names\")= chr [1:2] \"Disagree\" \"Agree\" #>   ..- attr(*, \"label\")= chr \"x\" #>  $ binary_flipped_y: num [1:6] NA 1 1 0 1 NA #>   ..- attr(*, \"transformation\")= chr \"Converting 'y' to a binary variable with 'Disagree' = 1 and 'Agree' = 0.\" #>   ..- attr(*, \"labels\")= Named num [1:2] 1 0 #>   .. ..- attr(*, \"names\")= chr [1:2] \"Disagree\" \"Agree\" #>   ..- attr(*, \"label\")= chr \"y\" #>  $ binary_flipped_z: num [1:6] 0 NA 0 1 0 1 #>   ..- attr(*, \"transformation\")= chr \"Converting 'z' to a binary variable with 'Disagree' = 1 and 'Agree' = 0.\" #>   ..- attr(*, \"labels\")= Named num [1:2] 1 0 #>   .. ..- attr(*, \"names\")= chr [1:2] \"Disagree\" \"Agree\" #>   ..- attr(*, \"label\")= chr \"z\"  # show how the levels are flipped when \"flip_levels = TRUE\" levels(binary_df$binary_x) #> NULL levels(binary_df$binary_flipped_x) #> NULL"},{"path":"https://jdenn0514.github.io/adlgraphs/reference/make_dicho.html","id":null,"dir":"Reference","previous_headings":"","what":"Make dichotomous factors — make_dicho","title":"Make dichotomous factors — make_dicho","text":"Convert vector class factor numeric value labels (e.g., haven_labelled) dichotomous factor vector. dichotomous factor vector vector class factor two bipolar levels (e.g., \"Agree\" \"Disagree\")","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/make_dicho.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make dichotomous factors — make_dicho","text":"","code":"make_dicho(x, flip_levels = FALSE)"},{"path":"https://jdenn0514.github.io/adlgraphs/reference/make_dicho.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make dichotomous factors — make_dicho","text":"x labelled vector factor. flip_levels Logical. FALSE, default, factor levels kept . TRUE, factor levels flipped. specify want change order factor level.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/make_dicho.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make dichotomous factors — make_dicho","text":"factor vector two levels length x.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/make_dicho.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Make dichotomous factors — make_dicho","text":"make_dicho designed work vector class factor, haven_labelled, numeric value labels. vector  numeric value labels, function return error. function first converts vector factor using make_factor(). , removes first word multiple words factor level. resulting factor levels default alphabetical want reverse , just set flip_levels = TRUE function. addition, function adds two new attributes. first attribute, transformation, indicates data transformation original vector underwent create new vector. second attribute, label, contains variable label found original variable. However, original vector variable label, attribute show .","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/make_dicho.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make dichotomous factors — make_dicho","text":"","code":"# load the libraries library(dplyr) library(adlgraphs)  # Check a labelled variable -------------------------------------------------  # convert \"top\" into a dichotomous factor new_df <- test_data %>%   mutate(top_f2 = make_dicho(top)) %>%   # keep only two relevant variables   select(top, top_f2)  # compare \"top\" to \"top_f2\" # we can see all response with \"agree\" in the name are now \"agree\" and # all those with \"disagree\" are now \"disagree\" new_df #> # A tibble: 250 × 2 #>    top                   top_f2   #>    <dbl+lbl>             <fct>    #>  1 1 [Strongly agree]    Agree    #>  2 2 [Somewhat agree]    Agree    #>  3 2 [Somewhat agree]    Agree    #>  4 3 [Somewhat disagree] Disagree #>  5 2 [Somewhat agree]    Agree    #>  6 4 [Strongly disagree] Disagree #>  7 2 [Somewhat agree]    Agree    #>  8 2 [Somewhat agree]    Agree    #>  9 2 [Somewhat agree]    Agree    #> 10 4 [Strongly disagree] Disagree #> # ℹ 240 more rows  # show the attributes attributes(new_df$top_f2) #> $levels #> [1] \"Agree\"    \"Disagree\" #>  #> $class #> [1] \"factor\" #>  #> $transformation #> [1] \"Converting 'top' to a dichotomous factor with 'Agree' as the reference level\" #>  #> $label #> [1] \"An ideal society requires some groups to be on top and others to be on the bottom\" #>   # Check a factor variable --------------------------------------------------- new_df <- test_data %>%   mutate(     # convert it to a factor     top_f = make_factor(top),     # convert the dichotomous factor     top_f2 = make_dicho(top_f)   ) %>%   # select the three variables to compare them   select(top, top_f, top_f2)  # compare the three variables new_df #> # A tibble: 250 × 3 #>    top                   top_f             top_f2   #>    <dbl+lbl>             <fct>             <fct>    #>  1 1 [Strongly agree]    Strongly agree    Agree    #>  2 2 [Somewhat agree]    Somewhat agree    Agree    #>  3 2 [Somewhat agree]    Somewhat agree    Agree    #>  4 3 [Somewhat disagree] Somewhat disagree Disagree #>  5 2 [Somewhat agree]    Somewhat agree    Agree    #>  6 4 [Strongly disagree] Strongly disagree Disagree #>  7 2 [Somewhat agree]    Somewhat agree    Agree    #>  8 2 [Somewhat agree]    Somewhat agree    Agree    #>  9 2 [Somewhat agree]    Somewhat agree    Agree    #> 10 4 [Strongly disagree] Strongly disagree Disagree #> # ℹ 240 more rows  # show the attributes for the new variable attributes(new_df$top_f2) #> $levels #> [1] \"Agree\"    \"Disagree\" #>  #> $class #> [1] \"factor\" #>  #> $transformation #> [1] \"Converting 'top_f' to a dichotomous factor with 'Agree' as the reference level\" #>  #> $label #> [1] \"An ideal society requires some groups to be on top and others to be on the bottom\" #>   # Show it with flipped levels -----------------------------------------------  # let's do the same thing but let's flip the levels now new_df <- test_data %>%   mutate(     # show it without flipping the levels     top_f2 = make_dicho(top),     # show it with the levels being flipped     top_f2_flip = make_dicho(top, flip_levels = TRUE)   ) %>%   # keep only relevant variables   select(top, top_f2, top_f2_flip)  # compare them new_df #> # A tibble: 250 × 3 #>    top                   top_f2   top_f2_flip #>    <dbl+lbl>             <fct>    <fct>       #>  1 1 [Strongly agree]    Agree    Agree       #>  2 2 [Somewhat agree]    Agree    Agree       #>  3 2 [Somewhat agree]    Agree    Agree       #>  4 3 [Somewhat disagree] Disagree Disagree    #>  5 2 [Somewhat agree]    Agree    Agree       #>  6 4 [Strongly disagree] Disagree Disagree    #>  7 2 [Somewhat agree]    Agree    Agree       #>  8 2 [Somewhat agree]    Agree    Agree       #>  9 2 [Somewhat agree]    Agree    Agree       #> 10 4 [Strongly disagree] Disagree Disagree    #> # ℹ 240 more rows  # They look the same but if we check the levels of the factor we can see # that they are in different orders attributes(new_df$top_f2) #> $levels #> [1] \"Agree\"    \"Disagree\" #>  #> $class #> [1] \"factor\" #>  #> $transformation #> [1] \"Converting 'top' to a dichotomous factor with 'Agree' as the reference level\" #>  #> $label #> [1] \"An ideal society requires some groups to be on top and others to be on the bottom\" #>  attributes(new_df$top_f2_flip) #> $levels #> [1] \"Disagree\" \"Agree\"    #>  #> $class #> [1] \"factor\" #>  #> $transformation #> [1] \"Converting 'top' to a dichotomous factor and reordering the factor levels so that 'Disagree' is the reference level\" #>  #> $label #> [1] \"An ideal society requires some groups to be on top and others to be on the bottom\" #>   # ---------------------------------------------------------------------------- # function also works inside dplyr::across()  # Create new columns using `across()` new_df <- test_data %>%   dplyr::mutate(     # use this example if you don't want to flip the factor levels     dplyr::across(       c(top:deserving),       make_dicho,       .names = \"{col}_f2\"     ),     # if you want to flip the factor levels, follow this example     dplyr::across(       c(top:deserving),       ~make_dicho(., flip_levels = TRUE),       .names = \"{col}_f2_flip\"     )   ) %>%   # select the variables with \"f2\" in the name   select(contains(\"f2\"))  # show that the function worked properly by creating two new sets of variables new_df #> # A tibble: 250 × 9 #>    edu_f2                top_f2 inferior_f2 dominate_f2 deserving_f2 top_f2_flip #>    <fct>                 <fct>  <fct>       <fct>       <fct>        <fct>       #>  1 No College Degree     Agree  Disagree    Agree       Agree        Agree       #>  2 No College Degree     Agree  Disagree    Agree       Agree        Agree       #>  3 At Least a Bachelor'… Agree  Agree       Agree       Agree        Agree       #>  4 No College Degree     Disag… Disagree    Agree       Agree        Disagree    #>  5 No College Degree     Agree  Disagree    Agree       Disagree     Agree       #>  6 At Least a Bachelor'… Disag… Disagree    Agree       Agree        Disagree    #>  7 At Least a Bachelor'… Agree  Disagree    Agree       Agree        Agree       #>  8 At Least a Bachelor'… Agree  Disagree    Agree       Agree        Agree       #>  9 No College Degree     Agree  Disagree    Disagree    Agree        Agree       #> 10 No College Degree     Disag… Disagree    Agree       Agree        Disagree    #> # ℹ 240 more rows #> # ℹ 3 more variables: inferior_f2_flip <fct>, dominate_f2_flip <fct>, #> #   deserving_f2_flip <fct>  # show the underlying structure of the entire df str(new_df) #> tibble [250 × 9] (S3: tbl_df/tbl/data.frame) #>  $ edu_f2           : Factor w/ 2 levels \"No College Degree\",..: 1 1 2 1 1 2 2 2 1 1 ... #>   ..- attr(*, \"label\")= chr \"What is the highest level of school you have completed or the highest degree you have received?\" #>   ..- attr(*, \"transformation\")= 'glue' chr \"Recoded 'edu' as a factor and set the levels based on their order.\\nThe data transformation is as follows:\\nWha\"| __truncated__ #>  $ top_f2           : Factor w/ 2 levels \"Agree\",\"Disagree\": 1 1 1 2 1 2 1 1 1 2 ... #>   ..- attr(*, \"transformation\")= chr \"Converting 'top' to a dichotomous factor with 'Agree' as the reference level\" #>   ..- attr(*, \"label\")= chr \"An ideal society requires some groups to be on top and others to be on the bottom\" #>  $ inferior_f2      : Factor w/ 2 levels \"Agree\",\"Disagree\": 2 2 1 2 2 2 2 2 2 2 ... #>   ..- attr(*, \"transformation\")= chr \"Converting 'inferior' to a dichotomous factor with 'Agree' as the reference level\" #>   ..- attr(*, \"label\")= chr \"Some groups of people are simply inferior to other groups\" #>  $ dominate_f2      : Factor w/ 2 levels \"Agree\",\"Disagree\": 1 1 1 1 1 1 1 1 2 1 ... #>   ..- attr(*, \"transformation\")= chr \"Converting 'dominate' to a dichotomous factor with 'Agree' as the reference level\" #>   ..- attr(*, \"label\")= chr \"No one group should dominate in society\" #>  $ deserving_f2     : Factor w/ 2 levels \"Agree\",\"Disagree\": 1 1 1 1 2 1 1 1 1 1 ... #>   ..- attr(*, \"transformation\")= chr \"Converting 'deserving' to a dichotomous factor with 'Agree' as the reference level\" #>   ..- attr(*, \"label\")= chr \"Groups at the bottom are just as deserving as groups at the top\" #>  $ top_f2_flip      : Factor w/ 2 levels \"Disagree\",\"Agree\": 2 2 2 1 2 1 2 2 2 1 ... #>   ..- attr(*, \"transformation\")= chr \"Converting 'top' to a dichotomous factor and reordering the factor levels so that 'Disagree' is the reference level\" #>   ..- attr(*, \"label\")= chr \"An ideal society requires some groups to be on top and others to be on the bottom\" #>  $ inferior_f2_flip : Factor w/ 2 levels \"Disagree\",\"Agree\": 1 1 2 1 1 1 1 1 1 1 ... #>   ..- attr(*, \"transformation\")= chr \"Converting 'inferior' to a dichotomous factor and reordering the factor levels so that 'Disagree' is the reference level\" #>   ..- attr(*, \"label\")= chr \"Some groups of people are simply inferior to other groups\" #>  $ dominate_f2_flip : Factor w/ 2 levels \"Disagree\",\"Agree\": 2 2 2 2 2 2 2 2 1 2 ... #>   ..- attr(*, \"transformation\")= chr \"Converting 'dominate' to a dichotomous factor and reordering the factor levels so that 'Disagree' is the reference level\" #>   ..- attr(*, \"label\")= chr \"No one group should dominate in society\" #>  $ deserving_f2_flip: Factor w/ 2 levels \"Disagree\",\"Agree\": 2 2 2 2 1 2 2 2 2 2 ... #>   ..- attr(*, \"transformation\")= chr \"Converting 'deserving' to a dichotomous factor and reordering the factor levels so that 'Disagree' is the reference level\" #>   ..- attr(*, \"label\")= chr \"Groups at the bottom are just as deserving as groups at the top\"  # show how the levels are flipped when \"flip_levels = TRUE\" levels(new_df$top_f2) #> [1] \"Agree\"    \"Disagree\" levels(new_df$top_f2_flip) #> [1] \"Disagree\" \"Agree\""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/make_factor.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a labelled vector into a factor — make_factor","title":"Convert a labelled vector into a factor — make_factor","text":"make_factor() takes labelled vector converts factor variable using value labels. works numeric, character, factor vectors. function similar haven::as_factor() sjlabelled::as_label() heavily based . However, key differences. main difference compared functions  make_factor() adds \"transformation\" attribute new variable  indicating created. can see examples. Compared sjlabelled::as_label() extensive. example, sjlabelled::as_label() works data.frames vectors, make_factor() works vectors. addition, sjlabelled::as_label() many different arguments enable control appearance labels, NAs, things. make_factor() hand much simpler. Similarly, haven::as_factor() also enables customization output labels. Another key difference function values without labels, function returns error.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/make_factor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a labelled vector into a factor — make_factor","text":"","code":"make_factor(   x,   ordered = FALSE,   drop_levels = TRUE,   force = TRUE,   na.rm = FALSE )"},{"path":"https://jdenn0514.github.io/adlgraphs/reference/make_factor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a labelled vector into a factor — make_factor","text":"x vector value labels. Can numeric, character, factor ordered Logical. Determines factor ordered. Defaults TRUE. drop_levels Logical. Determines unused factor levels dropped. Defaults TRUE. force Logical. Determines x forced vector even value labels. Defaults TRUE. na.rm Logical. Determines tags removed NAs. Defaults FALSE.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/make_factor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a labelled vector into a factor — make_factor","text":"factor vector length x.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/make_factor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a labelled vector into a factor — make_factor","text":"","code":"library(adlgraphs) library(dplyr)  # let's make a new variable and data set new_df <- test_data %>%   # convert top into a factor   mutate(top_f = make_factor(top))  # compare the \"top_f\" to \"top\" new_df %>% select(top, top_f) #> # A tibble: 250 × 2 #>    top                   top_f             #>    <dbl+lbl>             <fct>             #>  1 1 [Strongly agree]    Strongly agree    #>  2 2 [Somewhat agree]    Somewhat agree    #>  3 2 [Somewhat agree]    Somewhat agree    #>  4 3 [Somewhat disagree] Somewhat disagree #>  5 2 [Somewhat agree]    Somewhat agree    #>  6 4 [Strongly disagree] Strongly disagree #>  7 2 [Somewhat agree]    Somewhat agree    #>  8 2 [Somewhat agree]    Somewhat agree    #>  9 2 [Somewhat agree]    Somewhat agree    #> 10 4 [Strongly disagree] Strongly disagree #> # ℹ 240 more rows  # check the attributes to see the label and transformation attributes(new_df$top_f) #> $levels #> [1] \"Strongly agree\"    \"Somewhat agree\"    \"Somewhat disagree\" #> [4] \"Strongly disagree\" #>  #> $class #> [1] \"factor\" #>  #> $label #> [1] \"An ideal society requires some groups to be on top and others to be on the bottom\" #>  #> $transformation #> [1] \"Converted 'top' into a factor based on its value labels\" #>"},{"path":"https://jdenn0514.github.io/adlgraphs/reference/make_nested.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a nested data frame — make_nested","title":"Create a nested data frame — make_nested","text":"function similar tidyr::nest()creates data frame one columns comprised list data frames.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/make_nested.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a nested data frame — make_nested","text":"","code":"make_nested(data, group, na.rm = TRUE, sep = \"_\")"},{"path":"https://jdenn0514.github.io/adlgraphs/reference/make_nested.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a nested data frame — make_nested","text":"data data frame group Columns nest ; remain outer data frame. data grouped data frame, must supplied. supplying multiple must vector. Can either string symbol. na.rm Determines rows NA kept dropped. Defaults TRUE. sep character string separate values. sep argument paste(). Check examples see action.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/make_nested.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a nested data frame — make_nested","text":"similar tidyr::nest() key differences. first function uses vctrs package hood, makes twice fast tidyr::nest(). Second, limited scope functionality. tidyr::nest() allows determine columns inner data frames (ones list column), function . Instead, able specify variables remain outer data frame. Third,  function creates extra column called \"name\" concatenates values columns outer rows together using paste(). Fourth, unlike tidyr::nest() variables supplied .argument supersede grouping variables specified dplyr::group_by(), nest_data() combines two nest data.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/make_nested.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a nested data frame — make_nested","text":"","code":"library(dplyr) # nest by one variable make_nested(test_data, pid_f3) #> # A tibble: 3 × 3 #>   pid_f3      data               name        #>   <fct>       <list>             <chr>       #> 1 Democrat    <tibble [98 × 45]> Democrat    #> 2 Independent <tibble [57 × 45]> Independent #> 3 Republican  <tibble [95 × 45]> Republican   # nest by multiple variables make_nested(test_data, c(pid_f3, edu_f2)) #> # A tibble: 6 × 4 #>   pid_f3      edu_f2                       data               name               #>   <fct>       <fct>                        <list>             <chr>              #> 1 Democrat    No College Degree            <tibble [52 × 44]> Democrat_No Colle… #> 2 Democrat    At Least a Bachelor's Degree <tibble [46 × 44]> Democrat_At Least… #> 3 Independent No College Degree            <tibble [40 × 44]> Independent_No Co… #> 4 Independent At Least a Bachelor's Degree <tibble [17 × 44]> Independent_At Le… #> 5 Republican  No College Degree            <tibble [50 × 44]> Republican_No Col… #> 6 Republican  At Least a Bachelor's Degree <tibble [45 × 44]> Republican_At Lea…  # group data to create nested data frame test_data %>%    dplyr::group_by(pid_f3, edu_f2) %>%    make_nested() #> # A tibble: 6 × 4 #>   pid_f3      edu_f2                       data               name               #>   <fct>       <fct>                        <list>             <chr>              #> 1 Democrat    No College Degree            <tibble [52 × 44]> Democrat_No Colle… #> 2 Democrat    At Least a Bachelor's Degree <tibble [46 × 44]> Democrat_At Least… #> 3 Independent No College Degree            <tibble [40 × 44]> Independent_No Co… #> 4 Independent At Least a Bachelor's Degree <tibble [17 × 44]> Independent_At Le… #> 5 Republican  No College Degree            <tibble [50 × 44]> Republican_No Col… #> 6 Republican  At Least a Bachelor's Degree <tibble [45 × 44]> Republican_At Lea…  # use group_by and nest_data  test_data %>%    dplyr::group_by(pid_f3) %>%    make_nested(edu_f2) #> # A tibble: 6 × 4 #>   pid_f3      edu_f2                       data               name               #>   <fct>       <fct>                        <list>             <chr>              #> 1 Democrat    No College Degree            <tibble [52 × 44]> Democrat_No Colle… #> 2 Democrat    At Least a Bachelor's Degree <tibble [46 × 44]> Democrat_At Least… #> 3 Independent No College Degree            <tibble [40 × 44]> Independent_No Co… #> 4 Independent At Least a Bachelor's Degree <tibble [17 × 44]> Independent_At Le… #> 5 Republican  No College Degree            <tibble [50 × 44]> Republican_No Col… #> 6 Republican  At Least a Bachelor's Degree <tibble [45 × 44]> Republican_At Lea…  # use different sep argument make_nested(test_data, c(pid_f3, edu_f2), sep = \":\") #> # A tibble: 6 × 4 #>   pid_f3      edu_f2                       data               name               #>   <fct>       <fct>                        <list>             <chr>              #> 1 Democrat    No College Degree            <tibble [52 × 44]> Democrat:No Colle… #> 2 Democrat    At Least a Bachelor's Degree <tibble [46 × 44]> Democrat:At Least… #> 3 Independent No College Degree            <tibble [40 × 44]> Independent:No Co… #> 4 Independent At Least a Bachelor's Degree <tibble [17 × 44]> Independent:At Le… #> 5 Republican  No College Degree            <tibble [50 × 44]> Republican:No Col… #> 6 Republican  At Least a Bachelor's Degree <tibble [45 × 44]> Republican:At Lea…"},{"path":"https://jdenn0514.github.io/adlgraphs/reference/make_percent.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a numeric vector to a percent — make_percent","title":"Convert a numeric vector to a percent — make_percent","text":"Convert numeric vector percent","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/make_percent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a numeric vector to a percent — make_percent","text":"","code":"make_percent(x, decimals = 2, scale = 100)"},{"path":"https://jdenn0514.github.io/adlgraphs/reference/make_percent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a numeric vector to a percent — make_percent","text":"x numeric vector want convert percentages decimals many decimals value rounded . Default 2 means show two decimal places, hundredth decimal. scale scaling factor: x multiplied scale formatting. useful underlying data small large. Default 100.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/make_percent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a numeric vector to a percent — make_percent","text":"character vector length x.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/make_percent.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a numeric vector to a percent — make_percent","text":"","code":"# here's the default scale of 100 x <- c(0.0163, 0.95, 0.0008, 0.002) make_percent(x) #> [1] \"1.63%\" \"95%\"   \"0.08%\" \"0.2%\"  #> attr(,\"transformation\") #> [1] \"Added a `%` symbol to `x`\"  # if the values have already been multiplied by 100 and you don't need to # transform them, then make the scale 1 x <- c(1.63, 95, 0.08, 0.2) make_percent(x, scale = 1) #> [1] \"1.63%\" \"95%\"   \"0.08%\" \"0.2%\"  #> attr(,\"transformation\") #> [1] \"Added a `%` symbol to `x`\"  # And if we want to round to the closest whole number set the digits to 0 x <- c(0.0163, 0.95, 0.0008, 0.002) make_percent(x, decimals = 0) #> [1] \"2%\"  \"95%\" \"0%\"  \"0%\"  #> attr(,\"transformation\") #> [1] \"Added a `%` symbol to `x`\""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/make_quarts.html","id":null,"dir":"Reference","previous_headings":"","what":"Create quartiles — make_quarts","title":"Create quartiles — make_quarts","text":"simple function takes numeric vector input returns factor vector labels indicating quartile .","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/make_quarts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create quartiles — make_quarts","text":"","code":"make_quarts(x)"},{"path":"https://jdenn0514.github.io/adlgraphs/reference/make_quarts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create quartiles — make_quarts","text":"x numeric vector.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/make_quarts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create quartiles — make_quarts","text":"factor vector four levels length x.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/num_rev.html","id":null,"dir":"Reference","previous_headings":"","what":"Reverse a numeric function — num_rev","title":"Reverse a numeric function — num_rev","text":"Reverse numeric variable maintaining variable value labels available. Also adds attribute describing transformation original variable underwent. Please check vignette better understanding exactly function .","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/num_rev.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reverse a numeric function — num_rev","text":"","code":"num_rev(x)"},{"path":"https://jdenn0514.github.io/adlgraphs/reference/num_rev.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reverse a numeric function — num_rev","text":"x vector class haven_labelled numeric","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/num_rev.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reverse a numeric function — num_rev","text":"numeric vector length x","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/num_rev.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reverse a numeric function — num_rev","text":"","code":"library(dplyr)  test_data %>%   # reverse the variable accept_isr   mutate(accept_isr_rev = num_rev(accept_isr)) %>%   select(starts_with(\"accept\")) #> # A tibble: 250 × 3 #>    accept_hamas              accept_isr                accept_isr_rev #>    <dbl+lbl>                 <dbl+lbl>                          <dbl> #>  1 3 [Somewhat unacceptable] 3 [Somewhat unacceptable]              2 #>  2 3 [Somewhat unacceptable] 3 [Somewhat unacceptable]              2 #>  3 4 [Totally unacceptable]  3 [Somewhat unacceptable]              2 #>  4 4 [Totally unacceptable]  1 [Totally acceptable]                 4 #>  5 4 [Totally unacceptable]  2 [Somewhat acceptable]                3 #>  6 3 [Somewhat unacceptable] 1 [Totally acceptable]                 4 #>  7 3 [Somewhat unacceptable] 2 [Somewhat acceptable]                3 #>  8 3 [Somewhat unacceptable] 3 [Somewhat unacceptable]              2 #>  9 4 [Totally unacceptable]  2 [Somewhat acceptable]                3 #> 10 4 [Totally unacceptable]  3 [Somewhat unacceptable]              2 #> # ℹ 240 more rows"},{"path":"https://jdenn0514.github.io/adlgraphs/reference/pct_conv.html","id":null,"dir":"Reference","previous_headings":"","what":"Make proper percent labels — pct_conv","title":"Make proper percent labels — pct_conv","text":"function wrapper around common data transformation done every time make frequency plot. changes x variable multiplying 100 creates new variable called pct_lab string x variable \"%\" symbol added.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/pct_conv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make proper percent labels — pct_conv","text":"","code":"pct_conv(data, x = pct, decimals = 1)"},{"path":"https://jdenn0514.github.io/adlgraphs/reference/pct_conv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make proper percent labels — pct_conv","text":"data data frame vector. Can left blank used piping x variable want convert percentage. value pct default always pct. decimals Number decimal places percent rounded ","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/pct_conv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make proper percent labels — pct_conv","text":"original data.frame found data two changes. column called \"pct\" multiplied 100 new column created called \"pct_lab\" pct \"%\" symbol end .","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/pct_conv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make proper percent labels — pct_conv","text":"","code":"library(dplyr) # get the frequencies of top andupdate  test_data %>%   get_freqs(top) %>%    pct_conv() #> # A tibble: 4 × 4 #>   top                       n   pct pct_lab #>   <dbl+lbl>             <int> <dbl> <chr>   #> 1 1 [Strongly agree]       25    10 10%     #> 2 2 [Somewhat agree]       85    34 34%     #> 3 3 [Somewhat disagree]    75    30 30%     #> 4 4 [Strongly disagree]    65    26 26%"},{"path":"https://jdenn0514.github.io/adlgraphs/reference/pivot_longer_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Pivot data from wide to long with value labels — pivot_longer_values","title":"Pivot data from wide to long with value labels — pivot_longer_values","text":"function wrapper around pivot_longer. function operates pretty much exact way uses variable labels variables specified cols make new value labels new variable created names_to variable.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/pivot_longer_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pivot data from wide to long with value labels — pivot_longer_values","text":"","code":"pivot_longer_values(data, cols, names_to, values_to, name_label = NA)"},{"path":"https://jdenn0514.github.io/adlgraphs/reference/pivot_longer_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pivot data from wide to long with value labels — pivot_longer_values","text":"data data frame pivot. cols <tidy-select> Columns pivot longer format. names_to character vector specifying new column columns create information stored column names data specified cols. length 0, NULL supplied, columns created. length 1, single column created contain column names specified cols. length >1, multiple columns created. case, one names_sep names_pattern must supplied specify column names split. also two additional character values can take advantage : NA discard corresponding component column name. \".value\" indicates corresponding component column name defines name output column containing cell values, overriding values_to entirely. values_to string specifying name column create data stored cell values. names_to character containing special .value sentinel, value ignored, name value column derived part existing column names. name_label Add variable label new column names columns","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/pivot_longer_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pivot data from wide to long with value labels — pivot_longer_values","text":"longer data.frame.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/prettytable.html","id":null,"dir":"Reference","previous_headings":"","what":"Make pretty HTML tables — prettytable","title":"Make pretty HTML tables — prettytable","text":"Takes data frame object makes pretty table. designed work within adlgraphs package work objects class tbl_df, tbl, data.frame. important note, moment, works frequency tables columns labelled pct n. see changing frequency tables. Nevertheless, working adding functionality, including mean tables, tables factor loadings, linear regression coefficients, others.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/prettytable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make pretty HTML tables — prettytable","text":"","code":"prettytable(x)"},{"path":"https://jdenn0514.github.io/adlgraphs/reference/prettytable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make pretty HTML tables — prettytable","text":"x object turn pretty table.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/refactor.html","id":null,"dir":"Reference","previous_headings":"","what":"Assign or reorder factor levels manually — refactor","title":"Assign or reorder factor levels manually — refactor","text":"low level function allows convert character vector factor manually assign levels, manually reassign levels factor vector. similar factor() key difference keeps original attributes x.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/refactor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assign or reorder factor levels manually — refactor","text":"","code":"refactor(x, new_levels, ordered = NA)"},{"path":"https://jdenn0514.github.io/adlgraphs/reference/refactor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assign or reorder factor levels manually — refactor","text":"x factor character vector new_levels list new levels factor ordered Logical. Specifies factor ordered. Default NA, checks see factor ordered uses determine ordered","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/refactor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assign or reorder factor levels manually — refactor","text":"factor variable length x","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/refactor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assign or reorder factor levels manually — refactor","text":"","code":"# load the dplyr library so we can use `mutate()` library(dplyr)  # let's manually reorder the factor levels of `edu_f` from the `test_data` # data set so it's in a random order that I specify test_data <- test_data %>%   mutate(     # make the new reordered variable     edu_f_reordered = refactor(       # specify we are reordering the `edu_f` variable       x = edu_f,       new_levels = c(         \"Bachelor's Degree\",         \"Graduate Degree\",         \"High School or Less\",         \"Some College\"       )     )   )  # let's check the new levels levels(test_data$edu_f_reordered) #> [1] \"Bachelor's Degree\"   \"Graduate Degree\"     \"High School or Less\" #> [4] \"Some College\"        # and compare them to the original levels levels(test_data$edu_f) #> [1] \"High School or Less\" \"Some College\"        \"Bachelor's Degree\"   #> [4] \"Graduate Degree\""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/remove_bogus.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove bots, duplicates, and/or speedsters from a data frame — remove_bogus","title":"Remove bots, duplicates, and/or speedsters from a data frame — remove_bogus","text":"function removes respondents suspected bots duplicate survey takers, well previews, people 18, speedsters data frame. made specifically surveys programmed Qualtrics.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/remove_bogus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove bots, duplicates, and/or speedsters from a data frame — remove_bogus","text":"","code":"remove_bogus(data, duration, cut_off = 0.3)"},{"path":"https://jdenn0514.github.io/adlgraphs/reference/remove_bogus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove bots, duplicates, and/or speedsters from a data frame — remove_bogus","text":"data data frame. duration name time duration variable. Must string. cut_off Specify percentage median time used remove speedsters. Default 0.3, means people time complete 0.3 median completion time removed.","code":""},{"path":[]},{"path":"https://jdenn0514.github.io/adlgraphs/reference/remove_bot_dupe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove bots and/or duplicates from a data frame — remove_bot_dupe","text":"","code":"remove_bot_dupe(data)"},{"path":"https://jdenn0514.github.io/adlgraphs/reference/remove_bot_dupe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove bots and/or duplicates from a data frame — remove_bot_dupe","text":"data data.frame object want operate ","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/remove_bot_dupe.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Remove bots and/or duplicates from a data frame — remove_bot_dupe","text":"remove_bot_dupe() deprecated function remove_bogus() thing also removes speedsters. funciton removes respondents suspected bots duplicate survey takers, well previews people 18 data frame. made specifically surveys programmed Qualtrics.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/row_means.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate row means — row_means","title":"Calculate row means — row_means","text":"function makes easy calculate row means multiple variables. uses <tidy-select> syntax determine variables include operation.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/row_means.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate row means — row_means","text":"","code":"row_means(cols, label = NULL, na.rm = TRUE)"},{"path":"https://jdenn0514.github.io/adlgraphs/reference/row_means.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate row means — row_means","text":"cols <tidy-select> variables want use calculating row means label string specifying variable label. specified, defaults NULL na.rm Determines NAs removed. Default TRUE.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/row_means.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate row means — row_means","text":"function also option adding new variable label attribute. Furthermore, automatically adds two attributes: transformation variables. trasnformation attribute basically explains variable created saying \"Took average ...\" lists variables included. variables just lists variables included operation.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/row_means.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate row means — row_means","text":"","code":"# load the dplyr package library(dplyr) # make a new df with the new column new <- test_data %>%    mutate(     sdo_avg_new = row_means(       # specify the variables involved in the row means       cols = c(top_rev:deserving_flip),       # specify the variable label       label = \"Social Dominance Orientation Average\",       # remove NAs       na.rm = TRUE     )   )  # Show that the attributes attributes(new$sdo_avg_new) #> $label #> [1] \"Social Dominance Orientation Average\" #>  #> $transformation #> [1] \"Took the average of top_rev, inferior_rev, dominate_flip, deserving_flip\" #>  #> $variables #> [1] \"top_rev\"        \"inferior_rev\"   \"dominate_flip\"  \"deserving_flip\" #>   # show the output new$sdo_avg_new #>   [1] 1.75 1.75 2.50 1.50 2.50 1.00 2.00 2.00 2.25 1.00 1.00 2.00 2.00 2.00 1.75 #>  [16] 2.25 2.75 1.00 2.25 1.25 3.00 2.00 1.75 3.25 1.25 2.00 1.00 1.00 2.50 1.00 #>  [31] 2.50 1.50 1.50 2.25 3.00 1.00 2.25 1.75 1.75 2.00 1.25 1.75 1.75 1.00 1.50 #>  [46] 1.00 3.50 2.25 1.00 2.25 2.25 2.00 2.00 1.75 1.75 2.00 1.00 2.25 2.00 2.25 #>  [61] 1.50 2.00 2.25 1.50 1.25 2.25 1.50 1.25 1.50 1.50 2.25 1.25 1.00 2.25 1.75 #>  [76] 3.25 1.00 1.75 2.25 1.75 2.25 1.00 1.00 1.00 2.25 1.00 2.00 2.00 1.25 2.00 #>  [91] 2.25 2.25 2.50 2.25 1.00 1.50 1.50 2.50 2.75 2.00 2.50 1.50 2.50 1.50 1.75 #> [106] 2.25 2.50 2.25 1.00 1.00 2.25 1.75 1.50 2.25 2.00 2.00 2.75 1.50 2.00 2.25 #> [121] 2.00 1.25 1.25 1.00 3.00 1.00 2.50 2.50 2.75 2.25 2.00 3.00 2.25 3.00 3.00 #> [136] 2.75 3.00 1.25 2.75 2.75 2.50 1.00 2.00 2.00 1.75 2.25 1.75 2.25 1.75 2.25 #> [151] 3.25 2.00 2.00 1.50 1.75 2.50 1.50 3.00 1.25 1.25 2.50 2.75 1.50 1.50 2.75 #> [166] 1.25 1.25 1.75 1.25 1.25 1.00 1.50 2.50 2.00 2.00 1.00 1.25 2.25 2.50 1.75 #> [181] 2.50 1.50 1.75 2.50 1.00 2.75 1.75 1.50 1.00 2.25 2.00 1.25 1.75 1.75 3.00 #> [196] 2.00 1.00 1.00 1.25 1.50 2.50 2.50 2.25 1.50 1.25 1.00 1.00 1.75 1.25 2.00 #> [211] 1.25 2.25 1.75 2.00 2.50 1.00 2.50 2.50 1.75 2.00 2.00 1.00 2.00 1.50 2.00 #> [226] 1.00 1.00 2.50 1.00 2.25 1.75 2.50 1.75 1.00 1.00 2.00 2.75 2.25 2.75 1.75 #> [241] 2.50 1.25 2.75 1.50 1.75 1.50 2.50 2.25 2.00 1.50 #> attr(,\"label\") #> [1] \"Social Dominance Orientation Average\" #> attr(,\"transformation\") #> [1] \"Took the average of top_rev, inferior_rev, dominate_flip, deserving_flip\" #> attr(,\"variables\") #> [1] \"top_rev\"        \"inferior_rev\"   \"dominate_flip\"  \"deserving_flip\""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/scale_adl.html","id":null,"dir":"Reference","previous_headings":"","what":"ADL color scale — scale_adl","title":"ADL color scale — scale_adl","text":"Create sequential, diverging, categorical color scales using official ADL colors.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/scale_adl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ADL color scale — scale_adl","text":"","code":"scale_adl(   type = \"categorical\",   palette = \"base\",   aesthetic = c(\"fill\", \"color\"),   n,   direction = \"original\",   legend_order = \"original\",   legend_title = NULL,   wrap_legend_labels = NULL,   ... )"},{"path":"https://jdenn0514.github.io/adlgraphs/reference/scale_adl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ADL color scale — scale_adl","text":"type character string indicating type color palette. two options: Categorical used diverging discrete palettes. Sequential used sequential palettes. palette character string indicating name palette (e.g., \"likert_6\"). info see different color palettes available, check adl_palettes. aesthetic Character string vector character strings listing name(s) aesthetic(s) scale works . can useful, example, apply colour settings colour fill aesthetics time, via aesthetic = c(\"colour\", \"fill\") n lifecycle::deprecated() direction character string indicating order colors reversed. two values: \"original\" keep original order colors \"reverse\" flips order colors legend_order character string indicating order colors labels legend reversed. Currently two options: \"original\" keeps original order legend \"reverse\" flips order legend legend_title character string indicating title legend . three options : legend_title left blank. happens title scale taken first mapping used aesthetic legend_title = \"none\" happens title removed legend legend_title = \"string\" happens legend title becomes whatever string (case title \"string\") wrap_legend_labels Determine number characters per line labels. Uses label_wrap wrap text across multiple lines. left blank, defaults NULL wrap labels . ... additional arguments pass discrete_scale","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/scale_adl.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ADL color scale — scale_adl","text":"function scale_adl() created survey data.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/select_groups.html","id":null,"dir":"Reference","previous_headings":"","what":"Select variables from the group variable — select_groups","title":"Select variables from the group variable — select_groups","text":"Select variables group variable","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/select_groups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select variables from the group variable — select_groups","text":"","code":"select_groups(group, data)"},{"path":"https://jdenn0514.github.io/adlgraphs/reference/select_groups.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select variables from the group variable — select_groups","text":"group tidy_select columns group data data data set columns (make sure exist)","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/set_question_preface.html","id":null,"dir":"Reference","previous_headings":"","what":"Set a new attribute called question_preface — set_question_preface","title":"Set a new attribute called question_preface — set_question_preface","text":"function adds new attribute called question_preface based variable label value label. mostly variables come survey questions allow multiple selections (.e., \"Select apply\" style question).","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/set_question_preface.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set a new attribute called question_preface — set_question_preface","text":"","code":"set_question_preface(x, data, custom, update_var_label = TRUE)"},{"path":"https://jdenn0514.github.io/adlgraphs/reference/set_question_preface.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set a new attribute called question_preface — set_question_preface","text":"x vector object, name column data.frame, actual data.frame object. data data.frame tibble object. specified x name column data.frame. custom string provided, sets question_preface attribute manually. nothing provided, use existing variable label value label removing value label variable label. See examples see practice. update_var_label Logical. TRUE, uses value label set new variable label.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/set_question_preface.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set a new attribute called question_preface — set_question_preface","text":"vector type length x additional attribute.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/set_question_preface.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set a new attribute called question_preface — set_question_preface","text":"","code":"library(adlgraphs) # create a fake dataset df <- data.frame(   x_1 = sample(c(0, 1), replace = TRUE, size = 10),   x_2 = sample(c(0, 1), replace = TRUE, size = 10),   x_3 = sample(c(0, 1), replace = TRUE, size = 10),   x_4 = sample(c(0, 1), replace = TRUE, size = 10) )   # set the variable labels attr(df$x_1, \"label\") <- \"Which of the following colors do you like? Blue\" attr(df$x_2, \"label\") <- \"Which of the following colors do you like? Red\" attr(df$x_3, \"label\") <- \"Which of the following colors do you like? Yellow\" attr(df$x_4, \"label\") <- \"Which of the following colors do you like? Purple\"   # set the value labels attr(df$x_1, \"labels\") <- c(\"Blue\" = 1) attr(df$x_2, \"labels\") <- c(\"Red\" = 1) attr(df$x_3, \"labels\") <- c(\"Yellow\" = 1) attr(df$x_4, \"labels\") <- c(\"Purple\" = 1)  # now let's add a question_preface attribute df$x_1 <- set_question_preface(df$x_1) # check to make sure it showed up attributes(df$x_1) #> $label #> [1] \"Blue\" #>  #> $labels #> Blue  #>    1  #>  #> $question_preface #> [1] \"Which of the following colors do you like?\" #>  # now let's not update the variable label df$x_2 <- set_question_preface(df$x_2, update_var_label = FALSE) # check the attributes attributes(df$x_2) #> $label #> [1] \"Which of the following colors do you like? Red\" #>  #> $labels #> Red  #>   1  #>  #> $question_preface #> [1] \"Which of the following colors do you like?\" #>  # can also separate the variable and data like so df$x_3 <- set_question_preface(\"x_3\", data = df) # check the attributes attributes(df$x_3) #> $label #> [1] \"Yellow\" #>  #> $labels #> Yellow  #>      1  #>  #> $question_preface #> [1] \"Which of the following colors do you like?\" #>  # add a custom string df$x_4 <- set_question_preface(df$x_4, custom = \"Colors liked\") # check the attributes attributes(df$x_4) #> $label #> [1] \"Purple\" #>  #> $labels #> Purple  #>      1  #>  #> $question_preface #> [1] \"Colors liked\" #>"},{"path":"https://jdenn0514.github.io/adlgraphs/reference/stars_pval.html","id":null,"dir":"Reference","previous_headings":"","what":"Add stars based on the p-value — stars_pval","title":"Add stars based on the p-value — stars_pval","text":"Add stars based p-value","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/stars_pval.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add stars based on the p-value — stars_pval","text":"","code":"stars_pval(p.value)"},{"path":"https://jdenn0514.github.io/adlgraphs/reference/stars_pval.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add stars based on the p-value — stars_pval","text":"p.value vector p-values determine stars give","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/stat_density_quant.html","id":null,"dir":"Reference","previous_headings":"","what":"Stat for density ridgeline plots — stat_density_quant","title":"Stat for density ridgeline plots — stat_density_quant","text":"stat default stat used geom_density_quant get around making . Nevertheless, still works geom_density. similar stat_density stat_density_ridges built sort combination two. One key differences function two one uses Sheather & Jones (\"sj\") default bandwidth selector. done better bandwidth selector Silverman's (\"nrd0\") default two functions. addition, function allows add quantile lines similar stat_density_ridges.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/stat_density_quant.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stat for density ridgeline plots — stat_density_quant","text":"","code":"stat_density_quant(   mapping = NULL,   data = NULL,   geom = geom,   position = \"stack\",   ...,   bw = \"sj\",   adjust = 1,   kernel = \"gaussian\",   n = 512,   na.rm = FALSE,   bounds = c(-Inf, Inf),   show.legend = NA,   inherit.aes = TRUE,   quantile_lines = FALSE,   calc_ecdf = FALSE,   quantiles = 4 )"},{"path":"https://jdenn0514.github.io/adlgraphs/reference/stat_density_quant.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stat for density ridgeline plots — stat_density_quant","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot2::ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See ggplot2::fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). geom geometric object use display data. ggplot2::geom_density default. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. ... arguments passed ggplot2::layer()'s params argument. arguments broadly fall one 4 categories . Notably, arguments position argument, aesthetics required can passed .... Unknown arguments part 4 categories ignored. Static aesthetics mapped scale, fixed value apply layer whole. example, colour = \"red\" linewidth = 3. geom's documentation Aesthetics section lists available options. 'required' aesthetics passed params. Please note passing unmapped aesthetics vectors technically possible, order required length guaranteed parallel input data. constructing layer using stat_*() function, ... argument can used pass parameters geom part layer. example stat_density(geom = \"area\", outline.type = \"\"). geom's documentation lists parameters can accept. Inversely, constructing layer using geom_*() function, ... argument can used pass parameters stat part layer. example geom_area(stat = \"density\", adjust = 0.5). stat's documentation lists parameters can accept. key_glyph argument ggplot2::layer() may also passed .... can one functions described key glyphs, change display layer legend. bw smoothing bandwidth used. numeric, standard deviation smoothing kernel. character, rule choose bandwidth, listed stats::bw.nrd(). Note automatic calculation bandwidth take weights account. Default sj. adjust multiplicate bandwidth adjustment. makes possible adjust bandwidth still using bandwidth estimator. example, adjust = 1/2 means use half default bandwidth. kernel Kernel. See list available kernels density(). n number equally spaced points density estimated, power two, see density() details na.rm FALSE (default), removes missing values warning.  TRUE silently removes missing values. bounds Known lower upper bounds estimated data. Default c(-Inf, Inf) means (finite) bounds. bound finite, boundary effect default density estimation corrected reflecting tails outside bounds around closest edge. Data points outside bounds removed warning. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. ggplot2::borders(). quantile_lines Logical. Determines quantile lines drawn . FALSE default. calc_ecdf TRUE, stat_density_ridges calculates empirical cumulative distribution function (ecdf) returns variable ecdf variable quantile. can mapped onto aesthetics via stat(ecdf) stat(quantile), respectively. quantiles Sets number quantiles data broken . Used either calc_ecdf = TRUE quantile_lines = TRUE. quantiles integer data cut many equal quantiles. vector probabilities data cut .","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/test_data.html","id":null,"dir":"Reference","previous_headings":"","what":"dataset_title, — test_data","title":"dataset_title, — test_data","text":"dataset_description,","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/test_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"dataset_title, — test_data","text":"","code":"test_data"},{"path":"https://jdenn0514.github.io/adlgraphs/reference/test_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"dataset_title, — test_data","text":"data frame 250 rows 46 variables: resp_id Unique ID Respondent wts Survey weighting variable edu highest level school completed highest degree received? pid_f3 Political Partisanship pol_part_rally Attended political rally, speech campaign event pol_part_worked Worked volunteered political party, candidate campaign pol_part_contact Contacted elected official pol_part_money Contributed money candidate running public office group working elect candidate pol_part_social Publicly expressed support political candidate Facebook, Twitter/X, Instagram, social media pol_part_attended Attended government meetings community, city town council meetings pol_part_none None top ideal society requires groups top others bottom inferior groups people simply inferior groups dominate one group dominate society deserving Groups bottom just deserving groups top special unfair groups society receive special treatment government harder harder time succeeding parents controlled Much lives controlled plots hatched secrecy small Even though live democracy, people always run things anyway run people really \"run\" country known voters big_events Big events like wars, recessions, outcomes elections controlled small groups people working secret rest us accept_hamas close family member supported Hamas, family friends find … accept_isr close family member supported Israel, family friends find … dislike_jews many close friends/family dislike Jews stick_together Jews stick together Americans values Jews share values. head Jews always like head things. loyal Jews loyal Israel America. business_power Jews much power business world. wall_street Jews much control influence Wall Street. trad_n ADL Index edu_f highest level school completed highest degree received? edu_f2 highest level school completed highest degree received? top_rev ideal society requires groups top others bottom inferior_rev groups people simply inferior groups dominate_flip One group dominate society deserving_flip Groups bottom just deserving groups top sdo_sum Social Dominance Orientation sdo_avg Social Dominance Orientation pol_part_sum Political Participation controlled_rev Much lives controlled plots hatched secrecy small_rev Even though live democracy, people always run things anyway run_rev people really \"run\" country known voters big_events_rev Big events like wars, recessions, outcomes elections controlled small groups people working secret rest us acts_sum Conspiracy Theory Belief acts_avg Conspiracy Theory Belief","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/theme_coef.html","id":null,"dir":"Reference","previous_headings":"","what":"Theme for coefficient plots — theme_coef","title":"Theme for coefficient plots — theme_coef","text":"function creates theme coefficient plots.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/theme_coef.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Theme for coefficient plots — theme_coef","text":"","code":"theme_coef(   base_size = 12,   grid_x_only = TRUE,   facet_title_margin_top = base_size,   facet_title_margin_bottom = half_line,   facet_title_margin_right = 0.8 * half_line,   facet_title_margin_left = 0.8 * half_line,   ... )"},{"path":"https://jdenn0514.github.io/adlgraphs/reference/theme_coef.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Theme for coefficient plots — theme_coef","text":"base_size Base font size, given pts. Also controls spacing graph. grid_x_only Logical. Determines x-axis grid lines (vertical lines) appear. FALSE, default, grid lines appear. TRUE, x-axis grid lines appear y-axis grid lines disappear. facet_title_margin_top margin facet title, specified pts. Default 0.8 * half_line. facet_title_margin_bottom margin beneath facet title, specified pts. Default 0.8 * half_line. facet_title_margin_right margin right facet title, specified pts. Default 0.8 * half_line. facet_title_margin_left margin left facet title, specified pts. Default 0.8 * half_line. ... arguments passed onto theme_default().","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/theme_default.html","id":null,"dir":"Reference","previous_headings":"","what":"Default theme — theme_default","title":"Default theme — theme_default","text":"function creates default theme ADL theme functions built . functions similarly theme_gray, default ggplot2 themes built theme_gray. noted works best dpi set 400 either Quarto Rmarkdown doc ggsave. function creates default theme ADL theme functions built . functions similarly theme_gray, default ggplot2 themes built theme_gray. noted works best dpi set 400 either Quarto Rmarkdown doc ggsave.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/theme_default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default theme — theme_default","text":"","code":"theme_default(   base_size = 12,   base_line_size = base_size/24,   base_rect_size = base_size/24,   base_lineheight = 1.1,   legend_position = \"right\",   axis_text = TRUE,   axis_text_x = TRUE,   axis_text_y = TRUE,   grid = TRUE,   grid_x_only = FALSE,   grid_y_only = FALSE,   grid_major = TRUE,   grid_minor = TRUE,   grid_major_x = TRUE,   grid_major_y = TRUE,   grid_minor_x = TRUE,   grid_minor_y = TRUE,   facet_title_bold = FALSE,   facet_title_size = base_size * 0.8,   facet_title_margin_top = 0.8 * half_line,   facet_title_margin_bottom = 0.8 * half_line,   facet_title_margin_right = 0.8 * half_line,   facet_title_margin_left = 0.8 * half_line,   panel_spacing_x = 0,   panel_spacing_y = 0 )  theme_default(   base_size = 12,   base_line_size = base_size/24,   base_rect_size = base_size/24,   base_lineheight = 1.1,   legend_position = \"right\",   axis_text = TRUE,   axis_text_x = TRUE,   axis_text_y = TRUE,   grid = TRUE,   grid_x_only = FALSE,   grid_y_only = FALSE,   grid_major = TRUE,   grid_minor = TRUE,   grid_major_x = TRUE,   grid_major_y = TRUE,   grid_minor_x = TRUE,   grid_minor_y = TRUE,   facet_title_bold = FALSE,   facet_title_size = base_size * 0.8,   facet_title_margin_top = 0.8 * half_line,   facet_title_margin_bottom = 0.8 * half_line,   facet_title_margin_right = 0.8 * half_line,   facet_title_margin_left = 0.8 * half_line,   panel_spacing_x = 0,   panel_spacing_y = 0 )"},{"path":"https://jdenn0514.github.io/adlgraphs/reference/theme_default.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default theme — theme_default","text":"base_size Base font size, given pts. Also controls spacing graph. base_line_size Base size line elements. base_rect_size Base size rect elements. base_lineheight Base line height text legend_position position legend. Options : \"left\", \"right\", \"top\", \"bottom\", \"none\". \"none\" removes legend. \"right\" default. axis_text Logical. Determines axes labels. TRUE, default, axes labelled. FALSE, neither axis labelled. Note, controls axes. want remove one axis, use axis_text_x axis_text_y. axis_text_x Logical. Determines x-axis labels. TRUE, default, x-axis labels shown. FALSE, x-axis labels removed plot. axis_text_y Logical. Determines y-axis labels. TRUE, default, y-axis labels shown. FALSE, y-axis labels removed plot. grid Logical. Determines grid lines appear. TRUE, default, grid lines appear. FALSE, grid lines disappear. grid_x_only Logical. Determines x-axis grid lines (vertical lines) appear. FALSE, default, grid lines appear. TRUE, x-axis grid lines appear y-axis grid lines disappear. grid_y_only Logical. Determines y-axis grid lines (horizontal lines) appear. FALSE, default, grid lines appear. TRUE, y-axis grid lines appear  x-axis grid lines disappear. grid_major Logical. Determines major grid lines appear. TRUE, default, major grid lines appear. FALSE, major grid lines disappear. grid_minor Logical. Determines minor grid lines appear. TRUE, default, minor grid lines appear. FALSE, minor grid lines disappear. grid_major_x Logical. Determines major x-axis grid lines appear. TRUE, default, major x-axis grid lines appear. FALSE, major x-axis grid lines disappear. grid_major_y Logical. Determines major y-axis grid lines appear. TRUE, default, major y-axis grid lines appear. FALSE, major y-axis grid lines disappear. grid_minor_x Logical. Determines minor x-axis grid lines appear. TRUE, default, minor x-axis grid lines appear. FALSE, minor x-axis grid lines disappear. grid_minor_y Logical. Determines minor y-axis grid lines appear. TRUE, default, minor y-axis grid lines appear. FALSE, minor y-axis grid lines disappear. facet_title_bold Logical. Determines facet labels bold . Default FALSE. facet_title_size Size facet titles, specified pts. Default base_size * 0.8. facet_title_margin_top margin facet title, specified pts. Default 0.8 * half_line. facet_title_margin_bottom margin beneath facet title, specified pts. Default 0.8 * half_line. facet_title_margin_right margin right facet title, specified pts. Default 0.8 * half_line. facet_title_margin_left margin left facet title, specified pts. Default 0.8 * half_line. panel_spacing_x Horizontal spacing different panels faceting graph, given pts. Default 0. panel_spacing_y Vertical spacing different panels faceting graph, given pts. Default 0.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/theme_h_bar.html","id":null,"dir":"Reference","previous_headings":"","what":"Theme for non-stacked horizontal bar plots — theme_h_bar","title":"Theme for non-stacked horizontal bar plots — theme_h_bar","text":"function creates theme non-stacked horizontal bar plots.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/theme_h_bar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Theme for non-stacked horizontal bar plots — theme_h_bar","text":"","code":"theme_h_bar(   base_size = 12,   legend_position = \"none\",   axis_text_x = FALSE,   grid = FALSE,   ... )"},{"path":"https://jdenn0514.github.io/adlgraphs/reference/theme_h_bar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Theme for non-stacked horizontal bar plots — theme_h_bar","text":"base_size Base font size, given pts. Also controls spacing graph. legend_position position legend. Options : \"left\", \"right\", \"top\", \"bottom\", \"none\". \"none\" removes legend. \"none\" default. axis_text_x Logical. Determines x-axis labels. FALSE, default, x-axis labels removed. TRUE, x-axis labels shown. grid Logical. Determines grid lines appear. FALSE, default, grid lines disappear. TRUE, grid lines appear. ... arguments passed onto theme_default().","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/theme_h_stack.html","id":null,"dir":"Reference","previous_headings":"","what":"Theme for horizontal stacked bar plots — theme_h_stack","title":"Theme for horizontal stacked bar plots — theme_h_stack","text":"function creates theme horizontally stacked bar plots.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/theme_h_stack.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Theme for horizontal stacked bar plots — theme_h_stack","text":"","code":"theme_h_stack(   base_size = 12,   legend_position = \"top\",   axis_text = FALSE,   grid = FALSE,   ... )"},{"path":"https://jdenn0514.github.io/adlgraphs/reference/theme_h_stack.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Theme for horizontal stacked bar plots — theme_h_stack","text":"base_size Base font size, given pts. Also controls spacing graph. legend_position position legend. Options : \"left\", \"right\", \"top\", \"bottom\", \"none\". \"none\" removes legend. \"top\" default. axis_text Logical. Determines axes labels. FALSE,  default, neither axis labelled. TRUE, axes labelled. grid Logical. Determines grid lines appear. FALSE, default, grid lines disappear. TRUE, grid lines appear. ... arguments passed onto theme_default().","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/theme_v_bar.html","id":null,"dir":"Reference","previous_headings":"","what":"Theme for vertical non-stacked bar plots — theme_v_bar","title":"Theme for vertical non-stacked bar plots — theme_v_bar","text":"function creates theme non-stacked vertical bar plots","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/theme_v_bar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Theme for vertical non-stacked bar plots — theme_v_bar","text":"","code":"theme_v_bar(   base_size = 12,   legend_position = \"none\",   axis_text_y = FALSE,   grid = FALSE,   ... )"},{"path":"https://jdenn0514.github.io/adlgraphs/reference/theme_v_bar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Theme for vertical non-stacked bar plots — theme_v_bar","text":"base_size Base font size, given pts. Also controls spacing graph. legend_position position legend. Options : \"left\", \"right\", \"top\", \"bottom\", \"none\". \"none\" removes legend. \"none\" default. axis_text_y Logical. Determines y-axis labels. FALSE, default, y-axis labels removed. TRUE, y-axis labels shown. grid Logical. Determines grid lines appear. FALSE, default, grid lines disappear. TRUE, grid lines appear. ... arguments passed onto theme_default().","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/write_word_table.html","id":null,"dir":"Reference","previous_headings":"","what":"This mainly an internal package but can be used externally — write_word_table","title":"This mainly an internal package but can be used externally — write_word_table","text":"mainly internal package can used externally","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/write_word_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This mainly an internal package but can be used externally — write_word_table","text":"","code":"write_word_table(x, doc)"},{"path":"https://jdenn0514.github.io/adlgraphs/reference/wtd_corr.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate individual weighted correlations — wtd_corr","title":"Calculate individual weighted correlations — wtd_corr","text":"one main worker functions behind get_corr(). calculates weighted correlations outputs data one row tibble.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/wtd_corr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate individual weighted correlations — wtd_corr","text":"","code":"wtd_corr(data, x, y, wt, decimals = 3)"},{"path":"https://jdenn0514.github.io/adlgraphs/reference/wtd_corr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate individual weighted correlations — wtd_corr","text":"data object type data.frame tibble. piping data function, required. x, y Can either character strings symbols. Name two variables data want calculate correlation . wt Can either character strings symbols. Weights. Add weighting variable want get weighted correlations decimals Number decimals number rounded . Default 3.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/wtd_sd.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate weighted standard deviation — wtd_sd","title":"Calculate weighted standard deviation — wtd_sd","text":"mainly internal function, available everyone since find function calculates weighted standard deviation.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/wtd_sd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate weighted standard deviation — wtd_sd","text":"","code":"wtd_sd(x, wt = NULL, na.rm = TRUE)"},{"path":"https://jdenn0514.github.io/adlgraphs/reference/wtd_sd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate weighted standard deviation — wtd_sd","text":"x numeric vector want calculate SD wt numeric vector indicating weights used calculation na.rm Logical. Indicates NAs removed ","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/wtd_sd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate weighted standard deviation — wtd_sd","text":"number indicating weighted SD x","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/reference/wtd_sd.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate weighted standard deviation — wtd_sd","text":"Thank team Hmisc creation Hmisc::wtd.var(). function created without . simplified source code took square root.","code":""},{"path":[]},{"path":[]},{"path":"https://jdenn0514.github.io/adlgraphs/news/index.html","id":"bogus-0-3-61","dir":"Changelog","previous_headings":"Deprecated the bot_dupe functions in favor of bogus functions","what":"bogus","title":"adlgraphs 0.3.61","text":"functions operate virtually bot_dupe, also remove speedsters.","code":""},{"path":[]},{"path":[]},{"path":"https://jdenn0514.github.io/adlgraphs/news/index.html","id":"row_means-0-3-6","dir":"Changelog","previous_headings":"added two new functions row_means() and make_nested()","what":"row_means","title":"adlgraphs 0.3.6","text":"allows calculate row means","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/news/index.html","id":"make_nested-0-3-6","dir":"Changelog","previous_headings":"added two new functions row_means() and make_nested()","what":"make_nested","title":"adlgraphs 0.3.6","text":"produces nested data frame","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/news/index.html","id":"fixing-some-bugs-in-get_corr-0-3-6","dir":"Changelog","previous_headings":"added two new functions row_means() and make_nested()","what":"Fixing some bugs in get_corr()","title":"adlgraphs 0.3.6","text":"Previously get_corr() bugs fixed. Also added ability group multiple variables","code":""},{"path":[]},{"path":[]},{"path":"https://jdenn0514.github.io/adlgraphs/news/index.html","id":"flip_val-0-3-53","dir":"Changelog","previous_headings":"added a new function flip_val() and updated a vignette","what":"flip_val","title":"adlgraphs 0.3.53","text":"allows flip valence variable","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/news/index.html","id":"updated-the-vignette-for-data_transformations-0-3-53","dir":"Changelog","previous_headings":"added a new function flip_val() and updated a vignette","what":"updated the vignette for data_transformations","title":"adlgraphs 0.3.53","text":"Simplified vignette added information flip_val()","code":""},{"path":[]},{"path":"https://jdenn0514.github.io/adlgraphs/news/index.html","id":"added-a-new-function-set_question_preface-0-3-52","dir":"Changelog","previous_headings":"","what":"Added a new function set_question_preface()","title":"adlgraphs 0.3.52","text":"Allows set question preface update variable label","code":""},{"path":[]},{"path":[]},{"path":"https://jdenn0514.github.io/adlgraphs/news/index.html","id":"get_diffs-0-3-51","dir":"Changelog","previous_headings":"Updated an existing function","what":"get_diffs","title":"adlgraphs 0.3.51","text":"Added two new arguments, show_means, show_pct_change.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/news/index.html","id":"updated-the-documentation-for-most-function-0-3-51","dir":"Changelog","previous_headings":"","what":"Updated the documentation for most function","title":"adlgraphs 0.3.51","text":"Added return value functions","code":""},{"path":[]},{"path":[]},{"path":"https://jdenn0514.github.io/adlgraphs/news/index.html","id":"get_diffs-0-3-5","dir":"Changelog","previous_headings":"Create a new function","what":"get_diffs","title":"adlgraphs 0.3.5","text":"function calculates difference means.","code":""},{"path":[]},{"path":"https://jdenn0514.github.io/adlgraphs/news/index.html","id":"added-an-additional-argument-to-make_factor-0-3-42","dir":"Changelog","previous_headings":"","what":"added an additional argument to make_factor()","title":"adlgraphs 0.3.42","text":"added new argument allows specify levels. fully implemented yet, however.","code":""},{"path":[]},{"path":[]},{"path":"https://jdenn0514.github.io/adlgraphs/news/index.html","id":"funky_freqs-0-3-41","dir":"Changelog","previous_headings":"created an experimental function and updated another","what":"funky_freqs","title":"adlgraphs 0.3.41","text":"experimental function hopefully become basis get_freqs three times fast.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/news/index.html","id":"get_loadings-0-3-41","dir":"Changelog","previous_headings":"created an experimental function and updated another","what":"get_loadings","title":"adlgraphs 0.3.41","text":"Adding argument sorts data","code":""},{"path":[]},{"path":[]},{"path":"https://jdenn0514.github.io/adlgraphs/news/index.html","id":"get_all-corr-0-3-4","dir":"Changelog","previous_headings":"created a new function and updated another","what":"get_all corr","title":"adlgraphs 0.3.4","text":"function makes easy get correlations variables data set.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/news/index.html","id":"decently-big-changes-to-dunnet-0-3-4","dir":"Changelog","previous_headings":"created a new function and updated another","what":"Decently big changes to dunnet","title":"adlgraphs 0.3.4","text":"Added new functionality data can grouped performing dunnet() improved group argument include functionality grouping multiple variables.","code":""},{"path":[]},{"path":[]},{"path":"https://jdenn0514.github.io/adlgraphs/news/index.html","id":"flatten_labelled_vec-0-3-3","dir":"Changelog","previous_headings":"created two new functions","what":"flatten_labelled_vec","title":"adlgraphs 0.3.3","text":"Flatten labelled vector. example vector values 1 0 1 “Yes” 0 “”, output string reads: 1 = \"Yes\", 0 = \"\".","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/news/index.html","id":"remove_bot_dupe-get_bot_dupe-and-export_bot_dupe-0-3-3","dir":"Changelog","previous_headings":"created two new functions","what":"remove_bot_dupe, get_bot_dupe, and export_bot_dupe","title":"adlgraphs 0.3.3","text":"three functions make easy remove bots duplicates, remove non-bots duplicates, export bots duplicates.","code":""},{"path":[]},{"path":[]},{"path":"https://jdenn0514.github.io/adlgraphs/news/index.html","id":"get_corr-0-3-3","dir":"Changelog","previous_headings":"Created a new function","what":"get_corr","title":"adlgraphs 0.3.3","text":"Calculate weighted correlations among level group","code":""},{"path":[]},{"path":[]},{"path":"https://jdenn0514.github.io/adlgraphs/news/index.html","id":"dunnett-0-3-2","dir":"Changelog","previous_headings":"Created a new function","what":"dunnett","title":"adlgraphs 0.3.2","text":"Perform Dunnett’s multiple comparisons test","code":""},{"path":[]},{"path":[]},{"path":"https://jdenn0514.github.io/adlgraphs/news/index.html","id":"attr_var_label-0-3-1","dir":"Changelog","previous_headings":"A bunch of new functions","what":"attr_var_label","title":"adlgraphs 0.3.1","text":"Get variable label vectors dataframes","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/news/index.html","id":"attr_val_label-0-3-1","dir":"Changelog","previous_headings":"A bunch of new functions","what":"attr_val_label","title":"adlgraphs 0.3.1","text":"Get value labels vectors dataframes","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/news/index.html","id":"attr_levels-0-3-1","dir":"Changelog","previous_headings":"A bunch of new functions","what":"attr_levels","title":"adlgraphs 0.3.1","text":"Get factor levels vectors dataframes","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/news/index.html","id":"attr_note-0-3-1","dir":"Changelog","previous_headings":"A bunch of new functions","what":"attr_note","title":"adlgraphs 0.3.1","text":"Get note attribute vectors dataframes","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/news/index.html","id":"attr_survey_flow-0-3-1","dir":"Changelog","previous_headings":"A bunch of new functions","what":"attr_survey_flow","title":"adlgraphs 0.3.1","text":"Get survey_flow attribute vectors dataframes","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/news/index.html","id":"attr_question_preface-0-3-1","dir":"Changelog","previous_headings":"A bunch of new functions","what":"attr_question_preface","title":"adlgraphs 0.3.1","text":"Get question_preface attribute vectors dataframes","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/news/index.html","id":"attr_transformation-0-3-1","dir":"Changelog","previous_headings":"A bunch of new functions","what":"attr_transformation","title":"adlgraphs 0.3.1","text":"get transformation attribute vectors dataframes","code":""},{"path":[]},{"path":[]},{"path":"https://jdenn0514.github.io/adlgraphs/news/index.html","id":"adl_bar_plots-0-2-4","dir":"Changelog","previous_headings":"Minor addition","what":"adl_bar_plots","title":"adlgraphs 0.2.4","text":"Added new argument enables wrapping facet labels.","code":""},{"path":[]},{"path":[]},{"path":"https://jdenn0514.github.io/adlgraphs/news/index.html","id":"make_factor-0-2-3","dir":"Changelog","previous_headings":"This update mainly consisted of bug fixes","what":"make_factor","title":"adlgraphs 0.2.3","text":"work factor character vectors updated factor vectors now just returns factor vector character vectors converts factor","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/news/index.html","id":"prettytable-0-2-3","dir":"Changelog","previous_headings":"This update mainly consisted of bug fixes","what":"prettytable","title":"adlgraphs 0.2.3","text":"Fixed bug returned variable name instead variable labels","code":""},{"path":[]},{"path":[]},{"path":"https://jdenn0514.github.io/adlgraphs/news/index.html","id":"make_factor-0-2-2","dir":"Changelog","previous_headings":"New functions","what":"make_factor","title":"adlgraphs 0.2.2","text":"function takes labelled vector uses value labels turn factor contains two arguments: x ordered","code":""},{"path":[]},{"path":"https://jdenn0514.github.io/adlgraphs/news/index.html","id":"pivot_longer_values-0-2-2","dir":"Changelog","previous_headings":"Bug fixes and small additions","what":"pivot_longer_values","title":"adlgraphs 0.2.2","text":"Added new argument enables add variable label variable contains names (names_to) Using internal functions reduce external dependencies","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/news/index.html","id":"attr_var_label-0-2-2","dir":"Changelog","previous_headings":"Bug fixes and small additions","what":"attr_var_label","title":"adlgraphs 0.2.2","text":"Updated internal code gives attribute “label” Previously “label” NULL, give values “labels”","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":"https://jdenn0514.github.io/adlgraphs/news/index.html","id":"codebook-0-2-1","dir":"Changelog","previous_headings":"New functions","what":"codebook","title":"adlgraphs 0.2.1","text":"function allows create new data.frame object column different attribute row different variable Contains one argument: df","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/news/index.html","id":"prettytable-0-2-1","dir":"Changelog","previous_headings":"New functions","what":"prettytable","title":"adlgraphs 0.2.1","text":"Add function using get_freqs() make pretty gt table Contains one argument: x Hoping continue building means, coefficients, possibly ","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/news/index.html","id":"refactor-0-2-1","dir":"Changelog","previous_headings":"New functions","what":"refactor","title":"adlgraphs 0.2.1","text":"allows reorder levels factor variable Contains one argument: x","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/news/index.html","id":"stat_density_quant-0-2-1","dir":"Changelog","previous_headings":"New functions","what":"stat_density_quant","title":"adlgraphs 0.2.1","text":"Create density plot quantile lines bunch arguments: mapping, data, geom, position, ..., bw, adjust, kernel, n, na.rm, bounds, show.legend, inherit.aes, quantile_lines, calc_ecdf, quantiles may still buggy still need create accompanying geom","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":"https://jdenn0514.github.io/adlgraphs/news/index.html","id":"get_means-0-2-0","dir":"Changelog","previous_headings":"New functions","what":"get_means","title":"adlgraphs 0.2.0","text":"function makes easy calculate means confidence intervals. contains four arguments: df, x, group, wt important argument group allows calculate means grouping variable. operates similar .argument dplyr functions.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/news/index.html","id":"get_freqs-0-2-0","dir":"Changelog","previous_headings":"New functions","what":"get_freqs","title":"adlgraphs 0.2.0","text":"makes easy calculate weighted frequencies. contains first four arguments get_means also contains fifth argument, cross_tab. setting cross_tab = TRUE pivot table appears like cross tabs.","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/news/index.html","id":"make_percent-0-2-0","dir":"Changelog","previous_headings":"New functions","what":"make_percent","title":"adlgraphs 0.2.0","text":"Add % symbol numeric vector result convert character vector Digits specifies many decimal places percentage rounded Scale determines scale numeric vector values multiplied","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/news/index.html","id":"make_df_oxy-0-2-0","dir":"Changelog","previous_headings":"New functions","what":"make_df_oxy","title":"adlgraphs 0.2.0","text":"simple function makes easier create documentation data sets leveraging underlying variable labels dataset","code":""},{"path":[]},{"path":"https://jdenn0514.github.io/adlgraphs/news/index.html","id":"get_freq_table-0-2-0","dir":"Changelog","previous_headings":"Bug fixes and new features","what":"get_freq_table","title":"adlgraphs 0.2.0","text":"Now arguments accept either strings symbols, making easier use functional programming also contains new argument show_genpop enables determine whether want column showing frequencies general population .","code":""},{"path":"https://jdenn0514.github.io/adlgraphs/news/index.html","id":"adl_bar_plots-0-2-0","dir":"Changelog","previous_headings":"Bug fixes and new features","what":"adl_bar_plots","title":"adlgraphs 0.2.0","text":"Fixed bug mean plots didn’t work dodged vertical charts.","code":""}]
