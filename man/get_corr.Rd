% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_corr.R
\name{get_corr}
\alias{get_corr}
\title{Calculate weighted correlations}
\usage{
get_corr(data, x, y, group = NULL, wt = NULL, decimals = 3)
}
\arguments{
\item{data}{An object of type data.frame or tibble. If piping the data into the
function, this is not required.}

\item{x, y}{Can be either character strings or symbols. Name of two variables
in the data you want to calculate the correlation between.}

\item{group}{Can be either a character string or a symbol. The grouping
variable.}

\item{wt}{Can be either character strings or symbols. Weights. Add if
you have a weighting variable and want to get weighted correlations}

\item{decimals}{Number of decimals each number should be rounded to. Default
is 3.}
}
\value{
A tibble showing correlations (\code{correlation}), number of observations
(\code{n}), low and high confidence intervals (\code{conf.low}, \code{conf.high}),
the p-value (\code{p_value}), and stars indicating it's statistical significance.
If data is of class \code{"grouped_df"} or the \code{group} argument is specified,
it will return one row for each unique observation if one group is provided
and one row per unique combination of observations if multiple groups are used.
}
\description{
This function calculates weighted Pearson correlations between two variables.
It also allows you to group the data and calculate correlations along each
level of the grouping variable. If data is not grouped and no group is
specified, then it will return the same output as \code{\link[=wtd_corr]{wtd_corr()}}.
}
\examples{
# load the dplyr for piping and grouping
library(dplyr)

# Let's first do a simple correlation where we pipe in the data
test_data \%>\% get_corr(x = top, y = sdo_sum)

# Repeat but with weights
test_data \%>\% get_corr(x = top, y = sdo_sum, wt = wts)

# Now let's get the correlatoin among only people with a bachelor's degree
test_data \%>\% 
  filter(edu_f2 == "At Least a Bachelor's Degree") \%>\% 
  get_corr(x = top, y = sdo_sum, wt = wts)

# Now let's get it for each education level. Two ways of doing this:
# The first is to group the data ahead of time
test_data \%>\% 
  group_by(edu_f) \%>\% 
  get_corr(x = top, y = sdo_sum, wt = wts)

# The second is to use the group argument
test_data \%>\% get_corr(x = top, y = sdo_sum, group = edu_f, wt = wts)

}
