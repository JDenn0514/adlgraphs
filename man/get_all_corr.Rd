% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_all_corr.R
\name{get_all_corr}
\alias{get_all_corr}
\title{Get correlations for a combination of variables}
\usage{
get_all_corr(data, cols, wt = NULL, remove_redundant = TRUE)
}
\arguments{
\item{data}{A data frame or tibble object}

\item{cols}{<\code{\link[=dplyr_tidy_select]{tidy-select}}> The variables you want
to get the correlations for.}

\item{wt}{A variable to use as the weights for weighted correlations}

\item{remove_redundant}{Should rows where the two variables are the same be
kept or removed? If \code{TRUE}, the default, they are removed.}
}
\description{
\code{get_all_corr} makes it easy to calculate correlations across
every variable in a data frame or select set of variables. It also
works with grouped data frames so you can check correlations among
the levels of several grouping variables.
}
\examples{
# load dplyr and adlgraphs
library(dplyr)
library(adlgraphs)

# To get correlations with three variables you can do it three ways
# 1. Create a new data frame with only the columns you want
new_data <- test_data \%>\% dplyr::select(top:dominate)
get_all_corr(new_data)

# 2. Using dplyr::select() and pipes
test_data \%>\% 
  dplyr::select(c(top:dominate)) \%>\% 
  get_all_corr()

# 3. Use the `cols` argument
get_all_corr(test_data, cols = c(top:dominate))
# or 
test_data \%>\% get_all_corr(c(top:dominate))

# To get weighted correlations just specify the `wt` argument
test_data \%>\% get_all_corr(c(top:dominate), wt = wts)

# You can also calculate grouped correlations. For example, if
# you were interested in comparing the weighted correlations 
# among people with a college degree vs those without one, you 
# would do it like this:
test_data \%>\% 
  dplyr::group_by(edu_f2) \%>\% 
  get_all_corr(c(top:dominate), wt = wts)



}
