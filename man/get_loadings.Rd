% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_loadings.R
\name{get_loadings}
\alias{get_loadings}
\title{Calculate the loadings in factor analysis}
\usage{
get_loadings(
  data,
  cols,
  group,
  labels = NULL,
  threshold = 0.4,
  print = "short",
  nfactors = 1,
  fm = "pa",
  rotate = "oblimin",
  sort = TRUE,
  decimals = 3,
  na.rm = FALSE
)
}
\arguments{
\item{data}{Either a data created using \code{psych::fa()} or a
data.frame}

\item{cols}{<\code{\link[dplyr:dplyr_tidy_select]{tidy-select}}> The variables you want
to get the correlations for.}

\item{group}{<\code{\link[dplyr:dplyr_tidy_select]{tidy-select}}> A selection of columns to
group the data by in addition to \code{treats}. This operates very similarly
to \code{.by} from dplyr (for more info on that see \link[dplyr:dplyr_by]{?dplyr_by}).
See examples to see how it operates.}

\item{labels}{Either a character vector or data frame. Creates a
new column called "labels" for each variable in the factor
analysis.}

\item{threshold}{The threshold with which to not show the factor
loadings. Default is 0.4.}

\item{print}{The printing method. Default is "short" which only prints
a dataframe of the factor loadings. The alternative is "long" but
that has not been created yet.}

\item{nfactors}{Number of factors to extract, default is 1.}

\item{fm}{Factoring method used in the factor analysis. Default is
"pa". For more information on the various methods see the \code{fm}
argument in the \code{psych::fa()} function.}

\item{rotate}{The type of factor rotation to perform when conducting
the factor analysis. Default is "oblimin". For more information on
the different rotation methods available, check the documentation
for the \code{rotate} argument in \code{psych::fa()}.}

\item{sort}{Logical. If \code{TRUE}, the default, the loadings are sorted
largest to smallest. If \code{FALSE}, no sorting occurs.}

\item{decimals}{Number of decimals each number should be rounded to. Default
is 3.}

\item{na.rm}{Logical. Default is \code{TRUE} which removes NAs prior to
calculation.}
}
\value{
A data.frame showing factor loadings.
}
\description{
This function creates a data frame of factor loadings from
a factor analysis. It can be on an object that was created with
\code{psych::fa()} or it can be used on a data frame. If used on a
data frame, it will run it on all columns in the data frame. Also
works on grouped data frame if you want to check how the factor
loadings may change along the different levels of a group.
}
\examples{

library(dplyr)
library(psych)

# first lets get our data set
data <- test_data \%>\% 
  select(top:run)

# now create the fa object
model <- fa(data, nfactors = 1, fm = "pa", rotate = "oblimin")
# get just the loadings
get_loadings(model)
# get the loadings with the variable labels based on data object
get_loadings(model, data)

# we can do all of this in one step with pipes
test_data \%>\% 
  # select only the variables we want in the factor analysis
  select(top:run) \%>\% 
  # run the factor analysis
  fa(., nfactors = 1, fm = "pa", rotate = "oblimin") \%>\% 
  # get the loadings
  get_loadings()

# Now let's remove the threshold for the loadings and include labels
test_data \%>\% 
  # select only the variables we want in the factor analysis
  select(top:run) \%>\% 
  # run the factor analysis
  fa(., nfactors = 1, fm = "pa", rotate = "oblimin") \%>\% 
  # specify threshold is 0
  get_loadings(threshold = 0, labels = data)

# alternatively, we could skip the fa step entirely like so
test_data \%>\% 
  # select only the variables we want in the factor analysis
  select(top:run) \%>\% 
  # specify number of factors, rotation, and factor method
  get_loadings()

# we can also specify the number of factors, rotation, and factoring method
test_data \%>\% 
  # select only the variables we want in the factor analysis
  select(top:run) \%>\% 
  # specify number of factors, rotation, factor method, and threshold
  get_loadings(nfactors = 2, rotate = "varimax", fm = "minres", threshold = 0.2) 

# we can also calculate the factor loadings by a grouping variable
test_data \%>\% 
  # select the grouping variable and the variables to be used in factor analysis
  select(edu_f2, top:run) \%>\% 
  # group the data
  group_by(edu_f2) \%>\% 
  # specify number of factors, and the threshold
  get_loadings(nfactors = 2, threshold = 0.2) 

# let's repeat the previous analysis, but use internal arguments to select the 
# columns to include in the factor analysis and the grouping variables
test_data \%>\% 
  # group indicates we want to run the factor analysis across each level in edu_f2
  # nfactors specifies we want two factors
  # threshold sets the cut off for the loadings
  get_loadings(
    # specify the variables to include in the factor analysis
    cols = c(top:run), 
    # specify the group variable, run separate factor analyses for each level
    group = edu_f2, 
    # specify two factors
    nfactors = 2, 
    # specify the loadings are cut off at |0.2|
    threshold = 0.2
  ) 



}
