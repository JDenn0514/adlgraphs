% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/attr_var_label.R
\name{attr_var_label}
\alias{attr_var_label}
\title{Get variable label}
\usage{
attr_var_label(x, data, unlist, if_null = NULL)
}
\arguments{
\item{x}{A vector object, the name of a column in a \code{data.frame}, or an
an actual \code{data.frame} object.}

\item{data}{A \code{data.frame} or \code{tibble} object. This should only be specified
when \code{x} is only the name of a column in a \code{data.frame}.}

\item{unlist}{Logical. If \code{TRUE}, the default, returns a named vector. If
\code{FALSE}, returns a list. This only works when \code{x} is a \code{data.frame}}

\item{if_null}{String. This determines what to return should there be no
variable label. There are three options:

\if{html}{\out{<div class="sourceCode">}}\preformatted{- `NULL` - This is the default. Will return `NULL`

- "name" - This returns the variable name

- "NA" - This returns an `NA` value
}\if{html}{\out{</div>}}}
}
\value{
If \code{x} is a variable or vector, a string containing the "label"
attribute, if one is present, is returned. If \code{x} is a \code{data.frame} then a
named vector or list with the "label" attribute from each variable is
returned.
}
\description{
This function makes it easy to get the variable labels from either an
individual vector or a data frame. NOTE: it is not possible to set or modify
the variable labels with this function.
}
\examples{
# load dplyr so we can see how it might work in a typical workflow
library(dplyr)
# check for an individual vector
attr_var_label(test_data$top)
# get the variable label for the entire data set
attr_var_label(test_data)
# same, but as a list
attr_var_label(test_data, unlist = FALSE)

# now let's do it on a variable without a label
top <- sample(c(1:3), 10, replace = TRUE)
# if no label is present and if_null = "name", it will use the variable name
attr_var_label(top, if_null = "name")
# if it's se to "NA" it will give NA
attr_var_label(top, if_null = "NA")


}
