% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/case_when_fct.R
\name{case_when_fct}
\alias{case_when_fct}
\title{\code{case_when} with factor levels}
\usage{
case_when_fct(..., .default = NULL)
}
\arguments{
\item{...}{<\code{\link[rlang:dyn-dots]{dynamic-dots}}> A sequence of two-sided
formulas. The left hand side (LHS) determines which values match this case.
The right hand side (RHS) provides the replacement value.

The LHS inputs must evaluate to logical vectors.

The RHS inputs will be coerced to their common type.

All inputs will be recycled to their common size. That said, we encourage
all LHS inputs to be the same size. Recycling is mainly useful for RHS
inputs, where you might supply a size 1 input that will be recycled to the
size of the LHS inputs.

\code{NULL} inputs are ignored.}

\item{.default}{The value used when all of the LHS inputs return either
\code{FALSE} or \code{NA}.

\code{.default} must be size 1 or the same size as the common size computed
from \code{...}.

\code{.default} participates in the computation of the common type with the RHS
inputs.

\code{NA} values in the LHS conditions are treated like \code{FALSE}, meaning that
the result at those locations will be assigned the \code{.default} value. To
handle missing values in the conditions differently, you must explicitly
catch them with another condition before they fall through to the
\code{.default}. This typically involves some variation of \code{is.na(x) ~ value}
tailored to your usage of \code{case_when()}.

If \code{NULL}, the default, a missing value will be used.}
}
\description{
Recode a variable using the \code{dplyr::case_match()} syntax
}
