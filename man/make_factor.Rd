% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/make_factor.R
\name{make_factor}
\alias{make_factor}
\title{Convert a labelled vector into a factor}
\usage{
make_factor(
  x,
  levels = NULL,
  ordered = FALSE,
  drop_levels = TRUE,
  force = TRUE,
  na.rm = FALSE
)
}
\arguments{
\item{x}{A vector with value labels. Can be numeric, character, or a factor}

\item{levels}{You can supply levels to be used if the vector is a character or
factor. It is not clear how this will fit in with the rest of the function
so you might get weird results at first.}

\item{ordered}{Logical. Determines if the factor be ordered. Defaults to \code{TRUE.}}

\item{drop_levels}{Logical. Determines if unused factor levels should be dropped.
Defaults to \code{TRUE.}}

\item{force}{Logical. Determines if \code{x} should be forced to a vector even
if there are no value labels. Defaults to \code{TRUE.}}

\item{na.rm}{Logical. Determines if tags should be removed from NAs. Defaults
to \code{FALSE}.}
}
\value{
A factor vector of same length as \code{x}.
}
\description{
#' @description
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#experimental}{\figure{lifecycle-experimental.svg}{options: alt='[Experimental]'}}}{\strong{[Experimental]}}
}
\details{
\code{make_factor()} takes a labelled vector and converts it to a factor variable
using the value labels. This works with numeric, character, and factor vectors.

This function is very similar to \href{https://haven.tidyverse.org/reference/as_factor.html}{\code{haven::as_factor()}}
and
\href{https://strengejacke.github.io/sjlabelled/reference/as_label.html}{\code{sjlabelled::as_label()}}
and is heavily based on both. However, it has some key differences. The main
difference compared to both functions  is that \code{make_factor()} adds a
"transformation" attribute to the new variable  indicating how it was
created. You can see this in the examples.

Compared to \href{https://strengejacke.github.io/sjlabelled/reference/as_label.html}{\code{sjlabelled::as_label()}}
it is not as extensive. For example, while \href{https://strengejacke.github.io/sjlabelled/reference/as_label.html}{\code{sjlabelled::as_label()}}
works with data.frames and vectors, \code{make_factor()} only works with vectors.
In addition, \href{https://strengejacke.github.io/sjlabelled/reference/as_label.html}{\code{sjlabelled::as_label()}}
has many different arguments that enable you to control the appearance of the
labels, NAs, and other things. \code{make_factor()} on the other hand is much
simpler. Similarly,
\href{https://haven.tidyverse.org/reference/as_factor.html}{\code{haven::as_factor()}}
also enables more customization over the output of the labels. Another key
difference between this function and those is that if there are values without
labels, this function returns an error.

#' @section Lifecycle:
The \code{levels} argument in \code{make_factor()} has not been fully developed yet.
Currently, it only allows you to specify the levels on a character or
factor vector without value labels. If you try using it for anything else
it will not work. At some point, I would like to fully implement it though
so that you can specify the levels yourself, kind of like with \code{factor()}.
}
\examples{

library(adlgraphs)
library(dplyr)

# let's make a new variable and data set
new_df <- test_data \%>\%
  # convert top into a factor
  mutate(top_f = make_factor(top))

# compare the "top_f" to "top"
new_df \%>\% select(top, top_f)

# check the attributes to see the label and transformation
attributes(new_df$top_f)

}
